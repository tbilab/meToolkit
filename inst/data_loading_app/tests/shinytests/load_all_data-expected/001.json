{
  "input": {
    "data_loader-dataset_selection": "rs13283456",
    "data_loader-dataset_selection-selectized": "",
    "data_loader-genome": {
      "name": [
        "id_to_snp.csv"
      ],
      "size": [
        6908
      ],
      "type": [
        "text/csv"
      ],
      "datapath": [
        "0.csv"
      ]
    },
    "data_loader-phenome": {
      "name": [
        "id_to_phenome.csv"
      ],
      "size": [
        515206
      ],
      "type": [
        "text/csv"
      ],
      "datapath": [
        "0.csv"
      ]
    },
    "data_loader-phewas": {
      "name": [
        "phewas_results.csv"
      ],
      "size": [
        142700
      ],
      "type": [
        "text/csv"
      ],
      "datapath": [
        "0.csv"
      ]
    },
    "data_loader-preLoadedData": 0,
    "main_app-network_plot_main_dashboard-snp_filter": false
  },
  "output": {
    "data_loader-preloaded_snps": {
      "html": "<div class=\"form-group shiny-input-container\">\n  <label class=\"control-label\" for=\"data_loader-dataset_selection\">Select a pre-loaded dataset:<\/label>\n  <div>\n    <select id=\"data_loader-dataset_selection\"><option value=\"rs13283456\" selected>rs13283456<\/option><\/select>\n    <script type=\"application/json\" data-for=\"data_loader-dataset_selection\" data-nonempty=\"\">{}<\/script>\n  <\/div>\n<\/div>\n<button id=\"data_loader-preLoadedData\" type=\"button\" class=\"btn btn-default action-button\">Use preloaded data<\/button>\n<hr/>",
      "deps": [
        {
          "name": "selectize",
          "version": "0.11.2",
          "src": {
            "href": "shared/selectize"
          },
          "meta": null,
          "script": null,
          "stylesheet": "css/selectize.bootstrap3.css",
          "head": "<!--[if lt IE 9]>\n<script src=\"shared/selectize/js/es5-shim.min.js\"><\/script>\n<![endif]-->\n<script src=\"shared/selectize/js/selectize.min.js\"><\/script>",
          "attachment": null,
          "package": null,
          "all_files": true
        }
      ]
    },
    "main_app-info_panel_main_dashboard-info_banner_metoolkit": {
      "x": {
        "data": {
          "snp": "rs13283456",
          "maf_exome": 0.149,
          "maf_sel": 0.186186186186186,
          "annotations": {
            "key": [
              "rsid",
              "name",
              "chr",
              "gene",
              "minor allele",
              "ExAC maf",
              "consequence",
              "impact",
              "symbol",
              "gene id",
              "HGVSp"
            ],
            "value": [
              "rs13283456",
              "exm784337",
              "9",
              "PTGES2",
              "A",
              "8.237e-06",
              "missense variant",
              "moderate",
              "PTGES2",
              "ENSG00000148334",
              "ENSP00000345341.6:p.Arg298Leu"
            ]
          }
        },
        "type": "list",
        "container": "div",
        "options": {
          "colors": {
            "light_grey": "#f7f7f7",
            "med_grey": "#d9d9d9",
            "dark_grey": "#bdbdbd",
            "light_red": "#fcbba1",
            "dark_red": "#ef3b2c",
            "light_blue": "#4292c6",
            "green": "#74c476"
          },
          "instructions": "<div>\n  <h2>How To Use<\/h2>\n  <h3>Interactive Phewas Manhattan Plot<\/h3>\n  <p>Use the Manhattan plot to select your codes of interest by dragging a box on main plot or searching/selecting with the table.<\/p>\n  <p>Once you have your desired codes selected press 'Update Network' button at top of pane to update the network data with individuals possessing the selected codes.<\/p>\n  <h3>Comorbidity Upset Plot<\/h3>\n  <p>The upset plot allows you to see basic statistics about comorbidity patterns in the selected subset of codes, such as number of patients with a pattern and the risk of that pattern occuring in individuals with at least one copy of the minor allele.<\/p>\n  <p>Clicking on a given pattern in the upset plot will highlight the patients with that pattern in the below network plot.<\/p>\n  <h3>Subject-Phecode Bipartite Network<\/h3>\n  <p>The network plot provides a direct look at the individual-level data. You can click on codes to select them for isolation or deletion from the current selection.<\/p>\n<\/div>"
        },
        "script": "var d3Script = function(d3, r2d3, data, div, width, height, options, theme, console) {\nthis.d3 = d3;\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/helpers.js */\n// Helper functions for all visualizations\n\n// Turn number into a given number of decimal places\nfunction format_val(d, places = 3){\n  return d3.format(`.${places}`)(d);\n}\n\n// number formatters\nconst countFormat = d3.format(\",d\");\nconst CiFormat = d3.format(\".2f\");\nconst pValFormat = d3.format(\"0.2\");\nconst toPercent = d3.format(\".1%\");\n\n\n// Compare two tuples as equal.\n// E.g.\n// tuples_equal([1,2], [1,2]) = true\n// tuples_equal([1,2], [1,1]) = false\nfunction tuples_equal(a, b){\n  return (a[0] === b[0]) && (a[1] === b[1]);\n}\n\nfunction arrays_equal(arr_1, arr_2){\n  // If vecs are different lengths data must different\n  if(arr_1.length !== arr_1.length)\n    return false;\n\n  // If the union of the two arrays is the same size as both they're the same.\n  const size_of_union = unique([...arr_1, ...arr_2]).length;\n  return (size_of_union === arr_1.length) && (size_of_union === arr_2.length);\n}\n\n\n// Get unique set of values in an array\nfunction unique(data){\n  return d3.set(data).values();\n};\n\n\n// Takes a d3 selection of an SVG and downloads a svg for user\nfunction downloadPlot(svg){\n  const svgData = svg.node().outerHTML;\n  const svgBlob = new Blob([svgData], {type:\"image/svg+xml;charset=utf-8\"});\n  const svgUrl = URL.createObjectURL(svgBlob);\n  const downloadLink = document.createElement(\"a\");\n  downloadLink.href = svgUrl;\n  downloadLink.download = \"phecode_network.svg\";\n  document.body.appendChild(downloadLink);\n  downloadLink.click();\n  document.body.removeChild(downloadLink);\n}\n\n\n// Function to send a message back to shiny\nfunction send_to_shiny(type, payload, destination){\n  // Build message\n  const message_body = {\n    type: type,\n    // append the date to the begining so sent value always changes.\n    payload: [Date.now().toString(), ...payload]\n  };\n\n  // Make sure shiny is available before sending message\n  if(typeof Shiny !== 'undefined'){\n    // Send message off to server\n    Shiny.onInputChange(destination, message_body);\n  }\n}\n\nfunction setup_tooltip(dom_target, fields_to_show = ['code','OR']){\n\n  // Modify logic here.\n\n  const tooltip = dom_target.selectAppend('div.tooltip')\n    .st({\n      background:'rgba(255,255,255,0.8)',\n      position:'absolute',\n      padding: '0.25rem',\n      fontSize: 18,\n      border: '1px solid grey',\n      borderRadius: '5px'\n    });\n\n  const santatize_key = key => key.replace('_', ' ');\n\n  const santatize_value = val => typeof(val) === 'number' ? format_val(val): val;\n\n\n  const show = function(d, mouse_event){\n    // By filtering I avoid errors caused by not having data for something\n    const table_body = Object.keys(d)\n      .filter(key => fields_to_show.includes(key))\n      .sort((a,b) => a == 'code' ? -1 : 1) // trick to make sure code field shows up first\n      .reduce((table, key) =>\n        table + `<tr>\n                  <td style='text-align:right'>${santatize_key(key)}<\/td>\n                  <td style='text-align:left; padding-left: 1rem'>${santatize_value(d[key])}<\/td>\n                <\/tr>`, '');\n\n      const tooltip_content = `<table> ${table_body} <\/table>`;\n\n      const parent_width = +tooltip.parent().style('width').replace('px', '');\n      const parent_height = +tooltip.parent().style('height').replace('px', '');\n\n      //debugger;\n      const [event_x, event_y] = d3.clientPoint(tooltip.parent().node(), mouse_event);\n\n      const on_left_half = event_x < parent_width/2;\n      const on_upper_half = event_y < parent_height/2;\n\n      const offset = 5;\n\n      const style_positioning = {\n         display: 'block',\n       };\n\n      if(on_left_half){\n        style_positioning.left = event_x + offset;\n        style_positioning.right = 'auto';\n      } else {\n        style_positioning.right = parent_width - event_x + 2*offset;\n        style_positioning.left = 'auto';\n      }\n\n      if(on_upper_half){\n        style_positioning.top = event_y + offset;\n        style_positioning.bottom = 'auto';\n      } else {\n        style_positioning.bottom = parent_height - event_y + 2*offset;\n        style_positioning.top = 'auto';\n      }\n\n\n      //debugger;\n      tooltip\n       .st(style_positioning)\n       .html(tooltip_content);\n  };\n\n  const hide = function(){\n    tooltip\n      .st({\n        left: 0,\n        top: 0,\n        display: 'none',\n      });\n  };\n\n  // Start tooltip hidden.\n  hide();\n\n  return {show, hide}\n}\n\ndiv = d3.select(div.node());\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/info_panel/info_panel.js */\n// !preview r2d3 data=readr::read_rds(here::here('data/fake_info_data.rds')), options = readr::read_rds(here::here('data/fake_info_options.rds')),  container = 'div', dependencies = c(\"d3-jetpack\", here::here('inst/d3/helpers.js')), css = c(here::here('inst/d3/info_panel/info_panel.css'), here::here('inst/d3/helpers.css'), here::here('inst/css/common.css'))\n\nconst margin = {left: 15, right: 25};\nconst exome_color = 'steelblue';\nconst sel_color = 'orangered';\nconst maf_chart_start = width/3;\nconst label_gap= 35;\nconst point_r = 20;\nconst selection_height = height/2 - (point_r*1.1);\nconst exome_height =     height/2 + (point_r*1.1);\n\nconst {maf_exome, maf_sel, snp, annotations} = data;\n\n// Setup the divs for our viz\ndiv.classed('container', true);\n\n// ================================================================\n// Main layout of panel\n// ================================================================\nconst header = div.selectAppend('div.snp_name.header');\nconst maf_viz = div.selectAppend('div.maf_viz');\nconst location = div.selectAppend('div.location');\nconst instructions = div.selectAppend('div.instructions');\n\n// ================================================================\n// Title\n// ================================================================\nheader.selectAppend('h1')\n  .style('border-bottom', `1px solid ${options.colors.med_grey}`)\n  .style('width', '100%')\n  .text(data.snp);\n\n\n// ================================================================\n// Allele Frequency Viz\n// ================================================================\nmaf_viz.selectAppend('div.header')\n  .selectAppend('h2')\n  .text('Minor Allele Frequency');\n\nconst svg = maf_viz.selectAppend('svg');\nconst viz_w = +svg.style('width').replace('px', '') ;\nconst viz_h = +svg.style('height').replace('px', '');\n\n// Decide what the max displayed frequency will be. This is either one or a small padding around the max.\nconst max_freq = Math.min(1, Math.max(maf_exome, maf_sel)*1.2);\nconst x_scale = d3.scaleLinear().domain([0,max_freq]).range([margin.left, viz_w - margin.right]);\n\nconst draw_lollypop = (maf, name, title, i) => {\n  const dist_between_lines = 30;\n  const stick_size = 20;\n  const lollypop_size = stick_size/2;\n\n  const lollypop_g = svg.selectAppend(`g.${name}`)\n    .translate([x_scale(maf), (viz_h/2) + (-1 + 2*i)*dist_between_lines]);\n\n  lollypop_g\n    .selectAppend('line')\n    .at({\n      x2: -x_scale(maf)  + x_scale(0),\n      stroke: options.colors.dark_red,\n      strokeWidth: stick_size,\n    });\n\n  lollypop_g\n    .selectAppend('circle')\n    .at({\n      r: lollypop_size,\n      fill: options.colors.dark_red,\n    });\n\n  // Percent number\n  lollypop_g\n    .selectAppend('text.percent')\n    .at({\n      x: lollypop_size - 5,\n      y: 1,\n      textAnchor: 'end',\n      alignmentBaseline: 'middle',\n      dominantBaseline: 'middle',\n    })\n    .style('fill', 'white')\n    .text(toPercent(maf));\n\n  // Bar title\n  lollypop_g\n    .selectAppend('text.title')\n    .at({\n      x: -x_scale(maf) + x_scale(0),\n      y: -stick_size/2 - 3,\n    })\n    .text(title);\n};\n\ndraw_lollypop(maf_exome, 'cohort_freq', 'Entire Cohort', 0);\ndraw_lollypop(maf_sel, 'selection_freq', 'Current Selection', 1);\n\n\n// ================================================================\n// Location info\n// ================================================================\nlocation.selectAppend('div.header')\n  .selectAppend('h2')\n  .text('Annotations');\n\nif(annotations === null){\n  location.selectAppend('p')\n    .text('No annotations could be found for the SNP being investigated.');\n} else {\n  const loc_table_body = annotations.key\n    .reduce((table, key, i) =>\n          table + `<tr>\n                    <td style='text-align:right; font-weight: 500'>${key}<\/td>\n                    <td style='text-align:left; padding-left: 1rem; font-weight: 300'>${annotations.value[i]}<\/td>\n                  <\/tr>`, '');\n\n  location\n    .selectAppend('div.table_holder')\n    .selectAppend('table')\n    .style('font-size', '1rem')\n    .html(loc_table_body);\n}\n\n// ================================================================\n// Instruction text\n// ================================================================\ninstructions\n  .style('border-top', `1px solid ${options.colors.dark_grey}`)\n  .html(options.instructions);\n\n\n};",
        "style": "/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/info_panel/info_panel.css */\n\nbody {\n  box-sizing: border-box;\n}\n\nh1, h2 {\n  margin: 0;\n}\n\n.container {\n  height: 100%;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 3.5rem 1fr 3fr 5fr;\n  grid-column-gap: 0px;\n  grid-row-gap: 10px;\n}\n\n.header {\n  /*height: 2rem;*/\n}\n\n.header h1 {\n  padding: 0.5rem 0;\n}\n\n.header h1,\n.header h2 {\n  margin-left: 0.5rem;\n}\n\n\n.snp_name {\n  grid-area: 1 / 1 / 2 / 2;\n}\n\n.maf_viz {\n  grid-area: 2 / 1 / 3 / 2;\n}\n\n.instructions {\n  padding-left: 0.75rem;\n  grid-area: 4 / 1 / 5 / 2;\n}\n\n.maf_viz svg,\n.table_holder {\n  width: 100%;\n  height: calc(100% - 2rem);\n}\n\n\n.location {\n  grid-area: 3 / 1 / 4 / 2;\n  overflow-y: scroll;\n}\n\n.table_holder td:nth-of-type(1) {\n  font-weight: 500;\n}\n\n.table_holder {\n  overflow-y: scroll;\n/*\n  display: flex;\n  align-items: center;\n  justify-content: center;\n*/\n}\n\n\n\n.instructions {\n  padding-top: 1rem;\n  padding-left: 0.75rem;\n  padding-right: 0.75rem;\n  overflow-y: scroll;\n}\n\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/helpers.css */\n/*@import url('https://fonts.googleapis.com/css?family=Maven+Pro&display=swap');\n@import url('https://fonts.googleapis.com/css?family=Montserrat:300,400|Raleway&display=swap');\n*/\n\n\n/* ================================================== */\n/* Table */\n/* ================================================== */\n\n\n/* ================================================== */\n/* Table-wide style */\ntable {\n\tborder-collapse: collapse;\n\ttable-layout: fixed;\n}\n\n/*Individual cells for header and body */\ntd, th {\n\tpadding: 3px;\n\ttext-align: center;\n\tvertical-align: middle;\n}\n\n/* ================================================== */\n/* Table-body style */\ntbody{\n  display: block;\n  overflow: auto;\n}\n\n/* ================================================== */\n/* Header styling */\n\n/* Everything that composes the header */\nthead {\n  font-size: 0.95em;\n  font-weight: 600;\n}\n\n/* Entire row of the header */\nthead tr {\n   display: block;\n}\n\n/*Individual header cells */\nth {\n  background-color: #d9d9d9;\n}\n\n/* ================================================== */\n/* Row styling */\n\ntbody tr {\n  --row-height: 30px;\n  height: var(--row-height);\n}\n\n/* Zebra striping */\ntr:nth-of-type(even) {\n\tbackground: #f0f0f0;\n}\n\n/* Rows that have been selected */\ntr.selected{\n  background: #ff7f00;\n}\n\ntr.disabled{\n  opacity: 0.5;\n}\n\ntr div {\n  height: var(--row-height);\n  text-align: left;\n  overflow-x: auto;\n  width: 100%;\n  font-size: 0.8em;\n}\n\n/* Give text a bit of breathing room */\ntr div span {\n  padding-left: 0.2rem;\n}\n\n\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/css/common.css */\n/*\nFonts for app\n*/\n\nbody {\n  --main-text-color: #525252;\n}\n\nbody,\ntable,\nlabel,\nbutton,\nsvg text {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n}\n\n\nh1, h2, h3, h4 {\n  font-weight: 400;\n  color: #252525;\n}\n\np, span, table, label, button {\n  color: var(--main-text-color);\n}\n\nsvg text {\n  fill: var(--main-text-color);\n}\n\n\n\n/* Button Styles */\nbutton,\n.btn {\n  \t-moz-box-shadow:inset 0px 1px 0px 0px #ffffff;\n  \t-webkit-box-shadow:inset 0px 1px 0px 0px #ffffff;\n  \tbox-shadow:inset 0px 1px 0px 0px #ffffff;\n  \tbackground:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #ffffff), color-stop(1, #f6f6f6));\n  \tbackground:-moz-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\n  \tbackground:-webkit-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\n  \tbackground:-o-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\n  \tbackground:-ms-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\n  \tbackground:linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  \tfilter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#f6f6f6',GradientType=0);\n  \tbackground-color:#ffffff;\n  \t-moz-border-radius:6px;\n  \t-webkit-border-radius:6px;\n  \tborder-radius:6px;\n  \tborder:1px solid #dcdcdc;\n  \tdisplay:inline-block;\n  \tcursor:pointer;\n  \tpadding:6px 20px;\n  \ttext-decoration:none;\n  \ttext-shadow:0px 1px 0px #ffffff;\n  }\n\nbutton:hover,\n.btn:hover {\n\tbackground:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #f6f6f6), color-stop(1, #ffffff));\n\tbackground:-moz-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n\tbackground:-webkit-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n\tbackground:-o-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n\tbackground:-ms-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n\tbackground:linear-gradient(to bottom, #f6f6f6 5%, #ffffff 100%);\n\tfilter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#f6f6f6', endColorstr='#ffffff',GradientType=0);\n\tbackground-color:#f6f6f6;\n}\n\nbutton:active,\n.btn:active {\n\tposition:relative;\n\ttop:1px;\n}\n\nspan.btn {\n  font-weight: 200;\n}\n\nbutton.btn {\n  font-size: 1rem;\n  font-weight: 400;\n}",
        "version": 5,
        "theme": {
          "default": {
            "background": "#FFFFFF",
            "foreground": "#000000"
          },
          "runtime": null
        },
        "useShadow": true
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "d3v5",
          "version": "5.0.0",
          "src": {
            "href": "d3v5-5.0.0"
          },
          "meta": null,
          "script": "d3.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        },
        {
          "name": "d3-jetpack",
          "version": "2.0.9",
          "src": {
            "href": "d3-jetpack-2.0.9"
          },
          "meta": null,
          "script": "d3-jetpack.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        }
      ]
    },
    "main_app-manhattan_plot_main_dashboard-manhattan_plot_and_table": {
      "x": {
        "data": {
          "code": [
            "401.22",
            "401.30",
            "411.00",
            "411.10",
            "411.20",
            "411.30",
            "411.40",
            "411.41",
            "411.80",
            "411.90",
            "414.00",
            "414.20",
            "415.00",
            "415.10",
            "415.11",
            "415.20",
            "415.21",
            "416.00",
            "418.00",
            "418.10",
            "420.00",
            "420.20",
            "420.21",
            "420.22",
            "420.30",
            "425.00",
            "425.10",
            "425.11",
            "425.12",
            "425.20",
            "425.80",
            "426.00",
            "426.20",
            "426.21",
            "426.22",
            "426.23",
            "426.24",
            "426.25",
            "426.30",
            "426.31",
            "426.32",
            "426.40",
            "426.70",
            "426.80",
            "426.90",
            "426.91",
            "426.92",
            "427.00",
            "427.10",
            "427.11",
            "427.12",
            "427.20",
            "427.21",
            "427.22",
            "427.30",
            "427.40",
            "427.41",
            "427.42",
            "427.50",
            "427.60",
            "427.61",
            "427.70",
            "427.80",
            "427.90",
            "428.00",
            "428.10",
            "428.20",
            "428.30",
            "428.40",
            "429.00",
            "429.10",
            "429.20",
            "429.30",
            "429.90",
            "430.00",
            "430.10",
            "430.20",
            "430.30",
            "433.00",
            "433.10",
            "433.11",
            "433.12",
            "433.20",
            "433.21",
            "433.30",
            "433.31",
            "433.50",
            "433.60",
            "433.80",
            "440.00",
            "394.00",
            "394.10",
            "394.20",
            "394.40",
            "394.70",
            "395.00",
            "395.10",
            "395.20",
            "395.30",
            "395.40",
            "395.60",
            "396.00",
            "401.00",
            "401.10",
            "401.20",
            "401.21",
            "440.10",
            "440.20",
            "440.21",
            "440.22",
            "440.90",
            "441.00",
            "441.10",
            "441.20",
            "442.00",
            "442.10",
            "442.11",
            "442.20",
            "442.30",
            "442.40",
            "442.80",
            "443.00",
            "443.10",
            "443.70",
            "443.80",
            "443.90",
            "444.00",
            "444.10",
            "444.20",
            "446.00",
            "446.20",
            "446.30",
            "446.40",
            "446.50",
            "446.60",
            "446.80",
            "446.90",
            "447.00",
            "447.10",
            "447.70",
            "450.00",
            "451.00",
            "451.20",
            "452.00",
            "452.10",
            "452.20",
            "454.00",
            "454.10",
            "454.11",
            "455.00",
            "456.00",
            "457.00",
            "457.20",
            "457.30",
            "458.00",
            "458.10",
            "458.20",
            "458.90",
            "459.00",
            "459.10",
            "459.90",
            "751.10",
            "751.11",
            "751.12",
            "751.20",
            "751.21",
            "751.22",
            "751.30",
            "752.00",
            "752.10",
            "752.11",
            "752.20",
            "753.00",
            "753.20",
            "754.00",
            "754.20",
            "755.00",
            "755.10",
            "755.60",
            "755.61",
            "756.00",
            "756.10",
            "756.20",
            "756.21",
            "756.30",
            "758.00",
            "758.10",
            "759.00",
            "747.00",
            "747.10",
            "747.11",
            "747.12",
            "747.13",
            "747.20",
            "748.00",
            "749.00",
            "749.10",
            "749.20",
            "750.00",
            "750.10",
            "750.11",
            "750.13",
            "750.20",
            "750.21",
            "750.22",
            "751.00",
            "694.00",
            "694.10",
            "694.20",
            "695.00",
            "695.20",
            "695.22",
            "695.30",
            "695.40",
            "695.41",
            "695.42",
            "695.70",
            "695.80",
            "695.81",
            "695.90",
            "696.00",
            "696.40",
            "696.41",
            "696.42",
            "697.00",
            "698.00",
            "700.00",
            "701.00",
            "701.10",
            "701.20",
            "701.30",
            "701.40",
            "681.00",
            "701.50",
            "681.10",
            "701.60",
            "681.20",
            "702.00",
            "681.30",
            "702.10",
            "681.50",
            "702.20",
            "681.60",
            "703.00",
            "681.70",
            "703.10",
            "686.00",
            "704.00",
            "686.10",
            "704.10",
            "686.20",
            "704.11",
            "686.30",
            "704.12",
            "686.40",
            "704.20",
            "686.50",
            "704.80",
            "687.10",
            "705.00",
            "687.40",
            "705.10",
            "689.00",
            "690.00",
            "705.30",
            "705.80",
            "690.10",
            "706.00",
            "691.00",
            "691.30",
            "706.10",
            "706.20",
            "706.80",
            "707.00",
            "707.10",
            "707.20",
            "707.30",
            "709.00",
            "709.20",
            "709.30",
            "709.40",
            "709.50",
            "709.60",
            "709.70",
            "931.00",
            "938.00",
            "938.20",
            "939.00",
            "947.00",
            "578.90",
            "579.00",
            "579.20",
            "579.80",
            "530.90",
            "531.00",
            "531.10",
            "531.20",
            "531.30",
            "531.40",
            "531.50",
            "532.00",
            "535.00",
            "535.10",
            "535.20",
            "535.60",
            "535.80",
            "535.90",
            "536.00",
            "536.30",
            "536.70",
            "536.80",
            "537.00",
            "537.10",
            "539.00",
            "540.00",
            "540.10",
            "540.11",
            "550.00",
            "550.10",
            "550.20",
            "550.30",
            "550.40",
            "550.50",
            "550.60",
            "555.00",
            "555.10",
            "555.20",
            "555.21",
            "556.00",
            "556.10",
            "556.11",
            "557.00",
            "557.10",
            "558.00",
            "559.00",
            "560.00",
            "560.10",
            "560.20",
            "560.30",
            "560.40",
            "561.00",
            "562.00",
            "562.10",
            "562.20",
            "564.00",
            "564.10",
            "565.00",
            "565.10",
            "567.00",
            "568.00",
            "568.10",
            "569.00",
            "569.20",
            "571.00",
            "571.50",
            "571.51",
            "571.60",
            "571.80",
            "571.81",
            "572.00",
            "573.00",
            "573.20",
            "573.30",
            "573.40",
            "573.50",
            "573.60",
            "573.70",
            "573.90",
            "574.00",
            "574.10",
            "574.11",
            "574.12",
            "574.20",
            "574.30",
            "575.00",
            "575.10",
            "575.20",
            "575.70",
            "575.80",
            "577.00",
            "577.10",
            "577.20",
            "577.30",
            "578.00",
            "578.10",
            "578.20",
            "578.80",
            "520.00",
            "520.20",
            "521.00",
            "521.10",
            "522.00",
            "522.50",
            "523.00",
            "523.10",
            "523.30",
            "523.31",
            "523.32",
            "524.00",
            "524.30",
            "525.00",
            "525.10",
            "526.00",
            "526.30",
            "526.40",
            "526.41",
            "526.42",
            "526.50",
            "526.90",
            "527.00",
            "527.20",
            "527.70",
            "528.00",
            "528.10",
            "528.11",
            "528.12",
            "528.30",
            "528.50",
            "528.60",
            "529.00",
            "529.10",
            "530.00",
            "530.10",
            "530.11",
            "530.12",
            "530.13",
            "530.14",
            "530.15",
            "530.20",
            "530.30",
            "530.50",
            "530.60",
            "530.70",
            "250.13",
            "250.14",
            "250.20",
            "250.21",
            "250.22",
            "250.23",
            "250.24",
            "250.25",
            "250.30",
            "250.40",
            "250.41",
            "250.42",
            "250.50",
            "250.60",
            "250.70",
            "251.00",
            "251.10",
            "252.00",
            "252.10",
            "252.20",
            "253.00",
            "253.10",
            "253.11",
            "253.20",
            "253.30",
            "253.40",
            "253.50",
            "274.21",
            "253.70",
            "275.00",
            "255.00",
            "255.10",
            "255.11",
            "255.12",
            "255.13",
            "255.20",
            "275.30",
            "255.21",
            "275.50",
            "255.22",
            "255.30",
            "275.51",
            "256.00",
            "256.40",
            "275.53",
            "257.00",
            "275.60",
            "257.10",
            "258.00",
            "276.00",
            "258.10",
            "259.00",
            "276.10",
            "259.10",
            "259.20",
            "276.11",
            "259.30",
            "259.40",
            "276.12",
            "259.80",
            "276.13",
            "260.00",
            "260.10",
            "276.14",
            "260.20",
            "260.21",
            "276.40",
            "260.22",
            "276.41",
            "260.30",
            "276.42",
            "260.60",
            "261.00",
            "276.50",
            "261.20",
            "276.60",
            "261.40",
            "277.00",
            "263.00",
            "277.40",
            "264.00",
            "277.50",
            "264.10",
            "277.51",
            "264.20",
            "277.70",
            "264.30",
            "264.90",
            "278.00",
            "269.00",
            "278.10",
            "270.00",
            "278.11",
            "270.10",
            "278.30",
            "270.12",
            "278.40",
            "270.20",
            "279.00",
            "270.21",
            "279.10",
            "270.30",
            "279.11",
            "270.32",
            "279.20",
            "270.33",
            "279.70",
            "270.34",
            "279.80",
            "270.35",
            "270.38",
            "271.00",
            "271.30",
            "271.90",
            "272.00",
            "272.10",
            "272.11",
            "272.12",
            "272.13",
            "272.90",
            "274.00",
            "274.10",
            "274.11",
            "274.20",
            "240.00",
            "241.00",
            "241.10",
            "241.20",
            "242.00",
            "242.10",
            "242.20",
            "242.30",
            "242.31",
            "244.00",
            "244.10",
            "244.20",
            "244.40",
            "244.50",
            "245.00",
            "245.10",
            "245.20",
            "245.21",
            "246.00",
            "246.70",
            "249.00",
            "250.00",
            "250.10",
            "250.11",
            "250.12",
            "580.00",
            "580.10",
            "580.11",
            "580.12",
            "580.13",
            "580.14",
            "580.20",
            "580.30",
            "580.31",
            "580.32",
            "580.40",
            "585.00",
            "585.10",
            "585.20",
            "585.30",
            "585.31",
            "585.32",
            "585.33",
            "585.34",
            "585.40",
            "586.00",
            "586.10",
            "586.12",
            "586.20",
            "586.30",
            "586.40",
            "587.00",
            "588.00",
            "588.10",
            "588.20",
            "589.00",
            "590.00",
            "591.00",
            "592.00",
            "592.10",
            "592.11",
            "592.12",
            "592.13",
            "611.00",
            "592.20",
            "611.10",
            "593.00",
            "611.11",
            "593.10",
            "611.30",
            "593.20",
            "612.00",
            "594.00",
            "612.20",
            "594.10",
            "613.00",
            "594.20",
            "613.10",
            "594.30",
            "594.80",
            "613.50",
            "595.00",
            "613.70",
            "596.00",
            "613.80",
            "596.10",
            "614.00",
            "596.50",
            "614.10",
            "597.00",
            "614.30",
            "597.10",
            "614.32",
            "597.20",
            "614.50",
            "597.80",
            "614.51",
            "598.00",
            "614.52",
            "599.00",
            "614.54",
            "599.10",
            "615.00",
            "599.20",
            "618.00",
            "599.30",
            "618.10",
            "599.40",
            "618.20",
            "599.50",
            "618.50",
            "599.60",
            "618.60",
            "599.80",
            "619.00",
            "599.90",
            "619.10",
            "600.00",
            "601.00",
            "619.20",
            "601.10",
            "619.30",
            "601.11",
            "619.40",
            "601.12",
            "619.50",
            "601.30",
            "620.00",
            "601.40",
            "621.00",
            "601.80",
            "622.00",
            "602.00",
            "622.10",
            "603.00",
            "622.20",
            "603.10",
            "624.00",
            "603.20",
            "624.10",
            "604.00",
            "624.90",
            "604.10",
            "625.00",
            "604.30",
            "625.10",
            "605.00",
            "626.00",
            "608.00",
            "626.10",
            "609.00",
            "610.00",
            "626.11",
            "610.10",
            "626.12",
            "792.00",
            "610.20",
            "626.13",
            "792.10",
            "610.30",
            "626.14",
            "610.40",
            "626.20",
            "610.80",
            "626.40",
            "626.80",
            "627.00",
            "796.00",
            "627.10",
            "627.20",
            "627.21",
            "627.22",
            "627.30",
            "627.50",
            "628.00",
            "275.10",
            "275.11",
            "280.00",
            "280.10",
            "280.20",
            "281.00",
            "281.10",
            "281.11",
            "281.12",
            "281.90",
            "282.00",
            "282.90",
            "283.00",
            "283.10",
            "283.20",
            "283.21",
            "284.00",
            "284.10",
            "284.20",
            "285.00",
            "285.10",
            "285.20",
            "285.21",
            "285.22",
            "286.00",
            "286.10",
            "286.11",
            "286.12",
            "286.13",
            "286.20",
            "286.40",
            "286.50",
            "286.60",
            "286.70",
            "286.80",
            "286.81",
            "286.90",
            "287.00",
            "287.10",
            "287.20",
            "287.30",
            "287.31",
            "287.32",
            "287.40",
            "288.00",
            "288.10",
            "288.11",
            "288.20",
            "288.30",
            "289.00",
            "289.10",
            "289.40",
            "289.50",
            "289.80",
            "289.90",
            "071.00",
            "071.10",
            "078.00",
            "079.00",
            "079.20",
            "080.00",
            "081.00",
            "081.10",
            "081.11",
            "081.12",
            "090.00",
            "110.00",
            "110.10",
            "110.11",
            "110.12",
            "110.13",
            "110.20",
            "112.00",
            "112.30",
            "117.00",
            "117.10",
            "117.40",
            "130.00",
            "132.00",
            "136.00",
            "008.00",
            "008.50",
            "008.52",
            "008.60",
            "010.00",
            "031.00",
            "038.00",
            "038.10",
            "038.20",
            "038.30",
            "041.00",
            "041.10",
            "041.11",
            "041.12",
            "041.20",
            "041.40",
            "041.80",
            "041.90",
            "053.00",
            "053.10",
            "054.00",
            "070.00",
            "070.20",
            "070.30",
            "070.40",
            "070.90",
            "980.00",
            "800.00",
            "800.10",
            "800.20",
            "800.30",
            "800.40",
            "801.00",
            "801.10",
            "802.00",
            "803.00",
            "803.10",
            "818.10",
            "803.20",
            "818.20",
            "803.21",
            "819.00",
            "803.30",
            "830.00",
            "804.00",
            "835.00",
            "805.00",
            "836.00",
            "807.00",
            "840.00",
            "809.00",
            "840.10",
            "816.00",
            "840.20",
            "817.00",
            "840.30",
            "818.00",
            "841.00",
            "850.00",
            "851.00",
            "853.00",
            "854.00",
            "855.00",
            "856.00",
            "857.00",
            "858.00",
            "859.00",
            "870.00",
            "870.10",
            "870.30",
            "870.40",
            "870.50",
            "870.60",
            "871.00",
            "871.10",
            "871.20",
            "871.30",
            "872.00",
            "874.00",
            "875.00",
            "876.00",
            "907.00",
            "912.00",
            "913.00",
            "916.00",
            "930.00",
            "942.00",
            "946.00",
            "949.00",
            "949.10",
            "952.00",
            "958.00",
            "958.10",
            "958.20",
            "960.00",
            "960.20",
            "961.10",
            "962.00",
            "962.10",
            "963.00",
            "963.10",
            "964.00",
            "964.10",
            "965.00",
            "965.10",
            "966.00",
            "967.00",
            "969.00",
            "972.00",
            "972.10",
            "974.00",
            "977.00",
            "979.00",
            "989.00",
            "990.00",
            "994.00",
            "994.10",
            "994.20",
            "994.21",
            "290.12",
            "290.13",
            "290.16",
            "290.20",
            "290.30",
            "291.00",
            "291.10",
            "291.40",
            "291.80",
            "292.00",
            "292.10",
            "292.11",
            "292.12",
            "292.20",
            "292.30",
            "292.40",
            "292.50",
            "292.60",
            "293.00",
            "293.10",
            "295.00",
            "295.10",
            "295.20",
            "295.30",
            "296.00",
            "296.10",
            "296.20",
            "296.22",
            "297.00",
            "297.10",
            "297.20",
            "300.00",
            "300.10",
            "300.11",
            "300.12",
            "300.30",
            "300.40",
            "300.80",
            "300.90",
            "301.00",
            "301.20",
            "302.00",
            "302.10",
            "303.00",
            "303.30",
            "303.31",
            "303.40",
            "304.00",
            "305.20",
            "305.21",
            "306.00",
            "306.90",
            "312.00",
            "312.30",
            "313.00",
            "313.10",
            "313.20",
            "313.30",
            "315.00",
            "315.10",
            "315.20",
            "315.30",
            "316.00",
            "316.10",
            "317.00",
            "317.10",
            "317.11",
            "318.00",
            "290.00",
            "290.10",
            "290.11",
            "724.80",
            "724.90",
            "726.00",
            "726.10",
            "726.20",
            "726.30",
            "726.40",
            "727.00",
            "727.10",
            "727.20",
            "727.40",
            "727.50",
            "727.60",
            "727.70",
            "727.80",
            "728.00",
            "728.10",
            "728.20",
            "728.70",
            "728.71",
            "729.00",
            "729.30",
            "731.00",
            "732.00",
            "732.10",
            "733.00",
            "733.20",
            "733.40",
            "733.60",
            "733.80",
            "733.90",
            "735.00",
            "735.10",
            "735.20",
            "735.21",
            "735.22",
            "735.23",
            "735.30",
            "736.00",
            "736.20",
            "736.60",
            "737.00",
            "737.10",
            "737.30",
            "738.00",
            "738.40",
            "739.00",
            "740.00",
            "740.10",
            "740.11",
            "740.20",
            "740.30",
            "740.90",
            "741.00",
            "741.10",
            "741.20",
            "741.30",
            "741.40",
            "741.50",
            "742.00",
            "742.20",
            "742.90",
            "743.00",
            "743.10",
            "743.11",
            "743.12",
            "743.13",
            "743.20",
            "743.21",
            "743.22",
            "743.40",
            "743.90",
            "745.00",
            "710.00",
            "710.10",
            "710.11",
            "710.12",
            "710.19",
            "711.00",
            "711.10",
            "711.30",
            "712.00",
            "713.00",
            "713.50",
            "714.00",
            "714.10",
            "714.20",
            "715.00",
            "715.10",
            "715.20",
            "715.30",
            "716.00",
            "716.90",
            "717.00",
            "720.00",
            "720.10",
            "721.00",
            "721.10",
            "721.20",
            "722.00",
            "722.10",
            "722.60",
            "722.70",
            "722.80",
            "722.90",
            "723.00",
            "724.00",
            "724.10",
            "145.00",
            "145.20",
            "145.30",
            "145.40",
            "145.50",
            "149.00",
            "149.10",
            "149.20",
            "149.30",
            "149.40",
            "193.00",
            "149.50",
            "194.00",
            "149.90",
            "195.00",
            "150.00",
            "195.10",
            "151.00",
            "195.30",
            "153.00",
            "153.20",
            "196.00",
            "153.30",
            "197.00",
            "155.00",
            "198.00",
            "155.10",
            "198.10",
            "157.00",
            "198.20",
            "158.00",
            "198.30",
            "159.00",
            "198.40",
            "159.20",
            "198.50",
            "159.30",
            "198.60",
            "159.40",
            "198.70",
            "164.00",
            "199.00",
            "199.40",
            "165.00",
            "200.00",
            "165.10",
            "200.10",
            "201.00",
            "170.00",
            "202.00",
            "170.10",
            "202.20",
            "170.20",
            "202.21",
            "172.00",
            "202.22",
            "172.10",
            "202.23",
            "172.11",
            "202.24",
            "172.20",
            "204.00",
            "172.21",
            "204.10",
            "172.22",
            "204.11",
            "172.30",
            "204.12",
            "173.00",
            "204.20",
            "174.00",
            "204.21",
            "174.10",
            "204.22",
            "174.11",
            "204.30",
            "174.30",
            "204.40",
            "175.00",
            "208.00",
            "180.00",
            "209.00",
            "180.10",
            "180.30",
            "210.00",
            "182.00",
            "211.00",
            "184.00",
            "212.00",
            "184.10",
            "213.00",
            "184.11",
            "214.00",
            "184.20",
            "214.10",
            "185.00",
            "215.00",
            "187.00",
            "216.00",
            "187.10",
            "217.00",
            "187.20",
            "217.10",
            "189.00",
            "218.00",
            "189.10",
            "218.10",
            "189.11",
            "218.20",
            "189.12",
            "220.00",
            "189.20",
            "189.21",
            "221.00",
            "222.00",
            "189.40",
            "190.00",
            "223.00",
            "191.00",
            "224.00",
            "191.10",
            "224.10",
            "191.11",
            "225.00",
            "225.10",
            "225.20",
            "226.00",
            "227.00",
            "227.10",
            "227.20",
            "227.30",
            "228.00",
            "228.10",
            "229.00",
            "229.10",
            "860.00",
            "333.80",
            "334.00",
            "334.10",
            "334.20",
            "334.21",
            "335.00",
            "337.00",
            "337.10",
            "338.00",
            "338.10",
            "338.20",
            "339.00",
            "340.00",
            "340.10",
            "341.00",
            "342.00",
            "343.00",
            "344.00",
            "345.00",
            "345.10",
            "345.11",
            "345.12",
            "345.30",
            "346.00",
            "346.10",
            "346.20",
            "346.30",
            "347.00",
            "348.00",
            "348.20",
            "348.40",
            "348.70",
            "348.80",
            "348.90",
            "349.00",
            "350.00",
            "350.10",
            "350.20",
            "350.30",
            "350.60",
            "351.00",
            "352.00",
            "352.10",
            "352.20",
            "353.00",
            "353.10",
            "353.20",
            "355.00",
            "355.10",
            "356.00",
            "357.00",
            "358.00",
            "358.10",
            "359.00",
            "359.10",
            "359.20",
            "320.00",
            "323.00",
            "323.80",
            "324.00",
            "325.00",
            "327.00",
            "327.10",
            "327.30",
            "327.31",
            "327.32",
            "327.40",
            "327.41",
            "327.50",
            "327.70",
            "327.71",
            "327.72",
            "331.00",
            "331.10",
            "331.90",
            "332.00",
            "333.00",
            "333.10",
            "333.20",
            "333.30",
            "333.40",
            "656.00",
            "656.20",
            "656.22",
            "656.26",
            "656.30",
            "656.40",
            "656.50",
            "656.60",
            "656.70",
            "656.80",
            "656.90",
            "657.00",
            "496.20",
            "496.21",
            "496.30",
            "497.00",
            "499.00",
            "500.00",
            "500.20",
            "501.00",
            "502.00",
            "503.00",
            "504.00",
            "504.10",
            "505.00",
            "506.00",
            "507.00",
            "508.00",
            "509.00",
            "509.10",
            "509.20",
            "509.30",
            "509.50",
            "509.80",
            "510.00",
            "510.20",
            "512.00",
            "512.10",
            "512.20",
            "512.30",
            "512.70",
            "512.80",
            "512.90",
            "513.00",
            "513.30",
            "513.31",
            "513.32",
            "513.40",
            "513.80",
            "514.00",
            "514.10",
            "514.20",
            "516.00",
            "516.10",
            "519.00",
            "519.10",
            "519.20",
            "519.80",
            "519.90",
            "464.00",
            "465.00",
            "465.20",
            "465.40",
            "470.00",
            "471.00",
            "472.00",
            "473.00",
            "473.10",
            "473.30",
            "473.40",
            "474.00",
            "474.10",
            "474.20",
            "475.00",
            "475.90",
            "476.00",
            "477.00",
            "478.00",
            "479.00",
            "480.00",
            "480.10",
            "480.11",
            "480.12",
            "480.13",
            "480.20",
            "480.30",
            "480.50",
            "481.00",
            "483.00",
            "495.00",
            "495.10",
            "495.11",
            "495.20",
            "496.00",
            "496.10",
            "366.10",
            "366.20",
            "367.00",
            "360.00",
            "360.20",
            "367.10",
            "360.30",
            "367.20",
            "361.00",
            "367.80",
            "361.10",
            "367.90",
            "362.00",
            "368.00",
            "362.10",
            "368.10",
            "362.20",
            "368.20",
            "362.21",
            "368.30",
            "362.22",
            "368.40",
            "362.23",
            "362.26",
            "368.90",
            "362.27",
            "368.91",
            "362.29",
            "369.00",
            "362.30",
            "369.20",
            "362.31",
            "369.50",
            "362.40",
            "370.00",
            "362.50",
            "370.10",
            "362.60",
            "370.20",
            "362.70",
            "370.30",
            "362.80",
            "370.31",
            "362.90",
            "371.00",
            "363.00",
            "371.10",
            "363.30",
            "371.20",
            "364.00",
            "364.10",
            "371.21",
            "364.20",
            "371.30",
            "364.40",
            "372.00",
            "364.50",
            "374.00",
            "364.51",
            "374.10",
            "364.90",
            "374.20",
            "365.00",
            "374.30",
            "365.10",
            "374.60",
            "365.11",
            "375.00",
            "365.20",
            "375.10",
            "365.50",
            "375.20",
            "366.00",
            "376.00",
            "377.00",
            "377.10",
            "377.30",
            "378.00",
            "378.10",
            "378.20",
            "378.50",
            "379.00",
            "379.10",
            "379.20",
            "379.30",
            "379.40",
            "379.50",
            "379.90",
            "380.00",
            "380.10",
            "380.40",
            "381.00",
            "381.10",
            "381.11",
            "381.20",
            "381.30",
            "381.90",
            "382.00",
            "383.00",
            "384.00",
            "384.40",
            "385.00",
            "385.30",
            "385.50",
            "386.00",
            "386.10",
            "386.20",
            "386.21",
            "386.30",
            "386.90",
            "389.00",
            "389.10",
            "389.20",
            "389.30",
            "389.40",
            "760.00",
            "761.00",
            "763.00",
            "764.00",
            "765.00",
            "766.00",
            "769.00",
            "770.00",
            "771.00",
            "771.10",
            "771.20",
            "772.00",
            "772.10",
            "772.20",
            "772.30",
            "772.40",
            "772.60",
            "780.00",
            "781.00",
            "781.20",
            "782.30",
            "782.60",
            "783.00",
            "783.10",
            "785.00",
            "788.00",
            "789.00",
            "789.10",
            "790.00",
            "790.10",
            "790.60",
            "790.80",
            "791.00",
            "794.00",
            "795.80",
            "795.81",
            "795.82",
            "797.00",
            "797.10",
            "798.00",
            "798.10"
          ],
          "description": [
            "Hypertensive chronic kidney disease",
            "Other hypertensive complications",
            "Ischemic Heart Disease",
            "Unstable angina (intermediate coronary syndrome)",
            "Myocardial infarction",
            "Angina pectoris",
            "Coronary atherosclerosis",
            "Aneurysm and dissection of heart",
            "Other chronic ischemic heart disease, unspecified",
            "Other acute and subacute forms of ischemic heart disease",
            "Other forms of chronic heart disease",
            "ASCVD",
            "Pulmonary heart disease",
            "Acute pulmonary heart disease",
            "Pulmonary embolism and infarction, acute",
            "Chronic pulmonary heart disease",
            "Primary pulmonary hypertension",
            "Cardiomegaly",
            "Nonspecific chest pain",
            "Precordial pain",
            "Carditis",
            "Pericarditis",
            "Acute pericarditis",
            "Chronic pericarditis",
            "Endocarditis",
            "Cardiomyopathy",
            "Primary/intrinsic cardiomyopathies",
            "Hypertrophic obstructive cardiomyopathy",
            "Other hypertrophic cardiomyopathy",
            "Secondary/extrinsic cardiomyopathies",
            "Other cardiomyopathy",
            "Cardiac conduction disorders",
            "Atrioventricular [AV] block",
            "First degree AV block",
            "Mobitz II AV block",
            "Second degree AV block",
            "Atrioventricular block, complete",
            "Other heart block",
            "Bundle branch block",
            "Right bundle branch block",
            "Left bundle branch block",
            "Anomalous atrioventricular excitation",
            "Abnormal electrocardiogram [ECG] [EKG]",
            "Other cardiac conduction disorders",
            "Cardiac pacemaker/device in situ",
            "Cardiac pacemaker in situ",
            "Cardiac defibrillator in situ",
            "Cardiac dysrhythmias",
            "Paroxysmal tachycardia, unspecified",
            "Paroxysmal supraventricular tachycardia",
            "Paroxysmal ventricular tachycardia",
            "Atrial fibrillation and flutter",
            "Atrial fibrillation",
            "Atrial flutter",
            "Other specified cardiac dysrhythmias",
            "Cardiac arrest and ventricular fibrillation",
            "Ventricular fibrillation and flutter",
            "Cardiac arrest",
            "Arrhythmia (cardiac) NOS",
            "Premature beats",
            "Supraventricular premature beats",
            "Tachycardia NOS",
            "Sinoatrial node dysfunction (Bradycardia)",
            "Palpitations",
            "Congestive heart failure; nonhypertensive",
            "Congestive heart failure (CHF) NOS",
            "Heart failure NOS",
            "Heart failure with reduced EF [Systolic or combined heart failure]",
            "Heart failure with preserved EF [Diastolic heart failure]",
            "Ill-defined descriptions and complications of heart disease",
            "Heart transplant/surgery",
            "Abnormal function study of cardiovascular system",
            "Symptoms involving cardiovascular system",
            "Cardiac complications, not elsewhere classified",
            "Intracranial hemorrhage",
            "Subarachnoid hemorrhage",
            "Intracerebral hemorrhage",
            "Subdural hemorrhage",
            "Cerebrovascular disease",
            "Occlusion and stenosis of precerebral arteries",
            "Occlusion of cerebral arteries, with cerebral infarction",
            "Cerebral atherosclerosis",
            "Occlusion of cerebral arteries",
            "Cerebral artery occlusion, with cerebral infarction",
            "Cerebral ischemia",
            "Transient cerebral ischemia",
            "Cerebral aneurysm",
            "Acute, but ill-defined cerebrovascular disease",
            "Late effects of cerebrovascular disease",
            "Atherosclerosis",
            "Rheumatic disease of the heart valves",
            "Mitral valve stenosis and aortic valve stenosis",
            "Mitral valve disease",
            "Acute rheumatic heart disease",
            "Disease of tricuspid valve",
            "Heart valve disorders",
            "Nonrheumatic mitral valve disorders",
            "Nonrheumatic aortic valve disorders",
            "Nonrheumatic tricuspid valve disorders",
            "Nonrheumatic pulmonary valve disorders",
            "Heart valve replaced",
            "Abnormal heart sounds",
            "Hypertension",
            "Essential hypertension",
            "Hypertensive heart and/or renal disease",
            "Hypertensive heart disease",
            "Atherosclerosis of renal artery",
            "Atherosclerosis of the extremities",
            "Atherosclerosis of native arteries of the extremities with ulceration or gangrene",
            "Atherosclerosis of native arteries of the extremities with intermittent claudication",
            "Atherosclerosis of aorta",
            "Vascular insufficiency of intestine",
            "Acute vascular insufficiency of intestine",
            "Chronic vascular insufficiency of intestine",
            "Other aneurysm",
            "Aortic aneurysm",
            "Abdominal aortic aneurysm",
            "Aneurysm of iliac artery",
            "Aneurysm of artery of lower extremity",
            "Arterial dissection",
            "Aneurysm of other specified artery",
            "Peripheral vascular disease",
            "Raynaud's syndrome",
            "Peripheral angiopathy in diseases classified elsewhere",
            "Other specified peripheral vascular diseases",
            "Peripheral vascular disease, unspecified",
            "Arterial embolism and thrombosis",
            "Arterial embolism and thrombosis of lower extremity artery",
            "Embolism and thrombosis of abdominal aorta",
            "Polyarteritis nodosa and allied conditions",
            "Acute febrile mucocutaneous lymph node syndrome (Kawasaki disease)",
            "Hypersensitivity angiitis",
            "Wegener's granulomatosis",
            "Giant cell arteritis",
            "Polyarteritis nodosa",
            "Thrombotic microangiopathy",
            "Arteritis NOS",
            "Other disorders of arteries and arterioles",
            "Stricture of artery",
            "Aortic ectasia",
            "Noninfectious disorders of lymphatic channels",
            "Phlebitis and thrombophlebitis",
            "Phlebitis and thrombophlebitis of lower extremities",
            "Other venous embolism and thrombosis",
            "Iatrogenic pulmonary embolism and infarction",
            "Deep vein thrombosis [DVT]",
            "Varicose veins",
            "Varicose veins of lower extremity",
            "Varicose veins of lower extremity, symptomtic",
            "Hemorrhoids",
            "Chronic venous insufficiency [CVI]",
            "Encounter for long-term (current) use of anticoagulants, antithrombotics, aspirin",
            "Encounter for long-term (current) use of antiplatelets/antithrombotics",
            "Encounter for long-term (current) use of aspirin",
            "Hypotension",
            "Orthostatic hypotension",
            "Iatrogenic hypotension",
            "Hypotension NOS",
            "Other disorders of circulatory system",
            "Hemorrhage NOS",
            "Circulatory disease NEC",
            "Congenital anomalies of genital organs",
            "Congenital anomalies of female genital organs",
            "Congenital anomalies of male genital organs",
            "Congenital anomalies of urinary system",
            "Cystic kidney disease",
            "Other specified congenital anomalies of kidney",
            "Obstructive genitourinary defect",
            "Nervous system congenital anomalies",
            "Neural tube defects",
            "Spina bifida",
            "Other specified congenital anomalies of nervous system",
            "Congenital anomalies of the eye",
            "Congenital anomalies of posterior segment of eye",
            "Congenital musculoskeletal deformities of spine",
            "Spondylolisthesis, congenital",
            "Congenital anomalies of limbs",
            "Congenital deformities of feet",
            "Other congenital anomalies of lower limb, including pelvic girdle",
            "Congenital hip dysplasia and deformity",
            "Other congenital musculoskeletal anomalies",
            "Congenital anomalies of abdominal wall; diaphram",
            "Pectus and other congenital anomalies of ribs/sternum",
            "Pectus excavatum",
            "Congenital anomalies of muscle, tendon, fascia, and connective tissue",
            "Chromosomal anomalies and genetic disorders",
            "Chromosomal anomalies",
            "Other and unspecified congenital anomalies",
            "Cardiac and circulatory congenital anomalies",
            "Cardiac congenital anomalies",
            "Cardiac shunt/ heart septal defect",
            "Valvular heart disease/ heart chambers",
            "Congenital anomalies of great vessels",
            "Congenital anomalies of peripheral vascular system",
            "Anomalies of respiratory system, congenital",
            "Congenital anomalies of face and neck",
            "Cleft palate",
            "Congenital anomalies of skull and face bones",
            "Digestive congenital anomalies",
            "Upper gastrointestinal congenital anomalies",
            "Esophageal atresia/tracheoesophageal fistula",
            "Congenital anomalies of mouth/tongue",
            "Lower gastrointestinal congenital anomalies",
            "Congenital anomalies of intestine",
            "Congenital anomaly of gallbladder, bile ducts, liver, pancreas",
            "Genitourinary congenital anomalies",
            "Dyschromia and Vitiligo",
            "Vitiligo",
            "Other dyschromia",
            "Erythematous conditions",
            "Bullous dermatoses",
            "Pemphigus and pemphigoid",
            "Rosacea",
            "Lupus (localized and systemic)",
            "Cutaneous lupus erythematosus",
            "Systemic lupus erythematosus",
            "Prurigo and Lichen",
            "Other specified erythematous conditions",
            "Erythema nodosum",
            "Unspecified erythematous condition",
            "Psoriasis and related disorders",
            "Psoriasis",
            "Psoriasis vulgaris",
            "Psoriatic arthropathy",
            "Sarcoidosis",
            "Pruritus and related conditions",
            "Corns and callosities",
            "Other hypertrophic and atrophic conditions of skin",
            "Keratoderma, acquired",
            "Scar conditions and fibrosis of skin",
            "Circumscribed scleroderma",
            "Keloid scar",
            "Superficial cellulitis and abscess",
            "Abnormal granulation tissue",
            "Cellulitis and abscess of fingers/toes",
            "Acquired acanthosis nigricans",
            "Cellulitis and abscess of face/neck",
            "Degenerative skin conditions and other dermatoses",
            "Cellulitis and abscess of arm/hand",
            "Actinic keratosis",
            "Cellulitis and abscess of leg, except foot",
            "Seborrheic keratosis",
            "Cellulitis and abscess of foot, toe",
            "Diseases of nail, NOS",
            "Cellulitis and abscess of trunk",
            "Ingrowing nail",
            "Other local infections of skin and subcutaneous tissue",
            "Diseases of hair and hair follicles",
            "Carbuncle and furuncle",
            "Alopecia",
            "Impetigo",
            "Alopecia Areata",
            "Pilonidal cyst",
            "Telogen effluvium",
            "Pyogenic granuloma",
            "Hirsutism",
            "Pyoderma",
            "Other specified diseases of hair and hair follicles",
            "Rash and other nonspecific skin eruption",
            "Disorders of sweat glands",
            "Disturbance of skin sensation",
            "Dyshidrosis",
            "Disorder of skin and subcutaneous tissue NOS",
            "Erythematosquamous dermatosis",
            "Hidradenitis",
            "Hyperhidrosis",
            "Seborrheic dermatitis",
            "Diseases of sebaceous glands",
            "Congenital anomalies of skin",
            "Congenital pigmentary anomalies of skin",
            "Acne",
            "Sebaceous cyst",
            "Other specified diseases of sebaceous glands",
            "Chronic ulcer of skin",
            "Decubitus ulcer",
            "Chronic ulcer of leg or foot",
            "Chronic ulcer of unspecified site",
            "Diffuse diseases of connective tissue",
            "Sicca syndrome",
            "Systemic sclerosis",
            "Polymyositis",
            "Dermatomyositis",
            "Other specified diffuse diseases of connective tissue",
            "Unspecified diffuse connective tissue disease",
            "Contact dermatitis and other eczema due to plants [except food]",
            "Dermatitis due to solar radiation",
            "Chronic dermatitis due to solar radiation",
            "Atopic/contact dermatitis due to other or unspecified",
            "Urticaria",
            "Hemorrhage of gastrointestinal tract",
            "Other symptoms involving abdomen and pelvis",
            "Splenomegaly",
            "Nonspecific abnormal findings in stool contents",
            "Heartburn",
            "Peptic ulcer (excl. esophageal)",
            "Hemorrhage from gastrointestinal ulcer",
            "Gastric ulcer",
            "Duodenal ulcer",
            "Peptic ulcer, site unspecified",
            "Gastrojejunal ulcer",
            "Dysphagia",
            "Gastritis and duodenitis",
            "Acute gastritis",
            "Atrophic gastritis",
            "Duodenitis",
            "Other specified gastritis",
            "Gastritis and duodenitis, NOS",
            "Disorders of function of stomach",
            "Gastroparesis",
            "Complications of gastrostomy, colostomy and enterostomy",
            "Dyspepsia and other specified disorders of function of stomach",
            "Other disorders of stomach and duodenum",
            "Lesions of stomach and duodenum",
            "Bariatric surgery",
            "Appendiceal conditions",
            "Appendicitis",
            "Acute appendicitis",
            "Abdominal hernia",
            "Inguinal hernia",
            "Diaphragmatic hernia",
            "Femoral hernia",
            "Umbilical hernia",
            "Ventral hernia",
            "Incisional hernia",
            "Inflammatory bowel disease and other gastroenteritis and colitis",
            "Regional enteritis",
            "Ulcerative colitis",
            "Ulcerative colitis (chronic)",
            "Ulceration of the lower GI tract",
            "Ulceration of intestine",
            "Angiodysplasia of intestine (without mention of hemorrhage)",
            "Intestinal malabsorption (non-celiac)",
            "Celiac disease",
            "Noninfectious gastroenteritis",
            "Ileostomy status",
            "Intestinal obstruction without mention of hernia",
            "Paralytic ileus",
            "Impaction of intestine",
            "Peritoneal or intestinal adhesions",
            "Other intestinal obstruction",
            "Symptoms involving digestive system",
            "Diverticulosis and diverticulitis",
            "Diverticulosis",
            "Diverticulitis",
            "Functional digestive disorders",
            "Irritable Bowel Syndrome",
            "Anal and rectal conditions",
            "Anal and rectal polyp",
            "Peritonitis and retroperitoneal infections",
            "Other disorders of peritoneum",
            "Peritoneal adhesions (postoperative) (postinfection)",
            "Other disorders of intestine",
            "Gastrointestinal complications",
            "Chronic liver disease and cirrhosis",
            "Other chronic nonalcoholic liver disease",
            "Cirrhosis of liver without mention of alcohol",
            "Primary biliary cirrhosis",
            "Liver abscess and sequelae of chronic liver disease",
            "Portal hypertension",
            "Ascites (non malignant)",
            "Other disorders of liver",
            "Liver replaced by transplant",
            "Hepatomegaly",
            "Acute and subacute necrosis of liver",
            "Jaundice (not of newborn)",
            "Nonspecific elevation of levels of transaminase or lactic acid dehydrogenase [LDH]",
            "Abnormal results of function study of liver",
            "Abnormal serum enzyme levels",
            "Cholelithiasis and cholecystitis",
            "Cholelithiasis",
            "Cholelithiasis with acute cholecystitis",
            "Cholelithiasis with other cholecystitis",
            "Calculus of bile duct",
            "Cholecystitis without cholelithiasis",
            "Other biliary tract disease",
            "Cholangitis",
            "Obstruction of bile duct",
            "Other disorders of gallbladder",
            "Other disorders of biliary tract",
            "Diseases of pancreas",
            "Acute pancreatitis",
            "Chronic pancreatitis",
            "Cyst and pseudocyst of pancreas",
            "Gastrointestinal hemorrhage",
            "Hematemesis",
            "Blood in stool",
            "Hemorrhage of rectum and anus",
            "Disorders of tooth development",
            "Disturbances in tooth eruption",
            "Diseases of hard tissues of teeth",
            "Dental caries",
            "Diseases of pulp and periapical tissues",
            "Periapical abscess",
            "Gingival and periodontal diseases",
            "Gingivitis",
            "Periodontitis (acute or chronic)",
            "Acute periodontitis",
            "Chronic periodontitis",
            "Dentofacial anomalies, including malocclusion",
            "Anomalies of tooth position/malocclusion",
            "Other diseases of the teeth and supporting structures",
            "Loss of teeth or edentulism",
            "Diseases of the jaws",
            "Anomalies of jaw size/symmetry",
            "Temporomandibular joint disorders",
            "Temporomandibular joint disorder, unspecified",
            "Arthralgia/ankylosis of temporomandibular joint",
            "Inflammatory conditions of jaw",
            "Jaw disease NOS",
            "Diseases of the salivary glands",
            "Sialoadenitis",
            "Disturbance of salivary secretion",
            "Diseases of the oral soft tissues, excluding lesions specific for gingiva and tongue",
            "Stomatitis and mucositis",
            "Stomatitis and mucositis (ulcerative)",
            "Oral aphthae",
            "Cellulitis and abscess of oral soft tissues",
            "Diseases of lips",
            "Leukoplakia of oral mucosa",
            "Diseases and other conditions of the tongue",
            "Glossitis",
            "Diseases of esophagus",
            "Esophagitis, GERD and related diseases",
            "GERD",
            "Ulcer of esophagus",
            "Barrett's esophagus",
            "Reflux esophagitis",
            "Eosinophilic esophagitis",
            "Esophageal bleeding (varices/hemorrhage)",
            "Stricture and stenosis of esophagus",
            "Disorders of esophageal motility",
            "Diverticulum of esophagus, acquired",
            "Gastroesophageal laceration-hemorrhage syndrome",
            "Type 1 diabetes with ophthalmic manifestations",
            "Type 1 diabetes with neurological manifestations",
            "Type 2 diabetes",
            "Type 2 diabetes with ketoacidosis",
            "Type 2 diabetes with renal manifestations",
            "Type 2 diabetes with ophthalmic manifestations",
            "Type 2 diabetes with neurological manifestations",
            "Diabetes type 2 with peripheral circulatory disorders",
            "Insulin pump user",
            "Abnormal glucose",
            "Impaired fasting glucose",
            "Other abnormal glucose",
            "Glycosuria or Acetonuria",
            "Polyneuropathy in diabetes",
            "Diabetic retinopathy",
            "Other disorders of pancreatic internal secretion",
            "Hypoglycemia",
            "Disorders of parathyroid gland",
            "Hyperparathyroidism",
            "Hypoparathyroidism",
            "Disorders of the pituitary gland and its hypothalamic control",
            "Pituitary hyperfunction",
            "Acromegaly and gigantism",
            "Pituitary hypofunction",
            "Diabetes insipidus",
            "Anterior pituitary disorders",
            "Pituitary dwarfism",
            "Chondrocalcinosis",
            "Other disorders of neurohypophysis",
            "Disorders of mineral metabolism",
            "Disorders of adrenal glands",
            "Adrenal hyperfunction",
            "Cushing's syndrome",
            "Hyperaldosteronism",
            "Medulloadrenal hyperfunction",
            "Adrenal hypofunction",
            "Disorders of magnesium metabolism",
            "Glucocorticoid deficiency",
            "Disorders of calcium/phosphorus metabolism",
            "Mineralocorticoid deficiency",
            "Adrenogenital disorders",
            "Hypocalcemia",
            "Ovarian dysfunction",
            "Polycystic ovaries",
            "Disorders of phosphorus metabolism",
            "Testicular dysfunction",
            "Hypercalcemia",
            "Testicular hypofunction",
            "Iatrogenic endocrine disorders",
            "Disorders of fluid, electrolyte, and acid-base balance",
            "Postablative ovarian failure",
            "Other endocrine disorders",
            "Electrolyte imbalance",
            "Nonspecific abnormal results of other endocrine function study",
            "Carcinoid syndrome",
            "Hyperosmolality and/or hypernatremia",
            "Delay in sexual development and puberty NEC",
            "Precocious sexual development and puberty NEC",
            "Hyposmolality and/or hyponatremia",
            "Polyglandular activity in multiple endocrine adenomatosis",
            "Hyperpotassemia",
            "Protein-calorie malnutrition",
            "Cachexia",
            "Hypopotassemia",
            "severe protein-calorie malnutrition",
            "Kwashiorkor",
            "Acid-base balance disorder",
            "Nutritional marasmus",
            "Acidosis",
            "Adult failure to thrive",
            "Alkalosis",
            "Anorexia",
            "Vitamin deficiency",
            "Hypovolemia",
            "Vitamin B-complex deficiencies",
            "Fluid overload",
            "Vitamin D deficiency",
            "Other disorders of metabolism",
            "Other nutritional deficiency",
            "Disorders of bilirubin excretion",
            "Lack of normal physiological development",
            "Other disorders of lipoid metabolism",
            "Short stature",
            "Lipoprotein disorders",
            "Failure to thrive (childhood)",
            "Dysmetabolic syndrome X",
            "Delayed milestones",
            "Lack of normal physiological development, unspecified",
            "Overweight, obesity and other hyperalimentation",
            "Proteinuria",
            "Obesity",
            "Disorders of protein plasma/amino-acid transport and metabolism",
            "Morbid obesity",
            "Disturbances of amino-acid transport",
            "Localized adiposity",
            "Phenylketonuria [PKU]",
            "Abnormal weight gain",
            "Disorders of amino-acid metabolism",
            "Disorders involving the immune mechanism",
            "Disorders of urea cycle metabolism",
            "Immunity deficiency",
            "Disorders of plasma protein metabolism",
            "Deficiency of humoral immunity",
            "Paraproteinemia",
            "Autoimmune disease NEC",
            "Amyloidosis",
            "Other immunological findings",
            "Alpha-1-antitrypsin deficiency",
            "Other specified disorders involving the immune mechanism",
            "Macroglobulinemia",
            "Other specified disorders of plasma protein metabolism",
            "Disorders of carbohydrate transport and metabolism",
            "Intestinal disaccharidase deficiencies and disaccharide malabsorption",
            "Other disorders of carbohydrate transport and metabolism",
            "Disorders of lipoid metabolism",
            "Hyperlipidemia",
            "Hypercholesterolemia",
            "Hyperglyceridemia",
            "Mixed hyperlipidemia",
            "Unspecified disorder of lipoid metabolism",
            "Gout and other crystal arthropathies",
            "Gout",
            "Gouty arthropathy",
            "Crystal arthropathies",
            "Simple and unspecified goiter",
            "Nontoxic nodular goiter",
            "Nontoxic uninodular goiter",
            "Nontoxic multinodular goiter",
            "Thyrotoxicosis with or without goiter",
            "Graves' disease",
            "Toxic multinodular goiter",
            "Exophthalmos",
            "Thyrotoxic exophthalmos",
            "Hypothyroidism",
            "Secondary hypothyroidism",
            "Acquired hypothyroidism",
            "Hypothyroidism NOS",
            "Congenital hypothyroidism",
            "Thyroiditis",
            "Thyroiditis, acute and subacute",
            "Chronic thyroiditis",
            "Chronic lymphocytic thyroiditis",
            "Other disorders of thyroid",
            "Abnormal results of function study of thyroid",
            "Secondary diabetes mellitus",
            "Diabetes mellitus",
            "Type 1 diabetes",
            "Type 1 diabetes with ketoacidosis",
            "Type 1 diabetes with renal manifestations",
            "Nephritis; nephrosis; renal sclerosis",
            "Glomerulonephritis",
            "Proliferative glomerulonephritis",
            "Non-proliferative glomerulonephritis",
            "Acute glomerulonephritis, NOS",
            "Chronic glomerulonephritis, NOS",
            "Nephrotic syndrome without mention of glomerulonephritis",
            "Nephritis and nephropathy without mention of glomerulonephritis",
            "Nephritis and nephropathy in diseases classified elsewhere",
            "Nephritis and nephropathy with pathological lesion",
            "Renal sclerosis, NOS",
            "Renal failure",
            "Acute renal failure",
            "Renal failure NOS",
            "Chronic renal failure [CKD]",
            "Renal dialysis",
            "End stage renal disease",
            "Chronic Kidney Disease, Stage III",
            "Chronic Kidney Disease, Stage IV",
            "Chronic kidney disease, Stage I or II",
            "Other disorders of the kidney and ureters",
            "Anatomical abnormatilies of kidney and ureters",
            "Vesicoureteral reflux",
            "Cyst of kidney, acquired",
            "Vascular disorders of kidney/hypertrophy",
            "Stricture/obstruction of ureter",
            "Kidney replaced by transpant",
            "Disorders resulting from impaired renal function",
            "Renal osteodystrophy",
            "Secondary hyperparathyroidism (of renal origin)",
            "Abnormal results of function study of kidney",
            "Pyelonephritis",
            "Urinary tract infection",
            "Cystitis and urethritis",
            "Cystitis",
            "Acute cystitis",
            "Chronic cystitis",
            "Chronic interstitial cystitis",
            "Abnormal findings on mammogram or breast exam",
            "Urethritis and urethral syndrome",
            "Abnormal mammogram",
            "Hematuria",
            "Mammographic microcalcification",
            "Gross hematuria",
            "Lump or mass in breast",
            "Microscopic hematuria",
            "Breast conditions, congenital or relating to hormones",
            "Urinary calculus",
            "Hypertrophy of breast (Gynecomastia)",
            "Calculus of kidney",
            "Other nonmalignant breast conditions",
            "Calculus of lower urinary tract",
            "Inflammatory disease of breast",
            "Calculus of ureter",
            "Renal colic",
            "Mastodynia",
            "Hydronephrosis",
            "Other signs and symptoms in breast",
            "Other disorders of bladder",
            "Other specified disorders of breast",
            "Bladder neck obstruction",
            "Inflammatory diseases of female pelvic organs",
            "Functional disorders of bladder",
            "Pelvic peritoneal adhesions, female (postoperative) (postinfection)",
            "Other disorders of urethra and urinary tract",
            "Pelvic inflammatory disease (PID)",
            "Urethral stricture (not specified as infectious)",
            "Chronic inflammatory pelvic disease",
            "Urinary complications NEC",
            "Inflammatory disease of cervix, vagina, and vulva",
            "Urethral hypermobility/ISD",
            "Cervicitis and endocervicitis",
            "Abnormal findings on examination of urine",
            "Vaginitis and vulvovaginitis",
            "Other symptoms/disorders or the urinary system",
            "Abscess or ulceration of vulva",
            "Urinary obstruction",
            "Endometriosis",
            "Retention of urine",
            "Genital prolapse",
            "Dysuria",
            "Prolapse of vaginal walls",
            "Urinary incontinence",
            "Uterine/Uterovaginal prolapse",
            "Frequency of urination and polyuria",
            "Prolapse of vaginal vault after hysterectomy",
            "Oliguria and anuria",
            "Vaginal enterocele, congenital or acquired",
            "Other symptoms involving urinary system",
            "Noninflammatory female genital disorders",
            "Other abnormality of urination",
            "Noninflammatory disorders of ovary, fallopian tube, and broad ligament",
            "Hyperplasia of prostate",
            "Inflammatory diseases of prostate",
            "Disorders of uterus, NEC",
            "Prostatitis",
            "Noninflammatory disorders of cervix",
            "Acute prostatitis",
            "Noninflammatory disorders of vagina",
            "Chronic prostatitis",
            "Noninflammatory disorders of vulva and perineum",
            "Orchitis and epididymitis",
            "Dysplasia of female genital organs",
            "Balanoposthitis",
            "Endometrial hyperplasia",
            "Other inflammatory disorders of male genital organs",
            "Polyp of female genital organs",
            "Other disorders of prostate",
            "Polyp of corpus uteri",
            "Other disorders of testis",
            "Mucous polyp of cervix",
            "Hydrocele",
            "Symptoms involving female genital tract",
            "Spermatocele",
            "Dystrophy of female genital tract",
            "Disorders of penis",
            "stress incontinence, female",
            "Redundant prepuce and phimosis/BXO",
            "Pain and other symptoms associated with female genital organs",
            "Peyronie's disease",
            "Dyspareunia",
            "Erectile dysfunction [ED]",
            "Disorders of menstruation and other abnormal bleeding from female genital tract",
            "Other disorders of male genital organs",
            "Irregular menstrual cycle/bleeding",
            "Male infertility and abnormal spermatozoa",
            "Benign mammary dysplasias",
            "Absent or infrequent menstruation",
            "Cystic mastopathy",
            "Excessive or frequent menstruation",
            "Abnormal Papanicolaou smear of cervix and cervical HPV",
            "Fibroadenosis of breast",
            "Irregular menstrual cycle",
            "Papanicolaou smear of cervix or vagina with atypical squamous cells",
            "Fibrosclerosis of breast",
            "Irregular menstrual bleeding",
            "Benign neoplasm of breast",
            "Dysmenorrhea",
            "Other specified benign mammary dysplasias",
            "Premenstrual tension syndromes",
            "Infertility, female",
            "Menopausal and postmenopausal disorders",
            "Elevated prostate specific antigen [PSA]",
            "Postmenopausal bleeding",
            "Symptomatic menopause",
            "Symptomatic artificial menopause",
            "Need for Hormone replacement therapy (postmenopausal)",
            "Postmenopausal atrophic vaginitis",
            "Premature menopause and other ovarian failure",
            "Ovarian cyst",
            "Disorders of iron metabolism",
            "Hereditary hemochromatosis",
            "Iron deficiency anemias",
            "Iron deficiency anemias, unspecified or not due to blood loss",
            "Iron deficiency anemia secondary to blood loss (chronic)",
            "Other deficiency anemia",
            "Megaloblastic anemia",
            "Pernicious anemia",
            "Other vitamin B12 deficiency anemia",
            "Deficiency anemias",
            "Hereditary hemolytic anemias",
            "Other hereditary hemolytic anemias",
            "Acquired hemolytic anemias",
            "Autoimmune hemolytic anemias",
            "Non-autoimmune hemolytic anemias",
            "Hemolytic-uremic syndrome",
            "Aplastic anemia",
            "Pancytopenia",
            "Constitutional aplastic anemia",
            "Other anemias",
            "Acute posthemorrhagic anemia",
            "Anemia of chronic disease",
            "Anemia in chronic kidney disease",
            "Anemia in neoplastic disease",
            "Coagulation defects",
            "Congenital coagulation defects",
            "Von willebrand's disease",
            "Congenital deficiency of other clotting factors (including factor VII)",
            "Congenital factor VIII disorder",
            "Encounter for long-term (current) use of anticoagulants",
            "Acquired coagulation factor deficiency",
            "Hemorrhagic disorder due to intrinsic circulating anticoagulants",
            "Defibrination syndrome",
            "Other and unspecified coagulation defects",
            "Hypercoagulable state",
            "Primary hypercoagulable state",
            "Abnormal coagulation profile",
            "Purpura and other hemorrhagic conditions",
            "Spontaneous ecchymoses",
            "Allergic purpura",
            "Thrombocytopenia",
            "Primary thrombocytopenia",
            "Secondary thrombocytopenia",
            "Qualitative platelet defects",
            "Diseases of white blood cells",
            "Decreased white blood cell count",
            "Neutropenia",
            "Elevated white blood cell count",
            "Eosinophilia",
            "Other diseases of blood and blood-forming organs",
            "Myelofibrosis",
            "Lymphadenitis",
            "Diseases of spleen",
            "Polycythemia, secondary",
            "Abnormality of red blood cells",
            "Human immunodeficiency virus [HIV] disease",
            "HIV infection, symptomatic",
            "Viral warts & HPV",
            "Viral infection",
            "Infectious mononucleosis",
            "Postoperative infection",
            "Infection/inflammation of internal prosthetic device; implant; and graft",
            "Graft-versus-host disease",
            "Acute graft-versus-host disease",
            "Chronic graft-versus-host disease",
            "Sexually transmitted infections (not HIV or hepatitis)",
            "Dermatophytosis / Dermatomycosis",
            "Dermatophytosis",
            "Dermatophytosis of nail",
            "Althete's foot",
            "Dermatophytosis of the body",
            "Dermatomycoses",
            "Candidiasis",
            "Candidiasis of skin and nails",
            "Mycoses",
            "Histoplasmosis",
            "Aspergillosis",
            "Spirochetal infection",
            "Infestation (lice, mites)",
            "Other infectious and parasitic diseases",
            "Intestinal infection",
            "Bacterial enteritis",
            "Intestinal infection due to C. difficile",
            "Viral Enteritis",
            "Tuberculosis",
            "Diseases due to other mycobacteria",
            "Septicemia",
            "Gram negative septicemia",
            "Gram positive septicemia",
            "Bacteremia",
            "Bacterial infection NOS",
            "Staphylococcus infections",
            "Methicillin sensitive Staphylococcus aureus",
            "Methicillin resistant Staphylococcus aureus",
            "Streptococcus infection",
            "E. coli",
            "H. pylori",
            "Infection with drug-resistant microorganisms",
            "Herpes zoster",
            "Herpes zoster with nervous system complications",
            "Herpes simplex",
            "Viral hepatitis",
            "Viral hepatitis B",
            "Viral hepatitis C",
            "Chronic hepatitis",
            "Hepatitis NOS",
            "Encounter for long-term (current) use of antibiotics",
            "Fracture of lower limb",
            "Fracture of neck of femur",
            "Fracture of unspecified part of femur",
            "Fracture of tibia and fibula",
            "Fracture of patella",
            "Fracture of ankle and foot",
            "Fracture of foot",
            "Fracture of pelvis",
            "Fracture of upper limb",
            "Fracture of humerus",
            "Subdural hemorrhage (injury)",
            "Fracture of radius and ulna",
            "Subarachnoid hemorrhage (injury)",
            "Colles' fracture",
            "Skull and face fracture and other intercranial injury",
            "Fracture of clavicle or scapula",
            "Dislocation",
            "Fracture of hand or wrist",
            "Internal derangement of knee",
            "Fracture of vertebral column without mention of spinal cord injury",
            "Traumatic arthropathy",
            "Fracture of ribs",
            "Sprains and strains",
            "Fracture of unspecified bones",
            "Muscle/tendon sprain",
            "Cerebral laceration and contusion",
            "Rotator cuff (capsule) sprain",
            "Concussion",
            "Joint/ligament sprain",
            "Intracranial hemorrhage (injury)",
            "Sprains and strains of back and neck",
            "Hemorrhage or hematoma complicating a procedure",
            "Complications of transplants and reattached limbs",
            "Complication of colostomy or enterostomy",
            "Complications of cardiac/vascular device, implant, and graft",
            "Complication of nervous system device, implant, and graft",
            "Vascular complications of surgery and medical procedures",
            "Mechanical complication of unspecified genitourinary device, implant, and graft",
            "Complication of internal orthopedic device",
            "Complication due to other implant and internal device",
            "Open wounds of head; neck; and trunk",
            "Open wound or laceration of eye or eyelid",
            "Other open wound of head and face",
            "Open wound of nose and sinus",
            "Open wound of lip and mouth",
            "Open wound of neck",
            "Open wounds of extremities",
            "Open wound of hand except finger(s)",
            "Open wound of finger(s)",
            "Open wound of foot except toe(s) alone",
            "Traumatic amputation",
            "Complication of amputation stump",
            "Non-healing surgical wound",
            "Posttraumatic wound infection not elsewhere classified",
            "Injuries to the nervous system",
            "Insect bite",
            "Toxic effect of venom",
            "Contusion",
            "Allergic reaction to food",
            "Infusion and transfusion reaction",
            "Anaphylactic shock NOS",
            "Allergies, other",
            "Diaper or napkin rash",
            "Spinal cord injury without evidence of spinal bone injury",
            "Certain early complications of trauma or procedure",
            "Postoperative shock",
            "Traumatic and surgical subcutaneous emphysema",
            "Poisoning by antibiotics",
            "Allergy/adverse effect of penicillin",
            "Poisoning/allergy of sulfonamides",
            "Poisoning by hormones and synthetic substitutes",
            "Adrenal cortical steroids causing adverse effects in therapeutic use",
            "Poisoning by primarily systemic agents",
            "Antineoplastic and immunosuppressive drugs causing adverse effects",
            "Poisoning by agents primarily affecting blood constituents",
            "Anticoagulants causing adverse effects",
            "Poisoning by analgesics, antipyretics, and antirheumatics",
            "Opiates and related narcotics causing adverse effects in therapeutic use",
            "Poisoning by anticonvulsants and anti-Parkinsonism drugs",
            "Adverse effects of sedatives or other central nervous system depressants and anesthetics",
            "Poisoning by psychotropic agents",
            "Poisoning by agents primarily affecting the cardiovascular system",
            "Cardiac rhythm regulators causing adverse effects in therapeutic use",
            "Poisoning by water, mineral, and uric acid metabolism drugs",
            "Personal history of allergy to medicinal agents",
            "Adverse drug events and drug allergies",
            "Toxic effect of other substances, chiefly nonmedicinal as to source",
            "Effects radiation NOS",
            "Sepsis and SIRS",
            "Systemic inflammatory response syndrome (SIRS)",
            "Sepsis",
            "Septic shock",
            "Dementia with cerebral degenerations",
            "Senile dementia",
            "Vascular dementia",
            "Delirium due to conditions classified elsewhere",
            "Other persistent mental disorders due to conditions classified elsewhere",
            "Other specified nonpsychotic and/or transient mental disorders",
            "Transient mental disorders due to conditions classified elsewhere",
            "Specific nonpsychotic mental disorders due to brain damage",
            "Alteration of consciousness",
            "Neurological disorders",
            "Aphasia/speech disturbance",
            "Aphasia",
            "Symbolic dysfunction",
            "Mild cognitive impairment",
            "Memory loss",
            "Altered mental status",
            "Transient alteration of awareness",
            "Hallucinations",
            "Symptoms involving head and neck",
            "Swelling, mass, or lump in head and neck [Space-occupying lesion, intracranial NOS]",
            "Schizophrenia and other psychotic disorders",
            "Schizophrenia",
            "Paranoid disorders",
            "Psychosis",
            "Mood disorders",
            "Bipolar",
            "Depression",
            "Major depressive disorder",
            "Suicidal ideation or attempt",
            "Suicidal ideation",
            "Suicide or self-inflicted injury",
            "Anxiety disorders",
            "Anxiety disorder",
            "Generalized anxiety disorder",
            "Agorophobia, social phobia, and panic disorder",
            "Obsessive-compulsive disorders",
            "Dysthymic disorder",
            "Acute reaction to stress",
            "Posttraumatic stress disorder",
            "Personality disorders",
            "Antisocial/borderline personality disorder",
            "Sexual and gender identity disorders",
            "Decreased libido",
            "Psychogenic and somatoform disorders",
            "Psychogenic disorder",
            "Gastrointestinal malfunction arising from mental factors",
            "Somatoform disorder",
            "Adjustment reaction",
            "Eating disorder",
            "Anorexia nervosa",
            "Other mental disorder",
            "Tension headache",
            "Conduct disorders",
            "Impulse control disorder",
            "Pervasive developmental disorders",
            "Attention deficit hyperactivity disorder",
            "Tics and stuttering",
            "Autism",
            "Develomental delays and disorders",
            "Learning disorder",
            "Speech and language disorder",
            "Mental retardation",
            "Substance addiction and disorders",
            "Polyneuropathy due to drugs",
            "Alcohol-related disorders",
            "Alcoholism",
            "Alcoholic liver damage",
            "Tobacco use disorder",
            "Delirium dementia and amnestic and other cognitive disorders",
            "Dementias",
            "Alzheimer's disease",
            "Other symptoms referable to back",
            "Other unspecified back disorders",
            "Peripheral enthesopathies and allied syndromes",
            "Enthesopathy",
            "Synoviopathy",
            "Bursitis",
            "Calcaneal spur; Exostosis NOS",
            "Other disorders of synovium, tendon, and bursa",
            "Synovitis and tenosynovitis",
            "Bursitis disorders",
            "Ganglion and cyst of synovium, tendon, and bursa",
            "Rupture of synovium",
            "Rupture of tendon, nontraumatic",
            "Contracture of tendon (sheath)",
            "Plica syndrome",
            "Disorders of muscle, ligament, and fascia",
            "Muscular calcification and ossification",
            "Laxity of ligament or hypermobility syndrome",
            "Fasciitis",
            "Contracture of palmar fascia [Dupuytren's disease]",
            "Other disorders of soft tissues",
            "Panniculitis",
            "Osteitis deformans and osteopathies associated with other disorders classified elsewhere",
            "Osteochondropathies",
            "Juvenile osteochondrosis",
            "Other disorders of bone and cartilage",
            "Cyst of bone",
            "Aseptic necrosis of bone",
            "Costochondritis",
            "Malunion and nonunion of fracture",
            "Chondromalacia",
            "Acquired foot deformities",
            "Flat foot",
            "Acquired toe deformities",
            "Hammer toe (acquired)",
            "Claw toe (acquired)",
            "Hallux rigidus",
            "Hallux valgus (Bunion)",
            "Other acquired deformities of limbs",
            "Acquired deformities of finger",
            "Unequal leg length (acquired)",
            "Curvature of spine",
            "Kyphosis (acquired)",
            "Kyphoscoliosis and scoliosis",
            "Other acquired musculoskeletal deformity",
            "Acquired spondylolisthesis",
            "Contracture of joint",
            "Osteoarthrosis",
            "Osteoarthritis; localized",
            "Osteoarthrosis, localized, primary",
            "Osteoarthrosis, generalized",
            "Osteoarthrosis involving more than one site, but not specified as generalized",
            "Osteoarthrosis NOS",
            "Symptoms and disorders of the joints",
            "Ankylosis of joint",
            "Stiffness of joint",
            "Difficulty in walking",
            "Joint effusions",
            "Hemarthrosis",
            "Derangement of joint, non-traumatic",
            "Pathological, developmental or recurrent dislocation",
            "Other derangement of joint",
            "Osteoporosis, osteopenia and pathological fracture",
            "Osteoporosis",
            "Osteoporosis NOS",
            "Senile osteoporosis",
            "Other specified osteoporosis",
            "Pathologic fracture",
            "Pathologic fracture of vertebrae",
            "Pathologic fracture of femur",
            "Stress fracture",
            "Osteopenia or other disorder of bone and cartilage",
            "Pain in joint",
            "Osteomyelitis, periostitis, and other infections involving bone",
            "Osteomyelitis",
            "Acute osteomyelitis",
            "Chronic osteomyelitis",
            "Unspecified osteomyelitis",
            "Arthropathy associated with infections",
            "Pyogenic arthritis",
            "Behcet's syndrome",
            "Infective connective tissue disorders",
            "Arthropathy associated with other disorders classified elsewhere",
            "Arthropathy associated with neurological disorders",
            "Rheumatoid arthritis and other inflammatory polyarthropathies",
            "Rheumatoid arthritis",
            "Juvenile rheumatoid arthritis",
            "Other inflammatory spondylopathies",
            "Sacroiliitis NEC",
            "Ankylosing spondylitis",
            "Spinal enthesopathy",
            "Other arthropathies",
            "Arthropathy NOS",
            "Polymyalgia Rheumatica",
            "Spinal stenosis",
            "Spinal stenosis of lumbar region",
            "Spondylosis and allied disorders",
            "Spondylosis without myelopathy",
            "Spondylosis with myelopathy",
            "Intervertebral disc disorders",
            "Displacement of intervertebral disc",
            "Degeneration of intervertebral disc",
            "Intervertebral disc disorder with myelopathy",
            "Postlaminectomy syndrome",
            "Other and unspecified disc disorder",
            "Other disorders of cervical region",
            "Other and unspecified disorders of back",
            "Disorders of sacrum",
            "Cancer of mouth",
            "Cancer of tongue",
            "Cancer of major salivary glands",
            "Cancer of the gums",
            "Cancer of the mouth floor",
            "Cancer of larynx, pharynx, nasal cavities",
            "Cancer of oropharynx",
            "Cancer of nasopharynx",
            "Cancer of hypopharynx",
            "Cancer of larynx",
            "Thyroid cancer",
            "Hx of malignant neoplasm of oral cavity and pharynx",
            "Cancer of other endocrine glands",
            "Cancer of of nasal cavities",
            "Cancer, suspected or other",
            "Cancer of esophagus",
            "Malignant neoplasm, other",
            "Cancer of stomach",
            "Malignant neoplasm of head, face, and neck",
            "Colorectal cancer",
            "Colon cancer",
            "Radiotherapy",
            "Malignant neoplasm of rectum, rectosigmoid junction, and anus",
            "Chemotherapy",
            "Cancer of liver and intrahepatic bile duct",
            "Secondary malignant neoplasm",
            "Malignant neoplasm of liver, primary",
            "Secondary malignancy of lymph nodes",
            "Pancreatic cancer",
            "Secondary malignancy of respiratory organs",
            "Neoplasm of unspecified nature of digestive system",
            "Secondary malignant neoplasm of digestive systems",
            "Malignant neoplasm of other and ill-defined sites within the digestive organs and peritoneum",
            "Secondary malignant neoplasm of liver",
            "Malignant neoplasm of small intestine, including duodenum",
            "Secondary malignancy of brain/spine",
            "Malignant neoplasm of gallbladder and extrahepatic bile ducts",
            "Secondary malignancy of bone",
            "Malignant neoplasm of retroperitoneum and peritoneum",
            "Secondary malignant neoplasm of skin",
            "Cancer of intrathoracic organs",
            "Neoplasm of uncertain behavior",
            "Neurofibromatosis",
            "Cancer within the respiratory system",
            "Myeloproliferative disease",
            "Cancer of bronchus; lung",
            "Polycythemia vera",
            "Hodgkin's disease",
            "Cancer of bone and connective tissue",
            "Cancer of other lymphoid, histiocytic tissue",
            "Bone cancer",
            "Non-Hodgkins lymphoma",
            "Cancer of connective tissue",
            "Nodular lymphoma",
            "Skin cancer",
            "Reticulosarcoma",
            "Melanomas of skin, dx or hx",
            "Lymphosarcoma",
            "Melanomas of skin",
            "Large cell lymphoma",
            "Other non-epithelial cancer of skin",
            "Leukemia",
            "Basal cell carcinoma",
            "Lymphoid leukemia",
            "Squamous cell carcinoma",
            "Lymphoid leukemia, acute",
            "Carcinoma in situ of skin",
            "Lymphoid leukemia, chronic",
            "Neoplasm of uncertain behavior of skin",
            "Myeloid leukemia",
            "Breast cancer",
            "Myeloid leukemia, acute",
            "Breast cancer [female]",
            "Myeloid leukemia, chronic",
            "Malignant neoplasm of female breast",
            "Monocytic leukemia",
            "Neoplasm of uncertain behavior of breast",
            "Multiple myeloma",
            "Acquired absence of breast",
            "Benign neoplasm of colon",
            "Cervical cancer and dysplasia",
            "Neuroendocrine tumors",
            "Cervical cancer",
            "Cervical intraepithelial neoplasia [CIN] [Cervical dysplasia]",
            "Benign neoplasm of lip, oral cavity, and pharynx",
            "Malignant neoplasm of uterus",
            "Benign neoplasm of other parts of digestive system",
            "Cancer of other female genital organs",
            "Benign neoplasm of respiratory and intrathoracic organs",
            "Malignant neoplasm of ovary and other uterine adnexa",
            "Benign neoplasm of bone and articular cartilage",
            "Malignant neoplasm of ovary",
            "Lipoma",
            "Cancer of other female genital organs (excluding uterus and ovary)",
            "Lipoma of skin and subcutaneous tissue",
            "Cancer of prostate",
            "Other benign neoplasm of connective and other soft tissue",
            "Cancer of other male genital organs",
            "Benign neoplasm of skin",
            "Malignant neoplasm of unspecified male genital organ",
            "Vascular hamartomas and non-neoplastic nevi",
            "Malignant neoplasm of testis",
            "Nevus, non-neoplastic",
            "Cancer of urinary organs (incl. kidney and bladder)",
            "Benign neoplasm of uterus",
            "Cancer of kidney and renal pelvis",
            "Uterine leiomyoma",
            "Malignant neoplasm of kidney, except pelvis",
            "Other benign neoplasm of uterus",
            "Malignant neoplasm of renal pelvis",
            "Benign neoplasm of ovary",
            "Cancer of bladder",
            "Malignant neoplasm of bladder",
            "Benign neoplasm of other female genital organs",
            "Benign neoplasm of male genital organs",
            "Malignant neoplasm of other urinary organs",
            "Cancer of eye",
            "Benign neoplasm of kidney and other urinary organs",
            "Manlignant and unknown neoplasms of brain and nervous system",
            "Benign neoplasm of eye",
            "Cancer of brain and nervous system",
            "Benign neoplasm of eye, uveal",
            "Cancer of brain",
            "Benign neoplasm of brain and other parts of nervous system",
            "Benign neoplasm of brain, cranial nerves, meninges",
            "Benign neoplasm of spinal cord, meninges",
            "Benign neoplasm of thyroid glands",
            "Benign neoplasm of other endocrine glands and related structures",
            "Benign neoplasm of adrenal gland",
            "Benign neoplasm of parathyroid gland",
            "Benign neoplasm of pituitary gland and craniopharyngeal duct (pouch)",
            "Hemangioma and lymphangioma, any site",
            "Hemangioma of skin and subcutaneous tissue",
            "Benign neoplasm of unspecified sites",
            "Benign neoplasm of lymph nodes",
            "Bone marrow or stem cell transplant",
            "Other degenerative diseases of the basal ganglia",
            "Degenerative disease of the spinal cord",
            "Spinocerebellar disease",
            "Anterior horn cell disease",
            "Amyotrophic Lateral Sclerosis",
            "Multiple sclerosis",
            "Disorders of the autonomic nervous system",
            "Peripheral autonomic neuropathy",
            "Pain",
            "Acute pain",
            "Chronic pain",
            "Other headache syndromes",
            "Migraine",
            "Migrain with aura",
            "Other demyelinating diseases of central nervous system",
            "Hemiplegia",
            "Infantile cerebral palsy",
            "Other paralytic syndromes",
            "Epilepsy, recurrent seizures, convulsions",
            "Epilepsy",
            "Generalized convulsive epilepsy",
            "Partial epilepsy",
            "Convulsions",
            "Abnormal findings on study of brain and/or nervous system",
            "Nonspecific abnormal findings on radiological and other examination of skull and head",
            "Nonspecific abnormal results of function study of brain and central nervous system",
            "Nonspecific abnormal findings in cerebrospinal fluid",
            "Cataplexy and narcolepsy",
            "Other conditions of brain",
            "Cerebral edema and compression of brain",
            "Cerebral cysts",
            "Coma",
            "Encephalopathy, not elsewhere classified",
            "Other conditions of brain, NOS",
            "Other and unspecified disorders of the nervous system",
            "Abnormal movement",
            "Abnormal involuntary movements",
            "Abnormality of gait",
            "Lack of coordination",
            "Disturbances of sensation of smell and taste",
            "Other peripheral nerve disorders",
            "Disorders of other cranial nerves",
            "Trigeminal nerve disorders [CN5]",
            "Facial nerve disorders [CN7]",
            "Nerve root and plexus disorders",
            "Nerve plexus lesions",
            "Nerve root lesions",
            "Complex regional/central pain syndrome",
            "Chronic pain syndrome",
            "Hereditary and idiopathic peripheral neuropathy",
            "Inflammatory and toxic neuropathy",
            "Myoneural disorders",
            "Myasthenia gravis",
            "Muscular dystrophies and other myopathies",
            "Muscular dystrophies",
            "Myopathy",
            "Meningitis",
            "Encephalitis",
            "Encephalitis, non-infectious",
            "Other CNS infection and poliomyelitis",
            "Phlebitis and thrombophlebitis of intracranial venous sinuses",
            "Sleep disorders",
            "Hypersomnia",
            "Sleep apnea",
            "Central/nonobstroctive sleep apnea",
            "Obstructive sleep apnea",
            "Insomnia",
            "Organic or persistent insomnia",
            "Parasomnia",
            "Sleep related movement disorders",
            "Restless legs syndrome",
            "Sleep related leg cramps",
            "Other cerebral degenerations",
            "Hydrocephalus",
            "Cerebral degeneration, unspecified",
            "Parkinson's disease",
            "Extrapyramidal disease and abnormal movement disorders",
            "Essential tremor",
            "Myoclonus",
            "Tics and choreas",
            "Torsion dystonia",
            "Other perinatal conditions of fetus or newborn",
            "Respiratory conditions of fetus and newborn",
            "Interstitial emphysema and related conditions of newborn",
            "Transitory tachypnea or apnea of newborn",
            "Endocrine and metabolic disturbances of fetus and newborn",
            "Hemorrhage of fetus or newborn",
            "Hematological disorders of newborn",
            "Perinatal disorders of digestive system",
            "Conditions involving the integument and temperature regulation of fetus and newborn",
            "Perinatal jaundice",
            "Neonatal bradycardia or tachycardia",
            "Infections specific to the perinatal period",
            "Chronic bronchitis",
            "Obstructive chronic bronchitis",
            "Bronchiectasis",
            "Bronchitis",
            "Cystic fibrosis",
            "Lung disease due to external agents",
            "Pneumoconiosis",
            "Pneumonitis due to inhalation of food or vomitus",
            "Postinflammatory pulmonary fibrosis",
            "Pulmonary congestion and hypostasis",
            "Other alveolar and parietoalveolar pneumonopathy",
            "Idiopathic fibrosing alveolitis",
            "Other pulmonary inflamation or edema",
            "Empyema and pneumothorax",
            "Pleurisy; pleural effusion",
            "Pulmonary collapse; interstitial and compensatory emphysema",
            "Respiratory failure, insufficiency, arrest",
            "Respiratory failure",
            "Respiratory insufficiency",
            "Pulmonary insufficiency or respiratory failure following trauma and surgery",
            "Respiratory arrest",
            "Dependence on respirator [Ventilator] or supplemental oxygen",
            "Other diseases of lung",
            "Lung transplant",
            "Other symptoms of respiratory system",
            "Wheezing",
            "Painful respiration",
            "Abnormal chest sounds",
            "Shortness of breath",
            "Cough",
            "Other dyspnea",
            "Respiratory abnormalities",
            "Hypoventilation",
            "Apnea",
            "Orthopnea",
            "Hyperventilation",
            "Disorders of diaphragm",
            "Abnormal findings examination of lungs",
            "Abnormal results of function study of pulmonary system",
            "Solitary pulmonary nodule",
            "Abnormal sputum",
            "Hemoptysis",
            "Other diseases of respiratory system, not elsewhere classified",
            "Tracheostomy complications",
            "Respiratory complications",
            "Other diseases of respiratory system, NEC",
            "Symptoms involving respiratory system and other chest symptoms",
            "Acute sinusitis",
            "Acute upper respiratory infections of multiple or unspecified sites",
            "Acute pharyngitis",
            "Acute laryngitis and tracheitis",
            "Septal Deviations/Turbinate Hypertrophy",
            "Nasal polyps",
            "Chronic pharyngitis and nasopharyngitis",
            "Diseases of the larynx and vocal cords",
            "Chronic laryngitis",
            "Paralysis/spasm of vocal cords or larynx",
            "Voice disturbance",
            "Acute and chronic tonsillitis",
            "Acute tonsillitis",
            "Chronic tonsillitis and adenoiditis",
            "Chronic sinusitis",
            "Postnasal drip",
            "Allergic rhinitis",
            "Epistaxis or throat hemorrhage",
            "Throat pain",
            "Other upper respiratory disease",
            "Pneumonia",
            "Bacterial pneumonia",
            "Pneumococcal pneumonia",
            "Pseudomonal pneumonia",
            "MRSA pneumonia",
            "Viral pneumonia",
            "Pneumonia due to fungus (mycoses)",
            "Bronchopneumonia and lung abscess",
            "Influenza",
            "Acute bronchitis and bronchiolitis",
            "Asthma",
            "Chronic obstructive asthma",
            "Chronic obstructive asthma with exacerbation",
            "Asthma with exacerbation",
            "Chronic airway obstruction",
            "Emphysema",
            "Nonsenile Cataract",
            "Senile cataract",
            "Disorders of refraction and accommodation; blindness and low vision",
            "Disorders of the globe",
            "Progressive myopia",
            "Myopia",
            "Hypotony of eye",
            "Astigmatism",
            "Retinal detachments and defects",
            "Hypermetropia",
            "Retinal detachment with retinal defect",
            "Blindness and low vision",
            "Other retinal disorders",
            "Visual disturbances",
            "Retinopathy of prematurity",
            "Amblyopia",
            "Degeneration of macula and posterior pole of retina",
            "Diplopia and disorders of binocular vision",
            "Macular degeneration, dry",
            "Anisometropia",
            "Macular degeneration, wet",
            "Visual field defects",
            "Cystoid macular degeneration of retina",
            "Macular puckering of retina",
            "Subjective visual disturbances",
            "Drusen (degenerative) of retina",
            "Psychophysical visual disturbances",
            "Macular degeneration (senile) of retina NOS",
            "Infection of the eye",
            "Other nondiabetic retinopathy",
            "Eye infection, viral",
            "Separation of retinal layers",
            "Conjunctivitis, infectious",
            "Retinal vascular changes and abnomalities",
            "Keratitis",
            "Toxic maculopathy of retina",
            "Corneal ulcer",
            "Peripheral retinal degenerations",
            "Superficial keratitis",
            "Hereditary retinal dystrophies",
            "Keratoconjunctivitis",
            "Retinal hemorrhage/ischemia",
            "Keratoconjunctivitis sicca",
            "Retinal edema",
            "Inflammation of the eye",
            "Chorioretinal inflammations, scars, and other disorders of choroid",
            "Uveitis, noninfectious or NOS",
            "Chorioretinal scars",
            "Conjunctivitis, noninfectious",
            "Corneal opacity and other disorders of cornea",
            "Corneal opacity",
            "Allergic conjunctivitis",
            "Corneal edema",
            "Inflammation of eyelids",
            "Corneal degenerations",
            "Disorders of conjunctiva",
            "Corneal dystrophy",
            "Other disorders of eyelids",
            "Fuchs' dystrophy",
            "Ectropion or entropion",
            "Cornea replaced by transplant",
            "Lagophthalmos",
            "Glaucoma",
            "Ptosis of eyelid",
            "Open-angle glaucoma",
            "Dermatochalasis",
            "Primary open angle glaucoma",
            "Disorders of lacrimal system",
            "Primary angle-closure glaucoma",
            "Dry eyes",
            "Pseudoexfoliation glaucoma",
            "Epiphora",
            "Cataract",
            "Disorders of the orbit",
            "Disorders of optic nerve and visual pathways",
            "Optic atrophy",
            "Optic neuritis/neuropathy",
            "Strabismus and other disorders of binocular eye movements",
            "Strabismus (not specified as paralytic)",
            "Nystagmus and other irregular eye movements",
            "Paralytic strabismus",
            "Other disorders of eye",
            "Scleritis and episcleritis",
            "Disorders of vitreous body",
            "Aphakia and other disorders of lens",
            "Anomalies of pupillary function",
            "Disorders of iris and ciliary body",
            "Pain, swelling or discharge of eye",
            "Disorders of external ear",
            "Otitis externa",
            "Impacted cerumen",
            "Otitis media and Eustachian tube disorders",
            "Otitis media",
            "Suppurative and unspecified otitis media",
            "Eustachian tube disorders",
            "Mastoiditis & related conditions",
            "Otorrhea",
            "Otalgia",
            "Otosclerosis",
            "Other disorders of tympanic membrane",
            "Perforation of tympanic membrane",
            "Other disorders of middle ear and mastoid",
            "Cholesteatoma",
            "Tympanosclerosis and middle ear disease related to otitis media",
            "Vertiginous syndromes and other disorders of vestibular system",
            "Meniere's disease",
            "Peripheral or central vertigo",
            "Central origin vertigo",
            "Labyrinthitis",
            "Dizziness and giddiness (Light-headedness and vertigo)",
            "Hearing loss",
            "Sensorineural hearing loss",
            "Conductive hearing loss",
            "Degenerative and vascular disorders of ear",
            "Tinnitus",
            "Back pain",
            "Cervicalgia",
            "Thoracic or lumbosacral neuritis or radiculitis, unspecified",
            "Sciatica",
            "Cervical radiculitis",
            "Neuralgia, neuritis, and radiculitis NOS",
            "Nonallopathic lesions NEC",
            "Myalgia and myositis unspecified",
            "Musculoskeletal symptoms referable to limbs",
            "Swelling of limb",
            "Cramp of limb",
            "Symptoms of the muscles",
            "Muscular wasting and disuse atrophy",
            "Spasm of muscle",
            "Muscle weakness",
            "Rhabdomyolysis",
            "Facial weakness",
            "Hypothermia/Chills",
            "Symptoms involving nervous and musculoskeletal systems",
            "Abnormal posture",
            "Edema",
            "Pallor and flushing",
            "Fever of unknown origin",
            "Postprocedural fever",
            "Abdominal pain",
            "Syncope and collapse",
            "Nausea and vomiting",
            "Persistent vomiting",
            "Nonspecific findings on examination of blood",
            "Elevated sedimentation rate",
            "Other abnormal blood chemistry",
            "Elevated C-reactive protein (CRP)",
            "Gangrene",
            "Abnormal results of other function studies (bladder, pancreas, placenta, spleen, etc)",
            "Abnormal tumor markers",
            "Elevated carcinoembryonic antigen [CEA]",
            "Elevated cancer antigen 125 [CA 125]",
            "Shock",
            "Cardiogenic shock",
            "Malaise and fatigue",
            "Chronic fatigue syndrome"
          ],
          "OR": [
            0.732646476902416,
            1.46840892686159,
            0.848312739576548,
            0.671218807688996,
            0.947856773771119,
            0.861202919393987,
            1.47212795893708,
            0.55599291621864,
            1.04811452119582,
            0.545540199202343,
            0.762629279769626,
            0.788475918920066,
            0.868062075486595,
            0.739973655926372,
            0.814305527785943,
            1.00168886705179,
            1.00439613480227,
            1.34717442388809,
            0.868712921264013,
            0.918838710713216,
            1.41516402547364,
            1.1501449061843,
            0.949677955374011,
            1.93325070336997,
            0.705455116671576,
            1.27617538510589,
            0.770694559991861,
            0.928863804055529,
            0.311426373224172,
            1.19693128347513,
            0.878588787172834,
            1.46480217315105,
            1.2318107919558,
            0.783564900800576,
            0.535006187877932,
            0.647158723875704,
            1.03614281093271,
            1.3042018609416,
            1.63639282764855,
            1.1474862977257,
            0.919564815973571,
            1.32361777034588,
            1.10789404058817,
            0.824298073637761,
            0.742239004012302,
            0.949778626942526,
            0.791419682785158,
            1.16283556129748,
            0.982123704867685,
            0.840756612623968,
            0.967674960428787,
            1.06463645829012,
            1.23629791515647,
            0.832765548712775,
            0.785607894103936,
            0.768567848902865,
            1.83754708468914,
            1.01165518164018,
            1.58344426287746,
            0.859327183802309,
            1.36749510851117,
            1.31844484388898,
            1.23150680413889,
            1.35917561528273,
            1.16251564851077,
            1.57929269168316,
            1.08301550433434,
            0.762765173651796,
            0.963728217891842,
            1.61959859537869,
            0.83420209338226,
            1.26946318041719,
            0.953879048954506,
            0.563227387490184,
            1.21940754652852,
            0.738365999460795,
            0.742491287440324,
            0.688677658671577,
            1.46333402348836,
            1.22272625782294,
            0.747260041804829,
            1.19685045903095,
            0.766924538840117,
            1.27330443295953,
            0.720451801329556,
            0.964819167906605,
            1.39741864829226,
            1.41887375940965,
            1.28062685150622,
            1.45357643976714,
            1.44512284544064,
            1.50198401719623,
            1.07528079188355,
            1.47492799818143,
            1.59142634836654,
            1.46876714874059,
            0.98669192950496,
            0.738796852282193,
            0.94604927805481,
            0.871073184784531,
            1.06473122125717,
            0.980842374087123,
            0.805252325596318,
            0.848857241136245,
            0.780713291844105,
            0.709400196452969,
            1.04378933388586,
            0.969330105352867,
            1.20662302380931,
            1.22245624169114,
            1.58653459603083,
            2.05504285161733,
            1.29638600586894,
            0.797366609520244,
            1.14463839609735,
            1.02904839037824,
            0.858361765772481,
            1.91591700499074,
            0.547125774742131,
            0.550576826183728,
            1.02443486147917,
            0.741345216138665,
            0.950415962888302,
            2.34832648970885,
            0.936910682343998,
            0.915565320414784,
            0.812675114037298,
            0.700063186943764,
            0.748470451232576,
            1.09484105079976,
            0.469508808945501,
            1.19627125728135,
            0.865491834876826,
            0.810168232351436,
            1.70809637895622,
            0.650779403252917,
            1.21852631349233,
            1.70799239649845,
            1.12757524980172,
            2.06070516185369,
            0.703454174841199,
            1.44510870352399,
            1.64434093586751,
            0.677402309787899,
            0.548420437479392,
            0.838218216934865,
            1.59871964847599,
            1.0519290955469,
            1.15090580408411,
            1.40728239862912,
            1.40918030535616,
            1.00086372897874,
            1.13070710457629,
            0.742192114149459,
            1.33488049791718,
            1.09415156703186,
            1.63428813756583,
            0.877034201095772,
            1.27337183210829,
            0.689351612071896,
            1.09588712065481,
            0.597927213911246,
            0.212924288727343,
            0.435985691531561,
            0.810400453704419,
            0.895045696795694,
            0.85959196542548,
            1.95002325241221,
            0.98275152629544,
            0.484540213006921,
            0.762729514627834,
            1.03479963175384,
            0.571047087845238,
            0.551328799569664,
            0.622931439055609,
            1.21423125855876,
            0.649925658093033,
            0.855250532140548,
            1.03850369126664,
            0.48609892216848,
            0.856949951069616,
            1.30504699171253,
            0.761986696317056,
            0.665482966639208,
            0.464950860632948,
            1.31022243880678,
            1.15283401855384,
            0.797883752543411,
            1.16074191185588,
            1.04281980254061,
            0.744046874821655,
            0.658889609337896,
            0.61898826903322,
            1.18244294507843,
            0.799604870032644,
            1.48752366056619,
            1.58026220262051,
            0.808584993491892,
            0.734428047640156,
            0.64579125938473,
            0.634444151095027,
            0.456014766596965,
            1.01858069283757,
            0.941002657532006,
            0.653910253967301,
            1.14687480565056,
            0.716887515949334,
            0.390591134961852,
            0.642507376889129,
            1.27709767001274,
            1.03071535346161,
            1.44403324202316,
            0.969175958796051,
            0.641758101749061,
            1.05197681990954,
            1.13234736684484,
            1.21667535489367,
            0.9446275061653,
            0.494570982890879,
            0.775536727214778,
            0.932547117834608,
            0.950765563525159,
            0.778920344684691,
            1.05992533606952,
            0.828413449887737,
            0.729848788673713,
            1.06586856644915,
            1.14893402345711,
            0.586339556899683,
            1.3486440461548,
            1.28674740457861,
            0.924451799600197,
            0.793051162667869,
            0.514941811228149,
            0.715786751254347,
            0.524907244854598,
            1.17718038947927,
            1.21281937927753,
            1.16078168082212,
            1.30530956409057,
            1.31904890277775,
            1.05684008724894,
            1.12746848071762,
            1.68845995836775,
            0.883006215828354,
            1.54204717306851,
            1.68974894352606,
            1.20933329754886,
            1.00381547179883,
            0.70435766528641,
            0.791833820322028,
            1.62214378214627,
            0.702816897035986,
            1.22547923384983,
            1.34068613819197,
            0.838168892558499,
            0.782916606872163,
            1.00161264478485,
            1.34134184286143,
            1.54413543069689,
            1.23162657468313,
            1.40899487714283,
            0.961580109141266,
            1.22952697283181,
            0.701111313276554,
            1.83789696232846,
            1.40740206288476,
            1.53015154316486,
            0.845734466313269,
            0.726066551695198,
            1.3049582897994,
            0.873871215260051,
            0.637406597469877,
            1.38775259968173,
            1.57904149999376,
            1.17422228683205,
            1.47111897069658,
            0.692376472336247,
            0.726311186747688,
            0.761501264560546,
            1.03930478350583,
            1.0812956638554,
            1.31525831845356,
            0.538667450125176,
            1.23101931720887,
            0.645586216686669,
            0.825945911251468,
            0.779820949729039,
            0.910294587243444,
            1.02405830494758,
            1.41727814506739,
            1.39236139365996,
            0.864187177122725,
            0.972896712475143,
            1.53937804238638,
            1.32649566342096,
            1.40956430411409,
            1.55717410496925,
            1.49809411629348,
            0.969660101351237,
            0.784109105432481,
            1.13121535225166,
            1.41377653045929,
            1.21365705223357,
            1.01423626540992,
            0.723107057580297,
            1.54745057983836,
            0.687367502129092,
            0.718572700090633,
            0.950151894216871,
            0.812152638642866,
            0.874050031975131,
            1.22747649998683,
            1.04643904299242,
            1.62411738857627,
            1.67771372268267,
            1.08573301693376,
            1.41833223693212,
            0.726609226230007,
            1.03775725886715,
            1.57607923447154,
            1.27553500853629,
            1.03722128311673,
            1.11871579531811,
            1.74336545097502,
            0.881827905904163,
            1.72289418945333,
            1.20709274748946,
            0.755519215900132,
            0.800984184450958,
            1.24642580730125,
            1.55274412512698,
            0.762160715303292,
            1.14131213334622,
            0.641023604485704,
            0.883669776715068,
            1.63799289578106,
            1.59839497878437,
            1.29885048980301,
            0.768547559927326,
            0.9339099704527,
            0.850580714879872,
            1.3085615217723,
            0.978613034344119,
            1.11019589389046,
            0.812258761156734,
            0.831970994626495,
            0.756150954428764,
            1.53454482655879,
            1.53296093493863,
            1.04819154002006,
            1.31778047529049,
            1.25921797190701,
            0.816833783261631,
            0.756805348357662,
            1.36932967320923,
            1.21184380025908,
            1.05897365117073,
            0.780988889193136,
            0.720762615625827,
            1.00043938647285,
            1.11041876869218,
            0.783902809946065,
            0.539467957483059,
            0.753539472095458,
            0.972381848704947,
            0.68532766249847,
            1.2463858246773,
            1.00906815705982,
            1.46631736318523,
            1.92553869266552,
            1.17652468995576,
            1.5136680547148,
            1.2910129818439,
            0.989667610888008,
            0.681515167639438,
            0.732079165640609,
            1.02708052118551,
            1.51274010905391,
            1.13702608475462,
            1.567460438543,
            0.822888294527698,
            0.829801236035594,
            0.744321916559074,
            1.08342074428997,
            1.04180538937567,
            1.29192107540427,
            1.31071506717685,
            1.22620146520021,
            0.748679749911374,
            1.01088580520059,
            0.384861565644601,
            0.57166306999881,
            1.2619896637545,
            1.40109148154675,
            1.17708671410164,
            1.51215680982952,
            1.21798484256379,
            0.994241495120814,
            1.40363224327471,
            1.15331873262171,
            1.14247203281348,
            1.0459677674665,
            0.720238602017324,
            1.20749563462578,
            1.41863233092404,
            1.22278038997203,
            1.04598131998609,
            1.04199939506935,
            0.781602204434371,
            1.53033874353161,
            0.919336119086005,
            0.921576277759334,
            0.910605385714769,
            1.47844633254746,
            0.576704991067736,
            0.62998305873007,
            0.761676858649572,
            1.15491021506852,
            1.48954345957702,
            1.74179039786942,
            0.887457293805016,
            0.860724086368846,
            1.04941619364629,
            1.35447718258262,
            1.06154036448361,
            1.6050277267932,
            1.24117088541412,
            1.04932861024915,
            1.36125797568168,
            1.6957579188114,
            0.677749955261312,
            0.533591936497334,
            0.820145887150831,
            1.16114450605272,
            1.37849484091043,
            1.76028104160761,
            1.08227398020336,
            1.34847205331596,
            1.08176686017006,
            0.932137342339268,
            1.37566200226906,
            1.45135629606643,
            1.48338394528255,
            1.23427094573434,
            0.799200760583644,
            1.31938919486012,
            0.762547223373403,
            0.782906605702144,
            0.889795963870078,
            0.609314948794044,
            1.07240953129926,
            0.561751363394313,
            1.2111493298721,
            1.07685823548144,
            1.93867844835565,
            0.885351871978679,
            0.704515829904515,
            1.00505574646544,
            1.04054879274815,
            1.76151261473075,
            2.05437369612814,
            0.855930374001898,
            0.789347136572392,
            0.846075005481181,
            0.855899039584505,
            0.632785519524803,
            0.914366430664249,
            1.03407944942159,
            1.14448225000838,
            1.23993176815147,
            1.40532833039551,
            0.364939445590006,
            0.663222257907884,
            1.27410328655269,
            0.708022666252789,
            1.29585639362445,
            1.06780852154582,
            1.0101611380911,
            1.32091712048817,
            0.784387985822594,
            1.57990481048799,
            1.14425206300209,
            0.454722773491846,
            1.51971168823144,
            0.960005927706815,
            1.29879280621721,
            1.18180706429159,
            1.34776806451611,
            0.527549186777456,
            0.510630274683065,
            1.54993919190578,
            1.23471511394394,
            0.854672498133173,
            0.807428999031768,
            0.56202456577571,
            1.26015247726114,
            0.922881318653,
            0.893179148843221,
            0.661251904204297,
            1.16762168370589,
            1.11970400644722,
            1.0870685492733,
            0.933621164465952,
            1.15689548361569,
            1.10003712122235,
            0.937033014900378,
            0.661381544825002,
            0.857634722838165,
            0.884962371075599,
            0.76840517458467,
            0.953682156017399,
            0.926919765922427,
            0.819870697291819,
            1.43910696758784,
            0.691918907156725,
            1.8593318268538,
            1.21363984656652,
            1.4199828603382,
            0.797708972694199,
            0.746001999017229,
            1.39926776911563,
            1.13748796639763,
            1.25518009912956,
            0.646346003030907,
            0.947118284282254,
            0.493882127744283,
            0.712301276690734,
            0.118540642498564,
            0.996048673255544,
            0.972475214911695,
            0.999068275458901,
            0.6108985016844,
            0.789886379512258,
            0.67109754658187,
            1.05558120107709,
            0.939720461553482,
            0.992898340071282,
            1.57526583319181,
            0.73237201468476,
            1.94966285858012,
            0.739607138604004,
            1.61468595354818,
            0.711734358574955,
            0.483085423494998,
            0.00760395027291961,
            0.740601230159441,
            0.925953407506633,
            0.842854298409578,
            0.734478950805141,
            0.857316911061767,
            0.884995653903543,
            0.438937607785882,
            1.4758742997027,
            1.05430897657928,
            0.814072384705574,
            0.948676846024604,
            1.56564670907357,
            1.15898564938209,
            0.975631254990056,
            0.693361967297729,
            0.650887803308267,
            0.833634510498308,
            1.19148686982924,
            0.817909709199189,
            0.635665612909868,
            0.877353924083764,
            0.921508095332771,
            0.790967955926007,
            0.883291315437685,
            0.471350465573966,
            1.15279765202935,
            0.51103497174537,
            0.594876271333181,
            0.603995818876583,
            0.824230812873132,
            1.31055713271489,
            1.26008699266165,
            0.869095264447192,
            0.640263363143075,
            0.661899759030165,
            0.738294000631993,
            0.901557601848098,
            0.793764418408816,
            0.820829531631259,
            1.01029859803576,
            0.587200694015,
            1.25286123474885,
            1.30255796515942,
            1.01253888762472,
            1.15343081783513,
            1.65938942450797,
            0.738940997135686,
            1.13674090568209,
            0.995599273177207,
            1.11286058313154,
            1.50694625405839,
            0.887565789017233,
            1.02820564130403,
            1.41817654692917,
            1.43873675916216,
            0.908905251298031,
            1.04718019367149,
            2.11350152620347,
            1.2522724653882,
            0.633135165819595,
            0.796223778242385,
            1.30512233324582,
            1.39904956486458,
            1.23320746032381,
            1.37859476360399,
            1.03283920927509,
            1.02072059297364,
            0.977942661198671,
            1.22970434560213,
            1.06453621152937,
            0.784827005404698,
            0.551198753436582,
            1.269666982661,
            0.961860877867083,
            0.827888085149713,
            0.772741064137011,
            1.26881940162787,
            1.15783070239122,
            1.50918744469935,
            0.920151261185471,
            0.939869034790786,
            1.2731050421102,
            1.17728896882797,
            1.03359694463285,
            1.24882679837267,
            1.14851416549296,
            0.870889269533101,
            1.56438718361955,
            0.792098575394787,
            0.919097325528722,
            2.07118785862415,
            0.952060646099143,
            1.7198027933368,
            0.535231350336013,
            1.23079386319887,
            0.71474525176901,
            1.64171731887618,
            0.889171074977018,
            1.10347895015168,
            1.17283466003719,
            1.03003948921768,
            0.741848344760842,
            0.552759008108831,
            0.273115925741409,
            0.9249136918522,
            1.34926552741416,
            0.623382601920164,
            0.746034349066485,
            2.18791337397729,
            1.70161220957735,
            1.02685276784842,
            1.33403942708625,
            0.906106938939308,
            0.838562017730755,
            1.40135321250628,
            0.946860074608625,
            1.34870597675617,
            1.59197431745357,
            0.732232811544466,
            1.21105758787255,
            0.975282104076472,
            0.728988680271457,
            1.23922466152562,
            0.753282572386553,
            1.19911634301233,
            1.4336894329451,
            1.75825198440207,
            0.727830029383456,
            1.46631110738777,
            0.836865729494468,
            0.659128762867648,
            0.990213443425123,
            0.983551288942853,
            0.40959416673407,
            0.778493129611248,
            1.44158847296599,
            1.41009613915288,
            0.826171262449227,
            1.45736522983701,
            0.867001350656804,
            1.66930696015013,
            0.75251696591943,
            1.51905654806178,
            1.36879815250169,
            1.21483031997899,
            1.96437478285516,
            1.48450555051747,
            0.877781371682629,
            1.74697350830678,
            1.79672574905046,
            1.81344608526048,
            0.868268529302649,
            1.36213047954719,
            1.47183301498648,
            0.797472154676012,
            1.24507962334435,
            1.16514224259974,
            1.47715999678837,
            1.15189194896271,
            0.858867997512978,
            0.799105777484412,
            2.31534699411504,
            1.08215864953469,
            0.773320725069586,
            0.754419315608106,
            1.482267438001,
            0.769542461628316,
            0.443320533015169,
            1.17142203815747,
            1.26419634092157,
            1.26987716118922,
            1.07569193676653,
            1.3957094221639,
            1.19064143648185,
            1.44573935178667,
            2.38554925604747,
            1.58315655493154,
            1.1348779335449,
            1.11495140754757,
            1.55946831327805,
            1.76027457394078,
            1.54918659537309,
            1.6832637662749,
            1.70753084849915,
            1.48157779053901,
            1.46440806911282,
            1.19828987002373,
            1.61644442652678,
            1.53573317641206,
            1.24249210072397,
            1.12525618193205,
            0.920114368906198,
            1.02171486459565,
            0.995684746497811,
            0.803189808870188,
            0.928896627831948,
            1.32157008268125,
            1.16172660740829,
            1.17921309060652,
            0.918871413881169,
            0.796886268831691,
            0.857217242947573,
            0.968619568532099,
            1.30386827852344,
            0.318355580620689,
            0.760191234468874,
            1.29587927765795,
            1.32871057543473,
            0.740552083822835,
            0.974261010815088,
            0.864890734185859,
            0.907458112191204,
            0.403228650149016,
            1.51742721760017,
            0.912056822736002,
            0.835212654130214,
            0.755246879201171,
            1.21108745759269,
            0.980051813805582,
            1.52306297830073,
            0.973447758213284,
            1.73565111067146,
            0.974291181209391,
            1.32533920468448,
            0.554148985508025,
            1.02508820222644,
            1.08059508676641,
            0.827045445165597,
            0.705654934855994,
            1.15242905190971,
            0.786239444682565,
            0.902533305778113,
            1.39317516350187,
            0.860487024241768,
            1.14736743604019,
            0.986668638386816,
            0.697119637256861,
            0.946488511851628,
            1.52459042339609,
            1.28521145474078,
            0.899310356686326,
            1.23162908626436,
            0.92005857848251,
            1.15122410854528,
            1.13581882988708,
            1.42641929205903,
            1.02434652011222,
            0.877474218012988,
            1.10601311693662,
            1.2228899471038,
            1.04213800924458,
            1.06037631718302,
            0.938464492344941,
            1.14881920676993,
            1.17262051969974,
            1.22977759261159,
            1.63760266801924,
            1.4328677677752,
            1.37415548168636,
            0.873093257314359,
            1.33927885445766,
            1.43199221002311,
            1.06588606894237,
            0.279962045036419,
            2.24963610809832,
            0.838798880978522,
            0.857677322636824,
            0.682086878820229,
            1.10702939771131,
            0.544922777117015,
            0.65623455822601,
            0.803438349539789,
            1.27794848066405,
            0.708641358510146,
            0.985278228023148,
            1.02064515408184,
            0.837545658988902,
            1.50323430127045,
            0.685758032060828,
            0.899678576519056,
            0.842959069828101,
            1.22922423485317,
            0.922054484510469,
            0.849323692613248,
            1.04549621502849,
            0.525405519211694,
            0.79237683690025,
            1.40389611911727,
            0.903676625151017,
            1.31298394414724,
            1.26775576220392,
            1.11494670190797,
            0.625609449384069,
            0.755730669166434,
            0.896923189351919,
            1.5079389280763,
            0.771725135119399,
            0.854567825175635,
            1.59995967622264,
            1.15458499733626,
            1.14387490475604,
            0.833313855680484,
            1.32623560268548,
            1.1302627233672,
            1.30796061431563,
            1.37255860159034,
            1.01614008925542,
            1.72751989545487,
            2.06804658596905,
            0.843061913442915,
            0.706113634798683,
            1.43386604117951,
            0.740042733732572,
            1.7844793295284,
            1.18194312806498,
            0.796355577319767,
            0.724879349336753,
            1.09859096518572,
            1.16025705224906,
            0.779088582729674,
            1.2970220994337,
            1.33265049176833,
            1.40316637744335,
            1.66048064431793,
            0.859112172075562,
            1.37904102756679,
            0.961521479261034,
            1.39172609527409,
            1.01213961279818,
            1.18376075649923,
            0.659848709715676,
            1.05375022896305,
            1.2869655920173,
            1.6860825054982,
            2.26997128669871,
            0.739094236057531,
            1.31019554203468,
            0.855241737931446,
            1.31193262962806,
            1.18573020102204,
            2.20016310605966,
            0.823250409802957,
            0.529278661659336,
            0.484483932258284,
            1.55127855888975,
            0.664043126818463,
            1.70501403815579,
            0.476280081014998,
            1.3285483731525,
            0.746911227216978,
            0.668887082700686,
            0.943553710611003,
            1.19820129690692,
            1.44455201530551,
            1.0989694880754,
            0.866197065860242,
            1.54362234338676,
            0.800770525628695,
            1.63052587138151,
            0.545640039589359,
            1.05955038490683,
            1.08363943600652,
            0.581124839531444,
            0.926015228522474,
            1.31449169018492,
            1.51802677973348,
            1.25224050081801,
            0.596150104308916,
            1.18278871308871,
            1.70657439496019,
            1.03452165122285,
            0.654633388969157,
            0.827259490267267,
            0.912725923175691,
            0.746990198829066,
            0.315524226434674,
            1.08130672680004,
            0.790232791099057,
            1.44027083965426,
            0.00282723661926575,
            0.776242779073764,
            0.793640592067702,
            1.17371209182683,
            1.12801790434297,
            1.44672172612976,
            0.726305488143582,
            0.769942982483504,
            0.535394872750618,
            0.781711797713494,
            0.73057235400677,
            1.53870167577919,
            0.520081661969421,
            1.30873578880816,
            0.943685920427496,
            0.790934454976657,
            0.843526889867077,
            1.49530946952745,
            1.15380979858479,
            0.959048474425799,
            0.614489568984714,
            0.875204743315171,
            0.433281859432902,
            1.77433077354217,
            0.877798911814228,
            1.00540352030079,
            0.819645953023144,
            1.43777772350796,
            0.831061245046556,
            1.27484879381326,
            0.72172536133305,
            0.798702539457417,
            0.891498042860877,
            1.30819741376513,
            0.579883278657999,
            1.03561406324795,
            0.673175453003962,
            1.0385550692284,
            1.145127147967,
            1.29706549260216,
            1.88064096829318,
            1.01531377507052,
            1.48895179459685,
            2.1398456219387,
            1.41036951908283,
            1.30712180278637,
            0.555102439837144,
            0.833581028983614,
            0.629185482437523,
            1.53368943598203,
            2.43977087493532,
            1.31852314974764,
            0.66552710403291,
            0.745879223992937,
            1.42979135998758,
            1.24939599957073,
            0.960563534508599,
            0.461808568361041,
            1.63303705270216,
            0.686297430805335,
            1.0256398912212,
            1.07474428596839,
            0.558923403026789,
            0.922556671626808,
            1.14620357232168,
            0.923670492198144,
            1.05973754376776,
            0.875574116680954,
            1.64101672820374,
            1.26939701341093,
            1.1350228569007,
            0.752209267470055,
            1.36334599329322,
            1.35895425102441,
            0.81465250128772,
            1.31447401898096,
            0.456354128096592,
            1.7306064045313,
            0.79775126856915,
            1.60525359874452,
            0.965921923956841,
            1.00525696967166,
            1.36442611669796,
            0.5908878706658,
            1.12397433845687,
            0.858504671486145,
            1.5978568336484,
            1.05810114272218,
            0.497413901779868,
            1.22530357946234,
            1.09200123566855,
            1.58704161954625,
            1.07325998773344,
            2.16211638249084,
            1.73651133788843,
            0.898390615288368,
            1.5938171091167,
            0.593820822667476,
            1.3954575447944,
            1.30465266596759,
            1.68448965653148,
            1.36637101670355,
            0.946573133099586,
            0.573043676853407,
            0.902954393312819,
            0.842128754934669,
            1.08938519669166,
            1.23102526320017,
            0.755745443093162,
            0.465773817449808,
            1.38565059657872,
            0.809810223372299,
            3.17632715038082,
            0.842791704030231,
            0.71863156187424,
            0.744326665437631,
            1.20468621913483,
            0.753683548062956,
            0.74957185846434,
            1.27684158448748,
            1.01106199984897,
            1.34594603983685,
            0.587909769123671,
            1.36527798239747,
            1.47262769087101,
            0.776224668180201,
            0.870425419533423,
            1.35599164154381,
            1.06201476719541,
            0.839442118824142,
            0.866236526156722,
            1.4958990002044,
            0.914488378882892,
            1.42864830899318,
            1.52118606332014,
            0.602184086072259,
            1.3024624512624,
            1.29716943386579,
            0.754410050259468,
            0.717034940932604,
            1.27426509908948,
            1.13360527704167,
            0.894952471842937,
            1.34067140056926,
            0.918781000239841,
            1.25350755403563,
            1.91532453008206,
            2.26619873029925,
            1.24178592608543,
            1.39796983613749,
            1.49596538486774,
            1.52939720877248,
            0.62634714990908,
            0.937817244858935,
            1.08115684394883,
            0.71842635582023,
            1.41342569131509,
            1.87471165129534,
            1.25144377195649,
            0.604473016926281,
            1.18430059077383,
            0.718579515210278,
            0.700999825955698,
            0.837212673647497,
            1.34591258215159,
            0.950274595640563,
            0.671802658026308,
            2.82276958961412,
            0.948178910094713,
            1.26137044684158,
            1.27417314688885,
            0.775669730799019,
            1.24104864121531,
            0.927544744876256,
            1.28923405200988,
            1.48263044374879,
            0.949129803658195,
            0.932561349898926,
            1.2185577531415,
            0.875007652029474,
            0.84591352210454,
            1.18799193279311,
            1.36991430939059,
            0.791927189411166,
            0.680167230103863,
            1.03808428317319,
            1.12712720736195,
            0.717578530692577,
            0.861560308731941,
            1.40701405018894,
            1.15470469599661,
            0.816708243043676,
            0.620998946606898,
            0.837624776113762,
            1.07386847995897,
            1.18049842914948,
            1.18182939111942,
            0.898688793698978,
            1.37725624298228,
            0.808500995102511,
            1.00487066220531,
            0.964716688264912,
            1.07827248658049,
            1.02560882267245,
            1.07807887118395,
            0.942133258450634,
            1.28838333623833,
            0.686581444404575,
            1.35145258373348,
            1.11210005665422,
            1.25704834497673,
            0.907928055588436,
            0.745989260669962,
            0.800246879425308,
            0.800110200867725,
            0.964576439285839,
            0.963934976148018,
            0.915331070398475,
            0.656600056009358,
            1.25104736581088,
            0.786233200539614,
            1.48341113870288,
            1.09147431381803,
            0.844680313556013,
            1.58444627857534,
            0.723743951524259,
            1.38442751920782,
            1.31044791999173,
            1.25915832794388,
            0.921283213594442,
            0.692177607737294,
            1.53787815633416,
            0.865434252718239,
            1.22371655330155,
            1.36651024662796,
            0.817114432518316,
            1.48158196416369,
            1.01223562338881,
            0.86798560217424,
            0.772720387188702,
            0.586825877278583,
            1.11867064685566,
            1.03740726531471,
            1.24428455167275,
            0.819085765310647,
            0.928847699119701,
            0.812541261368749,
            0.902202940999543,
            1.47318715215009,
            0.942657854266138,
            1.40028057152079,
            1.3420797062167,
            1.21211776352779,
            0.992234137862426,
            1.52778434106521,
            0.840989887917088,
            1.58208205311152,
            0.960687405209086,
            0.957038984563536,
            0.883813235502529,
            1.16051624731189,
            1.02923084885918,
            1.7624218261207,
            1.43288728522998,
            1.10379111953708,
            1.04358868086594,
            1.03129529914835,
            0.564650187448659,
            1.42446784302313,
            0.868598183651777,
            1.5952892538067,
            0.570153625950351,
            1.29172903429414,
            1.15821632537257,
            0.823173665151741,
            1.26618245628927,
            0.918427087431193,
            1.83758711872122,
            1.18076454547467,
            1.20112436266147,
            1.10694974937034,
            1.014900128376,
            0.639964004305306,
            0.777448037222818,
            1.50879535223968,
            0.777828896249952,
            0.661768681675739,
            0.834539835405441,
            1.28899591481627,
            1.59414277148491,
            0.730008727130859,
            1.61998312943848,
            1.33975972224819,
            1.20401854485454,
            0.547378067402294,
            0.884906735552087,
            1.2525457032366,
            0.715438697325924,
            0.686996477358783,
            1.24242928917683,
            1.00759324971959,
            0.705481515112298,
            0.951817060080264,
            1.46717118008039,
            1.16419384085095,
            0.962533222334692,
            1.15535187181751,
            0.766229862972625,
            1.05999917180261,
            1.04970258403325,
            1.7845990202995,
            1.75670302810147,
            0.827778737158142,
            0.459256727716025,
            1.16313479695702,
            1.31655014504979,
            0.844507674936197,
            1.81043395271106,
            1.99866988077387,
            2.07955579398514,
            0.950569780428128,
            1.18586380884121,
            0.70963570400287,
            1.72707577099488,
            0.678170855268768,
            0.723458918221211,
            1.06948526494857,
            1.294709545781,
            0.623934733587551,
            0.7103042318768,
            0.725037602310595,
            0.756027684433925,
            1.14832241952253,
            1.11746547804074,
            0.934942732703081,
            0.8432961032797,
            1.37830441548722,
            1.27715899504721,
            0.605992399915379,
            1.32473662437348,
            1.32370017405222,
            0.842799440097211,
            0.808814554529427,
            1.10209992339951,
            1.1420046306418,
            0.444108617755242,
            0.855782162357601,
            1.26532028934045,
            1.10709648994266,
            1.275437058451,
            0.72718330609345,
            0.676337306290372,
            0.515447221817374,
            1.31771090915578,
            0.663753850802029,
            0.836578811982881,
            0.631146052727088,
            1.17417718592513,
            1.08067327356251,
            1.10575344241235,
            2.23368556268408,
            0.747036733960155,
            0.497363668617102,
            0.585281970161372,
            0.663101032719246,
            1.04415045272454,
            0.752853179749218,
            0.913475390351843,
            1.13412251305692,
            1.40899252869049,
            0.693743286532384,
            1.33351330005098,
            0.796805411967854,
            1.33221491957665,
            1.26478343595937,
            0.840661647891684,
            1.51158733875433,
            1.07090912308078,
            0.811633309000172,
            0.84445518573951,
            0.896050643662099,
            0.836662353878298,
            1.03302535330609,
            0.607152919522905,
            0.904181675567988,
            1.20997229423295,
            1.02137036846449,
            0.618829407245508,
            1.23721243125788,
            1.07869008893805,
            0.742678868690287,
            0.746694183680577,
            1.3304505871837,
            1.42500204347701,
            0.752683425942918,
            0.979335463073346,
            1.33923664669739,
            1.24120037001111,
            1.3232041059297,
            1.0172962237027,
            1.53555708488007,
            0.859339460474771,
            0.933994219928563,
            1.11203248642106,
            0.432868772705114,
            1.10060315684028,
            1.35415633706561,
            1.17136520971602,
            0.957939555948228,
            0.562421244147059,
            1.09121853648666,
            0.533389726510333,
            0.807499328262941,
            0.977180915876641,
            1.18968834366342,
            0.639142956379836,
            0.951757228611922,
            0.826289330778371,
            0.805398727986782,
            0.724232610362139,
            0.496656306837371,
            1.53273255216144,
            1.15504171922996,
            1.31050286691656,
            0.721138474099815,
            0.782689683183878,
            1.00534352193366,
            0.685489083729012,
            1.41862083825958,
            1.49039523835829,
            1.18127654755209,
            0.907433974000508,
            0.616789106757593,
            1.52924424735666,
            1.10696839949698,
            0.999121261666715,
            1.38699738703156,
            1.7966783041181,
            1.31551668022585,
            1.42126582631632,
            1.20542216462782,
            1.8222327339775,
            0.72042881582733,
            1.03807880525105,
            0.963264376903763,
            0.853326412819376,
            0.843102058024455,
            0.416558366345522,
            0.923659448075334,
            0.88349001265561,
            0.678436240820098,
            1.06401542116189,
            1.70099261494447,
            1.54419902706519,
            0.805711450126174,
            1.11958432750317,
            0.844941020259615,
            1.72692723300657,
            0.949883596660267,
            1.76735060249921,
            1.11651281410682,
            1.34233490912939,
            0.695277442345303,
            0.770715074271353,
            0.866897383396561,
            0.933507306294998,
            0.842229125173333,
            0.850008319583755,
            0.684332410903518,
            0.947202013395323,
            0.922729086577716,
            0.79581797131002,
            0.683788758956015,
            0.459241663100042,
            0.878822418087779,
            0.636487329247271,
            0.644692585104946,
            1.03162592620065,
            0.951348103018021,
            0.977429574954486,
            0.867295199791241,
            1.01793253666099,
            0.681560654088881,
            0.867998079663888,
            0.607560641178258,
            1.64964476554259,
            0.897938253654982,
            0.840173409263603,
            0.985113576473417,
            0.776154967399192,
            1.1805103992275,
            1.05197274891337,
            0.975007574400795,
            2.04760197377519,
            1.40141179360412,
            1.42908209536752,
            0.599291379306591,
            1.29384408678045,
            0.820697330643712,
            1.18513018568605,
            1.00556932122082,
            1.56482721532392,
            1.21271914413117,
            1.73259816665528,
            1.14662216551855,
            1.05010037183103,
            0.762169141896946,
            0.745688181990946,
            0.947475003883604,
            1.24348932414036,
            1.14624151343189,
            0.74834822891692,
            1.3712274823804,
            0.795731184908735,
            0.720918604321246,
            0.735354053678392,
            0.978456395849267,
            0.691147671670812,
            0.705822206262521,
            0.832808243762385,
            1.13274738006212,
            1.49808349764906,
            1.12815365573624,
            2.05166691914899,
            0.655598644331205,
            1.25149911832295,
            0.889612327580108,
            0.437874596670576,
            1.74871243974427,
            1.10113656222741,
            0.866714125754498,
            0.884432768708378,
            0.738450389880008,
            1.31714324029306,
            2.26968148072064,
            1.45027432101724,
            1.88109618540411,
            0.619999705488623,
            1.41495864627371,
            0.891756737976626,
            1.78976446121384,
            0.974451497777249,
            0.790832233108488,
            1.23518203505594,
            0.666534836423288,
            0.694782746043412,
            1.30580615521024,
            1.60857874345593,
            1.10483132793359,
            1.39687117823912,
            0.922973914269462,
            1.18072437273717,
            1.09066662674518,
            0.882560980976545,
            1.16784300800851,
            1.14747442613003,
            0.941214377088637,
            0.787875922675734,
            0.752657404984493,
            1.36475165397674,
            1.26752416440789,
            0.78796185265944,
            0.873919162126673,
            0.700316009628178,
            0.851285373824532,
            1.37678995925626,
            1.23337290532192,
            0.838765435938165,
            0.7623604234214,
            0.731959891757794,
            0.856558422544188,
            0.857664818166776,
            1.24229331465787,
            0.614990180781375,
            0.755818941198759,
            1.42790563223329,
            0.583457074875285,
            0.549109808669692,
            1.18796859662049,
            1.11418817523646,
            0.701399975912959,
            1.24250887832819,
            0.744320851425577,
            0.935406334497395,
            0.941315106827213,
            0.82985999157223,
            0.984078725111922,
            0.647258292692263,
            0.831676197656638,
            1.29788630200608,
            0.878169784527482,
            0.826940128861491,
            2.68283036150853,
            0.753436669432574,
            1.09175635273749,
            1.51833240403496,
            1.39246342468535,
            1.14776659208105,
            0.751712189152033,
            1.42453695588857,
            0.94390108483326,
            1.06484711439363,
            0.689201515604965,
            1.37671709647804,
            0.621410016157283,
            1.08353990707836,
            1.38370293385931,
            0.859576196612793,
            1.12777612192773,
            1.30114441002742,
            1.67404154453666,
            1.14787579305813,
            1.25471135465777,
            1.45652272223704,
            0.922743380424587,
            1.10068457950815,
            1.46289631401747,
            0.69092455063238,
            1.11452911427664,
            1.27344903723977,
            1.00760634684702,
            1.07788745362567,
            1.32543552853167,
            1.36937475221464,
            0.797435513483497,
            1.3050938170118,
            1.27976471530471,
            0.643002419646742,
            0.704836175291014,
            1.161622404138,
            1.42958996851766,
            1.3793016159106,
            0.80192315745727,
            0.817002700056636,
            1.0405563990775,
            1.05273531726761,
            1.23098546069348,
            1.16292029172953,
            0.7994201905323,
            1.62566704844276,
            0.806164796279783,
            1.39143231692526,
            0.976421674814663,
            1.00415846250546,
            0.627218881095838,
            0.785552704287969,
            1.3796056130128,
            1.03669468108763,
            1.20824904040256,
            0.784235031692275,
            0.753056798442965,
            0.697225002793961,
            0.817267144255208
          ],
          "p_val": [
            0.337435756622255,
            0.0587941795038152,
            0.282648742683738,
            0.519313581035587,
            0.970747408346441,
            0.656116416562994,
            0.233799629917485,
            0.521694592244004,
            0.232464016959589,
            0.897940780364004,
            0.252292879087739,
            0.923104138089775,
            0.116656908980202,
            0.72528328018723,
            0.918632611689241,
            0.241293156148866,
            0.806723469068343,
            0.448340822273317,
            0.467074270858802,
            0.912245576720141,
            0.254598809307376,
            0.0855743667719197,
            0.134396615455806,
            0.197799919812865,
            0.561882115856046,
            0.152404208831954,
            0.0742017939222611,
            0.280473447083693,
            0.293441426279555,
            0.97886004692642,
            0.691859345723651,
            0.305254550488153,
            0.563347591022764,
            0.503866509787354,
            0.248581252244976,
            0.797758572765486,
            0.645312612060817,
            0.847360652049538,
            0.10557169539785,
            0.544239241767766,
            0.361687492382321,
            0.37700935232089,
            0.886324304799736,
            0.812133573555865,
            0.894151885305299,
            0.797248920234386,
            0.288950360131013,
            0.0129290830945118,
            0.0702291528696166,
            0.0842191896055418,
            0.456971977117658,
            0.0981494775242892,
            0.0998507994114665,
            0.179113302199531,
            0.917847156381414,
            0.741819523818768,
            0.175691498275254,
            0.920543606814068,
            0.42548915483536,
            0.050847241932198,
            0.272925977840403,
            0.120826466789679,
            0.748485594882522,
            0.0506197247301368,
            0.30248142916935,
            0.125195887347816,
            0.188544255396584,
            0.0877734982994851,
            0.288964276337787,
            0.0685062673227186,
            0.918957522857236,
            0.342061748641427,
            0.0639054378933549,
            0.282024428283706,
            0.953421992819329,
            0.793921943780775,
            0.937330439515557,
            0.964101666249312,
            0.91093593695247,
            0.888306866358685,
            0.412634129419617,
            0.296327635321427,
            0.88672904964335,
            0.842464233703118,
            0.306398201545933,
            0.41857376901503,
            0.94357897506824,
            0.104865025712456,
            0.392287014424976,
            0.736289577867647,
            0.0494959727354354,
            0.9329484656054,
            0.0894996265631508,
            0.570915049081761,
            0.331112494979549,
            0.378888111800485,
            0.0335489663674224,
            0.619939385148368,
            0.705040041713417,
            0.471411994440176,
            0.137683483198191,
            0.931631861383323,
            0.301141632855603,
            0.452508037258592,
            0.284116748245014,
            0.894075868073475,
            0.201617218983192,
            0.404894533837913,
            0.796551636906693,
            0.895403192975502,
            0.181534656621747,
            0.0247963246500273,
            0.0380085552995,
            0.627159597730512,
            0.703487755694192,
            0.694104010024646,
            0.788564161743198,
            0.564085116714449,
            0.542446510861802,
            0.555476066953455,
            0.834927973670885,
            0.782323321733157,
            0.659746704912941,
            0.0329987154325226,
            0.955024587576437,
            0.901921776815107,
            0.139127577401265,
            0.0455399232717588,
            0.892269433013528,
            0.453927563640662,
            0.439649712237623,
            0.319110376559431,
            0.361979769528135,
            0.724191018425863,
            0.665370470075752,
            0.579304827830234,
            0.8454649612139,
            0.0428616568140457,
            0.0660554198875208,
            0.218310898335442,
            0.995486143025919,
            0.608580749765599,
            0.550441480304115,
            0.625060075407486,
            0.190797014458152,
            0.194296131684167,
            0.088530379507835,
            0.0475596655083295,
            0.0344092445800189,
            0.644135016765068,
            0.886217469757329,
            0.762964254062867,
            0.968759197912412,
            0.494442333216297,
            0.143109481637366,
            0.323448259953642,
            0.859533752925391,
            0.0566213521690539,
            0.907297403257384,
            0.914304555486455,
            0.399729656413253,
            0.00343178626389894,
            0.0137241523372378,
            0.0538768852114256,
            0.39715330389733,
            0.631938312413866,
            0.634484471227461,
            0.0216595120905896,
            0.146836594883027,
            0.145284613888335,
            0.149634801535029,
            0.228297518175023,
            0.907062334275669,
            0.340522790832556,
            0.627333287868742,
            0.617136203342128,
            0.145384776905092,
            0.319421265553045,
            0.266478119356794,
            0.281905197070017,
            0.397469145826229,
            0.145503252529238,
            0.585564580103795,
            0.493131437628018,
            0.223878666032196,
            0.866496894343675,
            0.768794486978371,
            0.397676344015565,
            0.25271384217533,
            0.0796762178839334,
            0.280699415417922,
            0.546232019411592,
            0.779202450254559,
            0.493557246241272,
            0.577073998483203,
            0.947457412990882,
            0.761382770546211,
            0.65687413147958,
            0.895801767406845,
            0.387831736869055,
            0.946219001796568,
            0.478106110522058,
            0.820644831681624,
            0.313378803009902,
            0.37673165977852,
            0.239767012330238,
            0.375808811688439,
            0.619974767214863,
            0.639613048433326,
            0.753704778653056,
            0.768773757112655,
            0.0473648802711667,
            0.464737803982338,
            0.422307866189594,
            0.391773999903642,
            0.383523666900964,
            0.447281151586585,
            0.930474414665755,
            0.472781160678102,
            0.963619314424251,
            0.884104307861626,
            0.978008326946063,
            0.868737984909187,
            0.291429703031778,
            0.97773427657478,
            0.635960307472541,
            0.336899573140638,
            0.567109607406812,
            0.922930653936089,
            0.415751326907508,
            0.891301817007241,
            0.241325031256804,
            0.351261429146847,
            0.110772304779864,
            0.907556246982999,
            0.598267131883665,
            0.25496549278968,
            0.683655466152821,
            0.0844076965645817,
            0.405952832369122,
            0.980485789247275,
            0.494574836531002,
            0.270729810076174,
            0.339771430807752,
            0.224256705457671,
            0.397232282630005,
            0.155902350772812,
            0.612847053136805,
            0.50419403439559,
            0.980246893683224,
            0.205536402412134,
            0.222208139291158,
            0.881243418329628,
            0.841136044991214,
            0.104465372118152,
            0.691516327609992,
            0.92340639811891,
            0.375370783215435,
            0.259635577485077,
            0.920280224663745,
            0.100840081098033,
            0.741856674811181,
            0.318915774260937,
            0.887906952484371,
            0.905678499344741,
            0.126132857849896,
            0.941344769588926,
            0.624253354949132,
            0.725931910851768,
            0.949286614274053,
            0.447545907769667,
            0.363168634201963,
            0.734693894925469,
            0.347640672631492,
            0.352009970429353,
            0.552413346679509,
            0.103186424119886,
            0.830912299594318,
            0.736145469250472,
            0.513744949668017,
            0.14164107266505,
            0.1808847883726,
            0.877513531330774,
            0.298227939950198,
            0.293424597714446,
            0.42786048544758,
            0.812362911168532,
            0.223393958321307,
            0.962091121514086,
            0.621208031308536,
            0.142656051599873,
            0.329760737656021,
            0.267879890554562,
            0.423204071334936,
            0.0621275468648017,
            0.0535264093129201,
            0.302820581480784,
            0.175613544814757,
            0.870058618263563,
            0.91782827399564,
            0.913495538662822,
            0.701720670955904,
            0.470208706383093,
            0.856517862538441,
            0.152227261603222,
            0.25928752983422,
            0.160680170177166,
            0.904218696527451,
            0.75766791371857,
            0.374813213468087,
            0.264130701533984,
            0.652463235249134,
            0.583054576855458,
            0.128935603334403,
            0.0740622119723667,
            0.118710860423665,
            0.243068688939395,
            0.156869839626585,
            0.462504518524837,
            0.595540360964136,
            0.749304682873841,
            0.117118301328532,
            0.932946724868877,
            0.0904553354493971,
            0.0697701087660622,
            0.0826027895289008,
            0.0781957837971526,
            0.312204869103998,
            0.543207692297496,
            0.462549089488474,
            0.965715238544478,
            0.825731356425514,
            0.935644002034416,
            0.148866700913757,
            0.746478949625441,
            0.551685132549326,
            0.206707490763103,
            0.152667569627794,
            0.368312030553282,
            0.413612512129973,
            0.498345058605459,
            0.0179300905511918,
            0.0122269016669139,
            0.891538956169831,
            0.918690282816322,
            0.925068024367337,
            0.0691598199176043,
            0.650068910847372,
            0.532261809846386,
            0.445351786919009,
            0.474784666510299,
            0.453990999620762,
            0.650470590157621,
            0.889142883395636,
            0.941539961440121,
            0.453675838549142,
            0.632447532755788,
            0.757532958896411,
            0.182734622491781,
            0.422075235215885,
            0.0793057865488791,
            0.781110563513128,
            0.862493551526684,
            0.439588500937563,
            0.730880574666834,
            0.94352445948869,
            0.885902383830747,
            0.399746191109042,
            0.762874885314964,
            0.712279762291501,
            0.185142706540402,
            0.971915983973734,
            0.463738126440148,
            0.516570519728446,
            0.334999608758024,
            0.217245949128538,
            0.805133245582855,
            0.509378608221514,
            0.747925426424271,
            0.764261460962968,
            0.54197291341878,
            0.471317311452392,
            0.674407779913873,
            0.0211227519458542,
            0.284219146310555,
            0.0247467782170793,
            0.00390118750607106,
            0.557379732803884,
            0.528543357430971,
            0.926109722789959,
            0.897318388371619,
            0.0374089463899117,
            0.103681377238256,
            0.34085713618196,
            0.517288626858683,
            0.830796228469815,
            0.88189292979038,
            0.89899802177647,
            0.226510279399684,
            0.281209352351236,
            0.155940726673525,
            0.0575296863503871,
            0.685747659941926,
            0.742760939263296,
            0.794262997389305,
            0.117822103178533,
            0.90789707231093,
            0.21653123927249,
            0.12720737425047,
            0.74577541148155,
            0.236329071504157,
            0.712899393023154,
            0.213448850087988,
            0.212207529052502,
            0.80137037613464,
            0.247997720481151,
            0.312663483046068,
            0.69812591842056,
            0.574998565256186,
            0.587565003731683,
            0.343122617338903,
            0.0624553896036064,
            0.0601334776113858,
            0.14341285174985,
            0.065273326323453,
            0.410554006474954,
            0.667033217220101,
            0.711655947290791,
            0.661181127105723,
            0.852459393188311,
            0.182433657884848,
            0.19978970910738,
            0.82878303628997,
            0.880908274137459,
            0.689274377691494,
            0.108948893335242,
            0.705130595852388,
            0.125322117624106,
            0.75201904251544,
            0.274105101859941,
            0.92356446834944,
            0.069919681357916,
            0.168826799423076,
            0.579698348569945,
            0.292786801652459,
            0.756931495747455,
            0.702543551376804,
            0.66788098274816,
            0.664400581772907,
            0.387559021710861,
            0.109223751149197,
            0.231425380507617,
            0.462710623578321,
            0.247418954409612,
            0.15315007327646,
            0.0933562121675168,
            0.959598565202241,
            0.518922329713381,
            0.0592084725715918,
            0.201989538451203,
            0.653303461056203,
            0.203139435856904,
            0.542346958815877,
            0.903149914954067,
            0.674629657136252,
            0.42640046057994,
            0.0874059662377329,
            0.608693927280154,
            0.644495778333579,
            0.472516503166594,
            0.416045019927132,
            0.624486744270515,
            0.489065263988217,
            0.733906753257,
            0.945218709465722,
            0.955099285937291,
            0.944247172189274,
            0.468145317698051,
            0.0777915472720661,
            0.654219612432098,
            0.136492489085583,
            0.615794621334937,
            0.317608988422912,
            0.288851951331436,
            0.369501595883025,
            0.084331544124994,
            0.755064874973847,
            0.180163954652109,
            0.980538676435018,
            0.423410669056433,
            0.251243332041927,
            0.257076990843198,
            0.894774754215735,
            0.232956770777958,
            0.0622939497062974,
            0.410803711329596,
            0.148763614132581,
            0.925583041253589,
            0.590172300510612,
            0.60985642045142,
            0.969866731942346,
            0.827294584125467,
            0.756496239815885,
            0.0920095037794163,
            0.862027960988879,
            0.678474588262148,
            0.382113653839841,
            0.992209735867288,
            0.0117735860479365,
            0.854089906049395,
            0.649707861030988,
            0.887651670969647,
            0.419176490652654,
            0.588240125531991,
            0.327306868469447,
            0.423902368439874,
            0.360974358289596,
            0.0224599002209201,
            0.965899303851287,
            0.354968456045619,
            0.9507197222134,
            0.176596856522368,
            0.0598334512000813,
            0.0671254613602345,
            0.638533911196562,
            0.0597887874467291,
            0.112489072747322,
            0.444403135382477,
            0.0259635701371357,
            0.884906695201468,
            0.700187636178468,
            0.471792363278683,
            0.335310944491765,
            0.904195600270154,
            0.674778705624311,
            0.522220219147252,
            0.690728375754552,
            0.434422884934326,
            0.260649442676096,
            0.934351037840795,
            0.372898922348418,
            0.956144579995207,
            0.873518865037523,
            0.251165854835347,
            0.16486529846776,
            0.0469062965842751,
            0.877584045991022,
            0.25929965304951,
            0.384386548189155,
            0.894403145005426,
            0.485965330758621,
            0.241577947221324,
            0.555275222141412,
            0.35654541196546,
            0.392357035943074,
            0.97422797044972,
            0.383009169353754,
            0.279922582828953,
            0.637885350002513,
            0.66735455516275,
            0.885956806593706,
            0.152788400120102,
            0.0392854863668093,
            0.946630228720838,
            0.943730136151912,
            0.865733050353709,
            0.327235304460887,
            0.0821927633456209,
            0.949625230930627,
            0.882898593239935,
            0.488148477601772,
            0.132423620594241,
            0.238685024208098,
            0.685169107154687,
            0.785020813808218,
            0.202233948055251,
            0.30611871830493,
            0.356384367929263,
            0.132281849218346,
            0.582278315439539,
            0.500337832372801,
            0.780983605700824,
            0.53447280469245,
            0.789551488970796,
            0.951364195948948,
            0.90871915692708,
            0.496292695302936,
            0.83839957351,
            0.587442625470395,
            0.690345237434029,
            0.496255913751083,
            0.448997372151376,
            0.364072633517627,
            0.111100004013726,
            0.34274457731545,
            0.109836800170926,
            0.221836568639497,
            0.756304939831076,
            0.921316816787235,
            0.209600761757538,
            0.0915793586879794,
            0.0633273532992648,
            0.0401373143225163,
            0.00889515982838441,
            0.0038995155754782,
            0.494368073558493,
            0.903408445553679,
            0.971625603052201,
            0.930257371003472,
            0.352128196687213,
            0.407571870361303,
            0.920638615234563,
            0.916757845229818,
            0.822399239263278,
            0.810528130627004,
            0.208299299131148,
            0.156490099011654,
            0.335874776963788,
            0.942105544627328,
            0.633034065560692,
            0.269127575316138,
            0.407243797382567,
            0.323186249527503,
            0.561854717817111,
            0.238645495389635,
            0.6654649400632,
            0.213118256887955,
            0.612558947371203,
            0.734473804606707,
            0.495967427970469,
            0.79937981977826,
            0.243598586088337,
            0.0298288140831375,
            0.280326380557819,
            0.289159155854584,
            0.19003280041966,
            0.039646129936591,
            0.437286405107582,
            0.0128798502253443,
            0.212522208282212,
            0.561648605672177,
            0.0762592429331737,
            0.686887987297378,
            0.679108903522983,
            0.156203967597455,
            0.84542291209281,
            0.505967885697269,
            0.125760238964832,
            0.479383061472769,
            0.0506314017942093,
            0.69581406183487,
            0.680212313749793,
            0.245162543677645,
            0.243496453563326,
            0.2350895537521,
            0.209516252712037,
            0.156267729610781,
            0.911830354829459,
            0.597869101724611,
            0.807034311578842,
            0.96426679722925,
            0.349809736966715,
            0.647491461364141,
            0.206704644052545,
            0.639375290690849,
            0.210023998922972,
            0.138944672477383,
            0.896444081060311,
            0.468803709411597,
            0.0860562465128741,
            0.395598946352943,
            0.349565286375202,
            0.00913542127057344,
            0.627035447589006,
            0.296203255378266,
            0.439464447394894,
            0.760739506467246,
            0.909847086097621,
            0.16223407851425,
            0.171495203868769,
            0.964961216626234,
            0.206467288959492,
            0.426257004250353,
            0.314106534301452,
            0.671457563875476,
            0.893864442786132,
            0.287308615926105,
            0.30290890906064,
            0.487612782573744,
            0.249980665743819,
            0.249324437753171,
            0.102710138366278,
            0.889668628331996,
            0.2610700997044,
            0.204864305957081,
            0.0638138115693606,
            0.2792074586177,
            0.312292219520716,
            0.335579866508429,
            0.275740043696059,
            0.155208999896902,
            0.950932777995002,
            0.159394165961233,
            0.347377367046401,
            0.018535913977432,
            0.908297474800366,
            0.0314614909637387,
            0.134201173096952,
            0.911795987505909,
            0.350141019532774,
            0.765315059535799,
            0.091363288864453,
            0.653300309586106,
            0.547244484542566,
            0.307389611102459,
            0.924124408582622,
            0.86900088169602,
            0.546219670525938,
            0.525429579810309,
            0.75446513940901,
            0.614609823432088,
            0.0751926369025807,
            0.112984981212438,
            0.00320124219232186,
            0.683294409742063,
            0.118829314537451,
            0.0114207062763036,
            0.00805334011319863,
            0.597114776154573,
            0.0324109600706235,
            0.679625233914808,
            0.980113980634164,
            0.683886583970745,
            0.356832574801566,
            0.434157189255813,
            0.600329435652932,
            0.511521660351264,
            0.308741223461984,
            0.106765968210031,
            0.436617406306043,
            0.184276074128147,
            0.569519874986633,
            0.642839616567081,
            0.363411219421076,
            0.637746802304196,
            0.885173271646677,
            0.900867052830255,
            0.717884669045873,
            0.702534927300003,
            0.647584264214836,
            0.102663036320217,
            0.0195245876960853,
            0.0107820983640518,
            0.0347002908477816,
            0.573979449731809,
            0.0504920212225181,
            0.0525907453427055,
            0.627891294430387,
            0.382255619708682,
            0.362313954617549,
            0.582610221070579,
            0.0123267350532774,
            0.940054757978788,
            0.143192853614537,
            0.51351018057008,
            0.228455720568709,
            0.104793694887185,
            0.254294851907459,
            0.531022148071846,
            0.640322697085473,
            0.424760627718848,
            0.903948485389046,
            0.857269006015977,
            0.250645590534259,
            0.417451607944925,
            0.950104055462668,
            0.0121463883155433,
            0.398215859453282,
            0.888851904774299,
            0.00804292487465707,
            0.483094919329217,
            0.556944473265202,
            0.863142176120449,
            0.882565146018618,
            0.216661785201039,
            0.809484660376038,
            0.948245770387092,
            0.808261282221762,
            0.926922768957086,
            0.573709669575095,
            0.676676926981425,
            0.525556514565424,
            0.54017110536022,
            0.103696294475883,
            0.71201004893597,
            0.70235215541232,
            0.976504360091314,
            0.842671659884224,
            0.88640508288623,
            0.495052165293271,
            0.660724201476031,
            0.905197994396854,
            0.160809050147062,
            0.845344799010138,
            0.419331038010254,
            0.691413646998,
            0.70403454501779,
            0.404666161248747,
            0.657129714435898,
            0.229619322699378,
            0.150357195822456,
            0.642494099221588,
            0.329028412026674,
            0.893810305448691,
            0.951022438309561,
            0.0777099173494766,
            0.91378348645658,
            0.918756192733933,
            0.577866017457317,
            0.938945207355476,
            0.994468462038087,
            0.81686894318338,
            0.588032507185262,
            0.365465217713763,
            0.836064220118802,
            0.889368403447307,
            0.819957722304901,
            0.88895289344488,
            0.292947228032351,
            0.64461893545418,
            0.0204877455379324,
            0.15918675831873,
            0.0821585035924564,
            0.289541260341667,
            0.405534574521013,
            0.693948651093175,
            0.903297766340748,
            0.509896654473988,
            0.680137948160246,
            0.461909732448436,
            0.368605469824327,
            0.271416797650093,
            0.91565567346802,
            0.412234842830902,
            0.010231441689907,
            0.0879791545261093,
            0.537555268854871,
            0.478321688640191,
            0.242894693273317,
            0.968052829095721,
            0.372236747055445,
            0.558323726442468,
            0.722904885363305,
            0.176092120335646,
            0.0305569400432567,
            0.871910284733493,
            0.0921602325776471,
            0.596516056059125,
            0.334549174309925,
            0.384926629599785,
            0.0133480686905561,
            0.930609369647503,
            0.580810674667802,
            0.827349425532732,
            0.408026289469273,
            0.903036188435524,
            0.354242203373007,
            0.878762507580221,
            0.15850926658418,
            0.0575018940765607,
            0.752973761808593,
            0.47885439170108,
            0.755224736467873,
            0.767127336446568,
            0.114625153086927,
            0.297313080139244,
            0.685145241757162,
            0.93424195490331,
            0.413596910966095,
            0.145970669998904,
            0.279249931462854,
            0.865903274079412,
            0.137410314791952,
            0.367462270738748,
            0.981067184996738,
            0.966912334010408,
            0.0333928725588229,
            0.163250599762291,
            0.627112271833047,
            0.456789785645227,
            0.848761949896906,
            0.295865759832167,
            0.457230984532818,
            0.137493746774539,
            0.906183331072451,
            0.601395988763325,
            0.275775990749274,
            0.446082407122714,
            0.697460871659778,
            0.0176334708973491,
            0.972065969359077,
            0.992078893759664,
            0.362165243496986,
            0.937352826081341,
            0.272050068084334,
            0.197514000684496,
            0.568990691904226,
            0.746752564691706,
            0.178230448035058,
            0.463787538056985,
            0.752601479878742,
            0.0898821214939188,
            0.0559286731876631,
            0.526300404272325,
            0.947547392202811,
            0.679263328847056,
            0.806286913193575,
            0.944006446968873,
            0.965482444707904,
            0.944148641176475,
            0.619306835191057,
            0.330544877616672,
            0.646055637785656,
            0.265081260080433,
            0.359861456412519,
            0.0296701975466392,
            0.434431017386096,
            0.27413532561207,
            0.843534242587026,
            0.186748686008295,
            0.139639506805432,
            0.625540064712171,
            0.111193099122867,
            0.292622643227825,
            0.38641331457973,
            0.0658287050196971,
            0.951782510069199,
            0.988881744996365,
            0.920709982245906,
            0.487596760441969,
            0.164611548523218,
            0.389914447476855,
            0.600042843670116,
            0.62244737424994,
            0.291714632478637,
            0.198106185681559,
            0.259526843537344,
            0.0456164754832475,
            0.174705434350437,
            0.978388413989655,
            0.183833706022147,
            0.661847993769601,
            0.543103303944506,
            0.553775530352723,
            0.888721152982922,
            0.405898619788885,
            0.399567792459784,
            0.452437597286154,
            0.0836163921013662,
            0.160079015517443,
            0.589407662463394,
            0.221172246146947,
            0.332332772368042,
            0.958243477651106,
            0.895269585054641,
            0.041673309326222,
            0.935189732848574,
            0.0217871604765449,
            0.0412138462139337,
            0.055269705396489,
            0.466874063479808,
            0.44237082955648,
            0.153870423374355,
            0.952118070792446,
            0.647513541207556,
            0.0639932245926512,
            0.827474150483357,
            0.726353402268067,
            0.0741604129151611,
            0.374365718098124,
            0.939206999666523,
            0.452956722661853,
            0.169561637095752,
            0.124874420750141,
            0.893160878392189,
            0.0927057203643982,
            0.185292035182172,
            0.679102256834012,
            0.117253244706126,
            0.246036074114498,
            0.88275874085374,
            0.651854708300002,
            0.913613191544817,
            0.220411120089702,
            0.743532926412299,
            0.972650619783678,
            0.949813226022525,
            0.905214152604363,
            0.653067174247792,
            0.931102011592182,
            0.286505621693563,
            0.0269727741342783,
            0.0727998904523579,
            0.922707738650993,
            0.104834973902558,
            0.101818064175017,
            0.681469832065736,
            0.981440887946375,
            0.869497895338573,
            0.448459130363655,
            0.343401119503914,
            0.113212281710386,
            0.97802782951036,
            0.323313235061802,
            0.852415553864464,
            0.599853123729405,
            0.879043782348046,
            0.683540464239929,
            0.0688338922253505,
            0.374600300199981,
            0.685183133156418,
            0.552709165153606,
            0.825042425113311,
            0.75811945758319,
            0.58920845002719,
            0.809583682154678,
            0.597740057334001,
            0.882923371149013,
            0.5056351164369,
            0.487487720852718,
            0.89494166449536,
            0.473380690657476,
            0.307096463494183,
            0.766104678063036,
            0.0641081812409114,
            0.531527585842929,
            0.689057252253824,
            0.0527606339267688,
            0.688891608355333,
            0.951086286736611,
            0.750765734745997,
            0.696203486876004,
            0.641121016606006,
            0.426829004072186,
            0.909453816963503,
            0.931915891190597,
            0.454025612469227,
            0.100923486909733,
            0.842191301026945,
            0.480273076298553,
            0.658743496372784,
            0.382449468064257,
            0.211152820019983,
            0.7292011544666,
            0.317279815747144,
            0.0900301511800532,
            0.539884552935889,
            0.0483419454416592,
            0.624382180087553,
            0.679441735319432,
            0.568467465503748,
            0.743871282499342,
            0.89543920616658,
            0.280506126426797,
            0.268049586461266,
            0.459245351113495,
            0.354325722059245,
            0.9709961742012,
            0.364973251521699,
            0.0194584074725708,
            0.400065174122807,
            0.0454288169239659,
            0.174731185018562,
            0.75353645830648,
            0.794277661804963,
            0.111343090854742,
            0.130486898421019,
            0.504060688808416,
            0.616338552675801,
            0.148641364245447,
            0.81014807067709,
            0.76270617734408,
            0.0488191439798719,
            0.889452499543971,
            0.335774099040032,
            0.858444461285009,
            0.305533434062637,
            0.710655014977057,
            0.664655934551595,
            0.524699365610385,
            0.43832297695335,
            0.538839808429288,
            0.0271052262133087,
            0.463919494321007,
            0.816328044325591,
            0.619354915270514,
            0.857273694841471,
            0.640094871962127,
            0.430087258304353,
            0.303744329328758,
            0.905607173602059,
            0.440511252444415,
            0.352000282748583,
            0.516899311543675,
            0.952849296100609,
            0.362644306182361,
            0.691308640545225,
            0.566987612093017,
            0.443250733372632,
            0.698101198250439,
            0.902554251705506,
            0.200238283072889,
            0.0351855939030997,
            0.756193903278187,
            0.658688940718892,
            0.944732933792926,
            0.658101934841182,
            0.803618027310586,
            0.618249521324434,
            0.40484235596942,
            0.0599908074348653,
            0.874006851402144,
            0.448747241899231,
            0.555667952944583,
            0.201426442618668,
            0.475605838556495,
            0.22108101108793,
            0.962343917835401,
            0.622431327928673,
            0.0568182134414847,
            0.0583657935167774,
            0.0968127280555107,
            0.91647442226328,
            0.243744811414925,
            0.183010985896643,
            0.397319550391808,
            0.0584536257039146,
            0.663713520828262,
            0.623408339261002,
            0.935751717851239,
            0.310975157014222,
            0.651155778242508,
            0.92915774889153,
            0.857399229519069,
            0.127301646949677,
            0.449868330954839,
            0.130945388321778,
            0.197318853340414,
            0.424923204236664,
            0.0561716283716496,
            0.363829824815257,
            0.199089898349368,
            0.280915468126363,
            0.701891582739042,
            0.738951659004494,
            0.928681287766957,
            0.678528645067121,
            0.76866703447724,
            0.961624459009817,
            0.14652105552135,
            0.973402973657912,
            0.421095156995716,
            0.674508962653479,
            0.655270712833281,
            0.0101907591781304,
            0.0863044135874719,
            0.0169558775190939,
            0.764715818182146,
            0.0451357824838133,
            0.192337455796738,
            0.0117684300544752,
            0.305052439698973,
            0.938106246370002,
            0.465701787997643,
            0.414391511997628,
            0.377583632756785,
            0.825997720979899,
            0.642485670760157,
            0.0367855820906162,
            0.805281967950985,
            0.918356276266872,
            0.442097535851672,
            0.784611691695126,
            0.288221953478905,
            0.465054556627056,
            0.384497526588062,
            0.48587122249933,
            0.251732946613804,
            0.895159115467596,
            0.155921057482134,
            0.549309016842273,
            0.986921684732396,
            0.253946092812903,
            0.927061320019534,
            0.44125200411485,
            0.272161386945611,
            0.3275406999739,
            0.570852570809165,
            0.806166992821032,
            0.0933179700455364,
            0.945964112705552,
            0.0445083680101886,
            0.0967936894711643,
            0.333423963745125,
            0.270836364807119,
            0.947826031442415,
            0.676136532211956,
            0.949172142734089,
            0.149833057370021,
            0.333885430293926,
            0.598886755228043,
            0.916840416947016,
            0.376607004785942,
            0.713534438941811,
            0.0600941555814979,
            0.294512501827455,
            0.177262997449178,
            0.251422019741719,
            0.33398711120995,
            0.290512458594958,
            0.388783343918624,
            0.995087489429105,
            0.88843154763488,
            0.453863031114204,
            0.215905440558838,
            0.0926887804212305,
            0.978905392359476,
            0.92980708292987,
            0.722497554863508,
            0.713042890476259,
            0.721608412000792,
            0.778541497407155,
            0.797038793561049,
            0.0603637517829745,
            0.144077299115038,
            0.744524960228649,
            0.222816792713597,
            0.27680208498283,
            0.212646191671165,
            0.975651749916293,
            0.0125631918867584,
            0.507624805442255,
            0.0727846642430407,
            0.00701961598066145,
            0.0807132716923724,
            0.281167973406427,
            0.468291636944043,
            0.955652813873941,
            0.454167231047759,
            0.549133072767027,
            0.927940392774195,
            0.157236623231678,
            0.617862062028328,
            0.814211016076198,
            0.157665958078347,
            0.4393191767942,
            0.829359770090163,
            0.99019818191841,
            0.30787013679407,
            0.262485792091181,
            0.0759730993388535,
            0.907128254021052,
            0.274906557332327,
            0.680296615857584,
            0.140743348965304,
            0.155229790898239,
            0.975028124505924,
            0.132957576512754,
            0.135917611702028,
            0.97719937178127,
            0.219884669021657,
            0.749324180836322,
            0.677261806628562,
            0.611864510087459,
            0.732463267621573,
            0.536528410029365,
            0.397654427167831,
            0.0724706390961131,
            0.968489190036128,
            0.345109614972977,
            0.731997319031926,
            0.326766586331348,
            0.694380919431336,
            0.577188111976388,
            0.333311135063809,
            0.2326380032507,
            0.522846127789607,
            0.0165260932515655,
            0.0467683609472401,
            0.0675756787019711,
            0.1178843233102,
            0.759255303740501,
            0.385566831195203,
            0.697986846661552,
            0.405394057133482,
            0.943114528538234,
            0.744191091181228,
            0.672159734792485,
            0.926619242694203,
            0.0685310116401804,
            0.60898163684135,
            0.0441013631351525,
            0.956625035561363,
            0.602164406824298,
            0.933402249306557,
            0.927587748481975,
            0.683065431035438,
            0.0337684675107105,
            0.861910120524559,
            0.000215743705291689,
            0.970737356317406,
            0.0300552424451106,
            0.144056083175828,
            0.0431917540042891,
            0.49901338440575,
            0.294386957679694,
            0.327968481789809,
            0.884254608800501,
            0.549139053156725,
            0.240654358080953,
            0.433974202703917,
            0.906011288362786,
            0.927536156434345,
            0.449947011758218,
            0.424209692243277,
            0.940011854811981,
            0.620479402341321,
            0.822417867542482,
            0.317833811797133,
            0.579572615998341,
            0.225475293610138,
            0.648714965904159,
            0.942004232564218,
            0.351210688691027,
            0.558152186143575,
            0.911275478791185,
            0.227876757263732,
            0.533442156206313,
            0.447931479582132,
            0.47849504060448,
            0.605223976867464,
            0.184810523974723,
            0.968244526271208,
            0.641130170694772,
            0.643047234137447,
            0.378203010453523,
            0.0351923770438822,
            0.218365833230259,
            0.621540806903139,
            0.747111132497458,
            0.79492990968319,
            0.381507482615369,
            0.818552070703761,
            0.216172730096569,
            0.29852623187186,
            0.673606589246891,
            0.105262144519994,
            0.331096705597407,
            0.121320352439007,
            0.971360584265529,
            0.572292855509091,
            0.545982934954208,
            0.235246404044259,
            0.37921526323352,
            0.793792385143461,
            0.775312320500694,
            0.045477763273323,
            0.413113552366373,
            0.479034529192233,
            0.435640859552473,
            0.449646075880057,
            0.774738052583928,
            0.0924574661378735,
            0.549534117733352,
            0.0871648534842274,
            0.306537153137312,
            0.68900590689166,
            0.0687953430448056,
            0.732984552223239,
            0.905446587351464,
            0.963328507308978,
            0.122559309647978,
            0.1124567748852,
            0.636980296569038,
            0.0555321183794667,
            0.139961580506686,
            0.240046126468584,
            0.96168996296195,
            0.915993833716313,
            0.831405497084858,
            0.884478716616146,
            0.838086224588356,
            0.446746517154272,
            0.747797768965542,
            0.279433564992235,
            0.721356786526828,
            0.644055662216032,
            0.992198890222341,
            0.66775953159359,
            0.941615059029473,
            0.210856725850818,
            0.455092907770653,
            0.897118702019387,
            0.507053901966149,
            0.832129818322789,
            0.799620523001533,
            0.19629378055473,
            0.651750109479232,
            0.887267599411646,
            0.626156926116813,
            0.442894941194508,
            0.92820827740347,
            0.362477250431453,
            0.0172988206410908,
            0.864512089687341,
            0.898188085830339,
            0.251658705804173,
            0.803470921284669,
            0.132852697971859,
            0.547514991422574,
            0.916818326844554,
            0.0364778009179281,
            0.610360401582048,
            0.593960655864794,
            0.72232160835861,
            0.257744130332218,
            0.802924644373707,
            0.321030871381914,
            0.552030797715138,
            0.0729278013760536,
            0.274565137959597,
            0.960838654087492,
            0.180817089688288,
            0.197833992264803,
            0.351058127916684,
            0.165089574601802,
            0.668754305922501,
            0.974775934691979,
            0.593248983576719,
            0.972545947599399,
            0.759673036550847,
            0.639863967035255,
            0.406735898535512,
            0.766071054800086,
            0.465584286834416,
            0.721194257184362,
            0.067141063113553,
            0.729461142817454,
            0.126576202193778,
            0.16537616836676,
            0.264476101755976,
            0.950360321524033,
            0.0987778416777363,
            0.438998277566459,
            0.381225711751831,
            0.30265130468586,
            0.606460734818581,
            0.935381737870669,
            0.94017217255864,
            0.0212483850028832,
            0.131217727129799,
            0.119366146594682,
            0.523627831564936,
            0.391673953176488,
            0.946021006865264,
            0.23501715889296,
            0.575893705225327,
            0.457901538588092,
            0.410497568249114,
            0.595776759892527,
            0.314100173636659,
            0.66800487340641,
            0.265677599627466,
            0.635659119501022,
            0.156866297511066,
            0.936228562565369,
            0.646387448072205,
            0.33154788263476,
            0.454314990867628,
            0.565125284584461,
            0.184849689076474,
            0.932179229348975,
            0.613176849216523,
            0.574585510284921,
            0.913015630185913,
            0.430136276983423,
            0.587316715072399,
            0.780381208819259,
            0.3096360711382,
            0.299205911170413,
            0.886732673159127,
            0.232897788796329,
            0.844301614559337,
            0.698088605396985,
            0.968526619876709,
            0.959144937327608,
            0.644469497619989,
            0.555137744262095,
            0.386172480786561,
            0.721701856620578,
            0.941442790180648,
            0.509240109355278,
            0.838331069463864,
            0.459536772043353,
            0.956228278618591,
            0.509366871291044,
            0.846184956542917,
            0.872676637834849,
            0.548120761298051,
            0.411303993909208,
            0.799454986594256,
            0.0516016423937904,
            0.293499841351644,
            0.674821644913636,
            0.558782932606572,
            0.284002581797966,
            0.902754261386083,
            0.0712143556949124,
            0.910554022018821,
            0.184028585975334,
            0.370429728897288,
            0.0338303325093663,
            0.0214722271415783,
            0.974180626556982,
            0.681781138661862,
            0.869585858890496,
            0.647443160625587,
            0.415041489022079,
            0.889115288140299,
            0.795501799033955,
            0.386403250189906,
            0.264395465474702,
            0.961510750644654,
            0.357940286623136,
            0.151057988938824,
            0.370971606367675,
            0.956255606788955,
            0.359421749467216,
            0.00301840659254137,
            0.133750557339179,
            0.537096633435575,
            0.0227396449047101,
            0.71153030917242,
            0.88890911638774,
            0.822477783203351,
            0.760228137013922,
            0.249534782561279,
            0.955038794881839,
            0.1947890902941,
            0.364270786049192,
            0.372425794106163,
            0.336975943772786,
            0.304115039308352,
            0.335092348312526,
            0.763757527154504,
            0.108189964110109,
            0.631167711731978,
            0.0389592307749215,
            0.271154212743568,
            0.0866996754527651,
            0.800743773772321,
            0.0516107663961979,
            0.733824772630306,
            0.643424494835363,
            0.812889840475074,
            0.953721132880117,
            0.12669918889156,
            0.421629556040872,
            0.95021630532527,
            0.642609970107495,
            0.505049480674339,
            0.420348447679181,
            0.595262535343342,
            0.287089559077285,
            0.904996339214557,
            0.131420292573981,
            0.876231524098571,
            0.565029956339348
          ],
          "category": [
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "circulatory system",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "congenital anomalies",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "dermatologic",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "digestive",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "endocrine/metabolic",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "genitourinary",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "hematopoietic",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "infectious diseases",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "injuries & poisonings",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "mental disorders",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "musculoskeletal",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neoplasms",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "neurological",
            "pregnancy complications",
            "pregnancy complications",
            "pregnancy complications",
            "pregnancy complications",
            "pregnancy complications",
            "pregnancy complications",
            "pregnancy complications",
            "pregnancy complications",
            "pregnancy complications",
            "pregnancy complications",
            "pregnancy complications",
            "pregnancy complications",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "respiratory",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "sense organs",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms",
            "symptoms"
          ],
          "color": [
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#d54c3b",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#73d54a",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#7245ce",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#cad149",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#ce4ec8",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#76d58b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#562d7b",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#d4983d",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#857ccb",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#59803d",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#cb4c86",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#77cdc0",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#792f39",
            "#ccc795",
            "#ccc795",
            "#ccc795",
            "#ccc795",
            "#ccc795",
            "#ccc795",
            "#ccc795",
            "#ccc795",
            "#ccc795",
            "#ccc795",
            "#ccc795",
            "#ccc795",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#3c2a46",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#97b7dc",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a",
            "#98653a"
          ]
        },
        "type": "data.frame",
        "container": "div",
        "options": {
          "msg_loc": "main_app-manhattan_plot_main_dashboard-message_manhattan_plot_and_table",
          "selected": [
            "327.30",
            "761.00",
            "627.00",
            "751.10",
            "586.12"
          ],
          "colors": {
            "light_grey": "#f7f7f7",
            "med_grey": "#d9d9d9",
            "dark_grey": "#bdbdbd",
            "light_red": "#fcbba1",
            "dark_red": "#ef3b2c",
            "light_blue": "#4292c6",
            "green": "#74c476"
          }
        },
        "script": "var d3Script = function(d3, r2d3, data, div, width, height, options, theme, console) {\nthis.d3 = d3;\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/helpers.js */\n// Helper functions for all visualizations\n\n// Turn number into a given number of decimal places\nfunction format_val(d, places = 3){\n  return d3.format(`.${places}`)(d);\n}\n\n// number formatters\nconst countFormat = d3.format(\",d\");\nconst CiFormat = d3.format(\".2f\");\nconst pValFormat = d3.format(\"0.2\");\nconst toPercent = d3.format(\".1%\");\n\n\n// Compare two tuples as equal.\n// E.g.\n// tuples_equal([1,2], [1,2]) = true\n// tuples_equal([1,2], [1,1]) = false\nfunction tuples_equal(a, b){\n  return (a[0] === b[0]) && (a[1] === b[1]);\n}\n\nfunction arrays_equal(arr_1, arr_2){\n  // If vecs are different lengths data must different\n  if(arr_1.length !== arr_1.length)\n    return false;\n\n  // If the union of the two arrays is the same size as both they're the same.\n  const size_of_union = unique([...arr_1, ...arr_2]).length;\n  return (size_of_union === arr_1.length) && (size_of_union === arr_2.length);\n}\n\n\n// Get unique set of values in an array\nfunction unique(data){\n  return d3.set(data).values();\n};\n\n\n// Takes a d3 selection of an SVG and downloads a svg for user\nfunction downloadPlot(svg){\n  const svgData = svg.node().outerHTML;\n  const svgBlob = new Blob([svgData], {type:\"image/svg+xml;charset=utf-8\"});\n  const svgUrl = URL.createObjectURL(svgBlob);\n  const downloadLink = document.createElement(\"a\");\n  downloadLink.href = svgUrl;\n  downloadLink.download = \"phecode_network.svg\";\n  document.body.appendChild(downloadLink);\n  downloadLink.click();\n  document.body.removeChild(downloadLink);\n}\n\n\n// Function to send a message back to shiny\nfunction send_to_shiny(type, payload, destination){\n  // Build message\n  const message_body = {\n    type: type,\n    // append the date to the begining so sent value always changes.\n    payload: [Date.now().toString(), ...payload]\n  };\n\n  // Make sure shiny is available before sending message\n  if(typeof Shiny !== 'undefined'){\n    // Send message off to server\n    Shiny.onInputChange(destination, message_body);\n  }\n}\n\nfunction setup_tooltip(dom_target, fields_to_show = ['code','OR']){\n\n  // Modify logic here.\n\n  const tooltip = dom_target.selectAppend('div.tooltip')\n    .st({\n      background:'rgba(255,255,255,0.8)',\n      position:'absolute',\n      padding: '0.25rem',\n      fontSize: 18,\n      border: '1px solid grey',\n      borderRadius: '5px'\n    });\n\n  const santatize_key = key => key.replace('_', ' ');\n\n  const santatize_value = val => typeof(val) === 'number' ? format_val(val): val;\n\n\n  const show = function(d, mouse_event){\n    // By filtering I avoid errors caused by not having data for something\n    const table_body = Object.keys(d)\n      .filter(key => fields_to_show.includes(key))\n      .sort((a,b) => a == 'code' ? -1 : 1) // trick to make sure code field shows up first\n      .reduce((table, key) =>\n        table + `<tr>\n                  <td style='text-align:right'>${santatize_key(key)}<\/td>\n                  <td style='text-align:left; padding-left: 1rem'>${santatize_value(d[key])}<\/td>\n                <\/tr>`, '');\n\n      const tooltip_content = `<table> ${table_body} <\/table>`;\n\n      const parent_width = +tooltip.parent().style('width').replace('px', '');\n      const parent_height = +tooltip.parent().style('height').replace('px', '');\n\n      //debugger;\n      const [event_x, event_y] = d3.clientPoint(tooltip.parent().node(), mouse_event);\n\n      const on_left_half = event_x < parent_width/2;\n      const on_upper_half = event_y < parent_height/2;\n\n      const offset = 5;\n\n      const style_positioning = {\n         display: 'block',\n       };\n\n      if(on_left_half){\n        style_positioning.left = event_x + offset;\n        style_positioning.right = 'auto';\n      } else {\n        style_positioning.right = parent_width - event_x + 2*offset;\n        style_positioning.left = 'auto';\n      }\n\n      if(on_upper_half){\n        style_positioning.top = event_y + offset;\n        style_positioning.bottom = 'auto';\n      } else {\n        style_positioning.bottom = parent_height - event_y + 2*offset;\n        style_positioning.top = 'auto';\n      }\n\n\n      //debugger;\n      tooltip\n       .st(style_positioning)\n       .html(tooltip_content);\n  };\n\n  const hide = function(){\n    tooltip\n      .st({\n        left: 0,\n        top: 0,\n        display: 'none',\n      });\n  };\n\n  // Start tooltip hidden.\n  hide();\n\n  return {show, hide}\n}\n\n\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/manhattan_plot/phewas_table.js */\nfunction setup_table(dom_target, sizes){\n  const up_cursor = 'n-resize';\n  const down_cursor = 's-resize';\n\n  const col_sizes = {\n    small: '70px',\n    med: '120px',\n    large: '220px',\n  };\n\n  // Scope variables that get modified by methods\n  let selected_codes = [];\n  let on_selection = selected_codes => console.log(selected_codes);\n  let rows;\n\n  const body_height = sizes.height - sizes.header - sizes.padding;\n\n  // Let CSS know this is the main container div.\n  dom_target.classed('table_holder', true);\n\n  const main_div = dom_target.append('div.table_main');\n\n  const control_panel = main_div.append('div.control_panel');\n\n  // ==============================================================\n  // Search bar setup\n  const search_bar = control_panel\n    .append('div.search_box');\n\n  search_bar.append('label')\n    .text('Search for code(s):')\n    .attr('for', 'search_bar');\n\n  const search_text = search_bar.append('input')\n    .attr('type', 'text')\n    .attr('name', 'search_bar')\n    .on('input', on_code_search);\n\n  const search_clear_btn = search_bar.append('button.clear_search.hidden')\n    .text('Clear')\n    .on('click', clear_search);\n\n  // ==============================================================\n  // Bring selected codes to top button\n  control_panel.append('button.raise_selected')\n    .text('Bring selected to top')\n    .on('click', raise_selected_codes);\n\n  const table = main_div.append('div.table')\n    .style('overflow', 'scroll')\n    .append('table')\n    .attr('class', 'fixed_header');\n\n  const add_data = function(table_data, columns_to_show){\n    // Add variable to keep track of sort direction for a column\n    columns_to_show.forEach(col => {\n      col.sort_inc = false;\n    });\n\n    // Draw headers for table\n    table.append('thead')\n      .st({\n        height: `${sizes.header}px`,\n      })\n      .append('tr')\n      .selectAll('th')\n      .data(columns_to_show).enter()\n      .append('th')\n      .text(d => d.name)\n      .style('cursor', d => d.sortable ? down_cursor: null)\n      .style('width', d => col_sizes[d.size])\n      .attr('title', \"Click to sort in decreasing order\")\n      .attr('class', 'tool table_header')\n      .on('click', column_sort);\n\n    // Initialize rows for every datapoint\n  rows = table.append('tbody')\n    .style('height', `${sizes.height}px`)\n    .selectAll('tr')\n    .data(table_data)\n    .enter()\n    .append('tr')\n    .classed('selected', d => selected_codes.includes(d.code))\n    .on('click', on_row_click);\n\n  // Fill in rows with each columns data\n  rows.selectAll('td')\n    .data(d => columns_to_show\n      .map(({name, id, is_num, size, scroll}) => ({\n        column: name,\n        size: size,\n        value: is_num ? format_val(d[id]): d[id],\n        scroll: scroll,\n      })))\n    .enter()\n    .append('td')\n    .style('width', d => col_sizes[d.size])\n    .attr('data-th', d => d.column)\n    .html(d => `${d.scroll ? `<div style=\"width:${col_sizes[d.size]}\"><span>`: ''} ${d.value} ${d.scroll ? '<\/span><\/div>': ''}`);\n\n    return this;\n  };\n\n  const select_codes = function(codes_to_select){\n\n    selected_codes = codes_to_select;\n    let number_changed = 0;\n\n    rows.classed('selected', function(d){\n      const is_selected = codes_to_select.includes(d.code);\n      if(is_selected){\n        // Check to see if this code was selected before to keep track of number of codes changed.\n        const new_selection = !d3.select(this).classed('selected');\n        if(new_selection) number_changed++;\n      }\n      return is_selected;\n    });\n\n    // If more than one code has changed in one go that means the user selected codes using dragging so\n    // we want to raise selected codes to top of table\n    if(number_changed > 1){\n      raise_selected_codes();\n    }\n\n    // If more than two selected codes have been changed, sort table too.\n    return this;\n  };\n\n  const disable_codes = function(or_bounds){\n    if(or_bounds == null) return\n\n    const is_disabled = d =>  (d.log_or < or_bounds[0]) || (d.log_or > or_bounds[1]);\n\n    rows.classed('disabled', is_disabled);\n\n\n    return this;\n  }\n\n  function set_selection_callback(callback){\n    on_selection = callback;\n    return this;\n  }\n\n  function on_row_click(d){\n    const row = d3.select(this);\n\n    // Dont let user interact with disabled codes.\n    const is_disabled = row.classed('disabled');\n    if(is_disabled) return;\n\n    const new_selection = !row.classed('selected');\n\n    if(new_selection){\n      selected_codes.push(d.code);\n    } else {\n      // Remove code if user has selected a previously selected code\n      selected_codes = selected_codes.filter(code => code !== d.code);\n    }\n\n    on_selection(selected_codes);\n  }\n\n  function column_sort(selected_column){\n    // Only do sorting if the column allows it.\n    if(!selected_column.sortable) return;\n\n    const id_to_sort = selected_column.id;\n    const sort_increasing = selected_column.sort_inc;\n\n    // Update mouseover cursor to reflect new sorting option\n    d3.select(this)\n     .attr('title', `Click to sort in ${sort_increasing ? 'decreasing': 'increasing'} order`)\n     .style('cursor', sort_increasing? down_cursor: up_cursor);\n\n    rows.sort((a,b) => {\n      const b_smaller =  b[id_to_sort] < a[id_to_sort];\n      const direction_scalar = sort_increasing ? 1: -1;\n      return direction_scalar * (b_smaller ? -1: 1);\n    });\n\n    // Update sorting direction.\n    selected_column.sort_inc = !selected_column.sort_inc;\n  }\n\n  function raise_selected_codes(){\n    rows.sort((a,b) => {\n      const a_selected = selected_codes.includes(a.code);\n      const b_selected = selected_codes.includes(b.code);\n      return b_selected - a_selected;\n    });\n  }\n\n  function on_code_search(){\n    const current_search = this.value;\n\n    // Make sure to hide clear button if the user has deleted all their search\n    if(current_search.length === 0){\n      hide_clear_btn();\n    } else {\n      show_clear_btn();\n    }\n\n    // Only start searching if the query is over two letters long for efficiency.\n    if(current_search.length < 2) {\n      rows.classed('found_in_search', false);\n      return;\n    }\n\n    let num_results = 0;\n    rows.each(function(d){\n\n      d.found_in_search = (\n        d.code.includes(current_search) ||\n        d.description.includes(current_search)\n      );\n\n      if(d.found_in_search) num_results++;\n\n      // Update classes of each row to let css know if it\n      // was found and what it was found because of\n      d3.select(this).classed('found_in_search', d.found_in_search);\n    })\n\n    // Only do sorting if the search has any results.\n    if(num_results > 0){\n      rows.sort((a,b) => {\n        const a_found = a.found_in_search;\n        const b_found = b.found_in_search;\n        return b_found - a_found\n      });\n    }\n  }\n\n  function clear_search(){\n    rows.classed('found_in_search', false);\n    search_text.node().value = '';\n    hide_clear_btn();\n  }\n\n  function hide_clear_btn(){\n    search_clear_btn.classed('hidden', true);\n    search_clear_btn.classed('visible', false);\n  }\n\n  function show_clear_btn(){\n    search_clear_btn.classed('hidden', false);\n    search_clear_btn.classed('visible', true);\n  }\n\n  return {add_data, select_codes, disable_codes, set_selection_callback, raise_selected_codes};\n}\n\n\ndiv = d3.select(div.node());\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/manhattan_plot/manhattan_plot.js */\n// !preview r2d3 data=readr::read_rds(here::here('data/manhattan_test_data.rds')), options=readr::read_rds(here::here('data/manhattan_test_options.rds')), container = 'div', dependencies = c('d3-jetpack', here::here('inst/d3/helpers.js'), here::here('inst/d3/manhattan_plot/phewas_table.js')), css = c( here::here('inst/d3/manhattan_plot/manhattan_plot.css'), here::here('inst/d3/helpers.css'), here::here('inst/css/common.css'))\n// ===============================================================\n// Initialization\n// ===============================================================\nlet viz_width = width,\n    viz_height = height,\n    viz_data = data,\n    default_selection = [];\n\nconst margin = {left: 70, right: 15, top: 35, bottom: 20};\n\nconst manhattan_unit = 3;\nconst hist_unit = 1;\nconst table_unit = 2;\nconst total_units = manhattan_unit + hist_unit + table_unit + 0.1;\n\n\nconst size_props = {\n  manhattan: manhattan_unit/total_units,\n  histogram: hist_unit/total_units,\n  table:     table_unit/total_units - 0.01,\n};\n\nconst num_hist_bins = 100;\n\n// Holds the histogram data for us. Needs to be\n// modified every time we resize the plot.\nlet or_bins;\n\n// ================================================================\n// Setup DOM elements\n// ================================================================\n// positioning for tooltips and buttons so they can be placed relative\n// to the main div\ndiv.st({\n  overflow: 'scroll',\n  position: 'relative',\n});\n\nconst buttons = div.append('div.buttons')\n  .st({\n     textAlign: 'center',\n     position: 'absolute',\n     right: 10,\n     top: 2,\n  });\n\nconst send_button = buttons.append('button')\n  .text('Update Network')\n  .style('display', 'inline-block')\n  .on('click', send_selection_to_shiny);\n\n// Reset button that shows up when there is something selected\n// allowing the user to back out to default.\nconst reset_button = buttons.append('button')\n  .text('Undo selection changes')\n  .style('display', 'inline-block')\n  .style('margin-left', '0.5rem')\n  .on('click', () => app_state.pass_action('reset_button', null));\n\nconst manhattan_viz = div\n  .selectAppend('div.viz_holder')\n  .style('position', 'relative');\n\nconst main_svg = manhattan_viz\n  .append('svg')\n  .attr('id', 'main_viz');\n\nconst or_svg = div.append('svg')\n  .attr('id', 'or_hist');\n\nconst columns_to_show = [\n  {name: 'Code',        id: 'code',        is_num: false, scroll: false, sortable: true,  size: 'small', small_col: true},\n  {name: 'OR',          id: 'OR',          is_num: true,  scroll: false, sortable: true,  size: 'small', small_col: true},\n  {name: 'P-Value',     id: 'p_val',       is_num: true,  scroll: false, sortable: true,  size: 'small', small_col: true},\n  {name: 'Description', id: 'description', is_num: false, scroll: true,  sortable: false, size: 'large', small_col: false},\n  {name: 'Category',    id: 'category',    is_num: false, scroll: true,  sortable: true,  size: 'med', small_col: false},\n];\n\nconst table_div = div.append('div');\n\nprocess_new_data(data);\nconst my_table = setup_table(\n    table_div,\n    {height: 400, header: 35, padding: 5, control_panel: 50}\n  )\n  .add_data(viz_data, columns_to_show)\n  .set_selection_callback(send_table_selection);\n\n// Setup tooltip to show same info as table.\nconst tooltip = setup_tooltip(manhattan_viz, columns_to_show.map(d => d.id));\n\n\n// Then we append a g element that has padding added to it to those svgs\nconst main_viz = main_svg\n  .append('g')\n  .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\nconst or_hist = or_svg\n  .append('g')\n  .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n// Next we append some gs within those gs to house our brushes for filtering data\n// attach the brush to the chart\nconst manhattan_brush_g = main_viz.append('g')\n  .attr('class', 'brush');\n\nconst hist_brush_g = or_hist.append('g')\n  .attr('class', 'brush');\n\n// ================================================================\n// Global variables that get accessed in state functions\n// ================================================================\n\n// Scales\n// ================================================================\nconst manhattan_scales = {\n  x: d3.scaleLinear(),\n  y: d3.scaleLinear(),\n};\n\nconst histogram_scales = {\n  x: d3.scaleLinear(),\n  y: d3.scaleLinear(),\n};\n\n\n// ================================================================\n// Initalize State\n// ================================================================\nclass App_State{\n\n  constructor(initial_state, on_new_state){\n    this.state = initial_state;\n    // keep track of what elements have changed\n    this.changes = {};\n    for(let prop in initial_state){\n      this.changes[prop] = true;\n    }\n\n    this.on_new_state = on_new_state;\n\n    this.on_new_state(this);\n  }\n\n  // Change a state value and mark it fresh\n  modify_property(prop, new_value){\n    this.state[prop] = new_value;\n    this.changes[prop] = true;\n  }\n\n  has_changed(prop){\n    return this.changes[prop];\n  }\n\n  // Record that a given state property has been dealt with.\n  mark_completed(prop){\n    this.changes[prop] = false;\n  }\n\n  // What propeties have changed and need to be updated\n  fresh_properties(){\n    const fresh_props = [];\n    for(let prop in initial_state){\n      if(this.changes[prop]) fresh_props.push(prop);\n    }\n    return fresh_props;\n  }\n\n  get(prop){\n    return this.state[prop];\n  }\n\n  // Individual app components pass info to this\n  // which then modifies the internal state accordingly\n  pass_action(type, payload){\n    switch(type){\n      case 'initialize':\n        break;\n      case 'new_data':\n        this.modify_property('data', payload);\n        break;\n      case 'new_sizes':\n        this.modify_property('sizes', payload);\n        break;\n      case 'manhattan_brush':\n        const newly_selected = payload;\n        this.modify_property('selected_codes', newly_selected);\n        break;\n      case 'manhattan_brush_add':\n        // User has held a while dragging so we just need to append new selection\n        this.modify_property(\n          'selected_codes',\n          [...this.get('selected_codes'),\n          ...payload\n          ]\n        );\n        break;\n      case 'manhattan_brush_delete':\n        // Only keep codes that are not contained in the dragged box.\n        const codes_to_delete = payload;\n        this.modify_property(\n          'selected_codes',\n          this.get('selected_codes').filter(code => !codes_to_delete.includes(code))\n        );\n        break;\n      case 'manhattan_click':\n        // Click function passed a single code that was clicked.\n        const current_selection = this.get('selected_codes');\n\n        // Add code if it's not selected, remove if it is.\n        this.modify_property(\n          'selected_codes',\n          current_selection.includes(payload) ?\n            current_selection.filter(c => c !== payload) :\n            [...current_selection, payload]\n        );\n        break;\n      case 'hist_brush':\n        // Update OR bounds\n        this.modify_property('or_bounds', payload);\n        // Calculate and update the newly selected codes\n        const currently_selected = this.get('selected_codes');\n        this.modify_property(\n          'selected_codes',\n          this.get('data')\n            .filter(d => currently_selected.includes(d.code) ) // filter to codes that are selected\n            .filter(d => (d.log_or > payload[0]) && (d.log_or < payload[1])) // filter out codes now outside boundaries\n            .map(d => d.code)\n        );\n        break;\n      case 'table_selection':\n        this.modify_property('selected_codes', payload);\n        break;\n      case 'reset_button':\n        // Clear the filters to default values\n        this.modify_property('selected_codes', default_selection);\n        this.modify_property('or_bounds', [-Infinity, Infinity]);\n        break;\n      default:\n        console.log('unknown input');\n    }\n\n    this.on_new_state(this);\n  }\n}\n\nlet manhattan_plot, hist_brush;\n\nfunction new_state(state){\n  const changed_props = state.fresh_properties();\n\n  // The flow of drawing the whole viz. Only refreshing components if they need to be.\n\n  // From here on out we need data and sizes so let's check if we have data before proceeding\n  const sizes = state.get('sizes');\n  if(!sizes) return;\n\n  // Update scales and the quadtree for selecting points\n  if(state.has_changed('sizes')){\n    // Set the sizes of the various dom elements\n    size_viz(state.get('sizes'));\n\n    reset_scales(viz_data, state.get('sizes'));\n\n    manhattan_plot = draw_manhattan(viz_data);\n    // Make sure to respect or bounds in drawn plot\n    manhattan_plot.disable(this.get('or_bounds'));\n\n    initialize_manhattan_brush(viz_data);\n\n    draw_histogram(viz_data);\n\n    hist_brush = initialize_histogram_brush(data, this.get('or_bounds'));\n  }\n\n\n  if(state.has_changed('selected_codes') || state.has_changed('or_bounds')){\n\n    const default_bounds = tuples_equal(\n      state.get('or_bounds'),\n      [-Infinity, Infinity] );\n\n    //const no_codes_selected = state.get('selected_codes').length === 0;\n    const no_change_from_default = arrays_equal(\n      state.get('selected_codes'),\n      default_selection\n    );\n    if(default_bounds && no_change_from_default){\n      hide_reset();\n\n    } else {\n      show_reset();\n    }\n  }\n\n  // Make sure manhattan and table have selected codes.\n  if(state.has_changed('selected_codes') || state.has_changed('sizes')){\n    manhattan_plot.highlight(state.get('selected_codes'));\n    my_table.select_codes(state.get('selected_codes'));\n  }\n\n\n  if(state.has_changed('or_bounds')){\n    manhattan_plot.disable(this.get('or_bounds'));\n    my_table.disable_codes(this.get('or_bounds'));\n\n    // Check if the vis was just reset.\n    if(tuples_equal(state.get('or_bounds'), [-Infinity, Infinity])){\n      hist_brush.reset();\n    }\n  }\n\n  // Make all the props completed.\n  changed_props.forEach(p => state.mark_completed(p));\n}\n\nconst initial_state = {\n  data: viz_data,\n  or_bounds: [-Infinity, Infinity],\n  selected_codes: default_selection,\n  sizes: null,\n};\n\nconst app_state = new App_State(initial_state, new_state);\n\n// ===============================================================\n// Rendering\n// This code runs whenever data changes\n// ===============================================================\nr2d3.onRender(function(data, svg, width, height, options) {\n  default_selection = options.selected;\n\n  // Check if selection is different from current state and only reset if it is.\n  const new_selection = !arrays_equal(default_selection, app_state.get('selected_codes'));\n\n  if(new_selection){\n    app_state.pass_action('new_sizes', [viz_width, height]);\n    app_state.pass_action('reset_button', null);\n    app_state.pass_action('table_selection', default_selection);\n  }\n});\n\n// ===============================================================\n// Resizing\n// This is called by r2d3 runs whenever the plot is resized\n// ===============================================================\nr2d3.onResize(function(width, height){\n  viz_width = width;\n  viz_height = height;\n  app_state.pass_action('new_sizes', [viz_width, height]);\n});\n\n\n// ================================================================\n// Main drawing functions.\n// ================================================================\n\nfunction draw_manhattan(data){\n  // Make sure that the neccesary info is provided before drawing.\n  if(data === null) return;\n  const point_size = 3;\n  const outline = 1.5;\n\n  let currently_selected_points;\n\n  const default_point = {\n    r: d => point_size - (d.log_or > 0 ? 0: outline/2),\n    opacity: 0.85,\n    fill: d => d.log_or > 0 ? d.unselected_color: 'white',\n    stroke: d => d.unselected_color,\n  };\n\n  const selected_point = {\n    r: d => point_size*1.5 - (d.log_or > 0 ? 0: outline/2),\n    opacity: 0.95,\n    fill: d => d.log_or > 0 ? d.color: 'white',\n    stroke: d => d.color,\n  };\n\n  const disabled_point = {\n    r: point_size/2,\n    opacity: 0.2,\n    fill: options.colors.med_grey,\n    stroke: options.colors.med_grey,\n  };\n\n  let manhattan_points = main_viz.selectAll('circle.manhattan_points')\n    .data(data, d => d.code);\n\n  manhattan_points = manhattan_points.enter()\n    .append('circle')\n    .attr('class', 'manhattan_points')\n    .merge(manhattan_points)\n    .at({\n      cx: d => manhattan_scales.x(d.index),\n      cy: d => manhattan_scales.y(d.log_pval),\n      strokeWidth: d => d.log_or > 0 ? 0 : outline,\n    })\n    .at(default_point)\n    .on('mouseover', function(d){\n      if(d.disabled) return;\n\n      //debugger;\n      tooltip.show(d, d3.event);\n    })\n    .on('mouseout', function(d){\n      if(d.disabled) return;\n      tooltip.hide();\n    })\n    .on('click', function(d){\n      if(d.disabled) return;\n      // Send clicked code id to the app state\n      app_state.pass_action('manhattan_click', d.code);\n    });\n\n\n  // Draw a legend\n   main_viz\n     .selectAppend('g.legend')\n     .translate([margin.left, -margin.top + 5])\n     .call(draw_legend);\n\n\n  // Draw the axes\n  main_viz.selectAppend(\"g#y-axis\")\n    .call(function(g){\n      g.attr(\"transform\", `translate(${-5},0)`)\n      .call(d3.axisLeft(manhattan_scales.y).tickSizeOuter(0))\n      .call(add_axis_label(`\n        <tspan>-Log<\/tspan> <tspan dx='-0.3em' font-size=\"0.6rem\" baseline-shift = \"sub\">10<\/tspan> <tspan dx='-0.2em'>(P)<\/tspan>\n      `));\n    });\n\n  main_viz.selectAppend(\"g.x-axis\")\n    .call(g =>\n      g.attr(\"transform\", `translate(0,${manhattan_scales.y.range()[0]})`)\n        .call(d3.axisBottom(histogram_scales.x).ticks(1).tickSizeOuter(0))\n        .call(g => g.select(\".tick:first-of-type\").remove())\n        .call(add_axis_label('Phecode', false))\n    );\n\n  const disable_codes = or_bounds => {\n\n    const is_disable = d =>  (d.log_or < or_bounds[0]) || (d.log_or > or_bounds[1]);\n\n    manhattan_points\n      .filter(d => is_disable(d))\n      .at(disabled_point)\n      .each(d => d.disabled = true);\n\n    const non_disabled_points = manhattan_points\n      .filter(d => !is_disable(d) && !currently_selected_points.includes(d.code))\n      .at(default_point)\n      .raise()\n      .each(d => d.disabled = false);\n  };\n\n  const highlight_codes = selected_codes => {\n    currently_selected_points = selected_codes;\n    manhattan_points\n      .filter(d => selected_codes.includes(d.code))\n      .raise()\n      .at(selected_point);\n\n    // Make sure points that are not disabled but not highlighted are back at default settings\n    manhattan_points\n      .filter(d => !selected_codes.includes(d.code) && !d.disabled)\n      .at(default_point);\n  };\n\n  highlight_codes([]);\n\n  return {\n    highlight: highlight_codes,\n    disable: disable_codes\n  };\n}\n\n\nfunction draw_legend(legend_g){\n\n   // Draw simple legend\n const legend_w = 110;\n const legend_h = 25;\n const negative_circ_r = 4.5;\n const circ_outline = 1.5;\n const positive_circ_r = negative_circ_r + circ_outline/2;\n const legend_gap = 4;\n\n legend_g.selectAppend('rect')\n   .at({\n     width: legend_w,\n     height: legend_h,\n     fill: options.colors.light_grey,\n     stroke: options.colors.med_grey,\n     strokeWidth: 1,\n   });\n\n  const text_attrs = {\n    alignmentBaseline: 'middle',\n    dominantBaseline: 'middle',\n    textAnchor: 'end',\n    y: 1,\n  };\n\n  const g = legend_g.selectAppend('g.text_holder')\n    .st({\n      fontSize: '0.75rem',\n    })\n    .translate([0, legend_h/2]);\n\n  g.selectAppend('text.lead')\n    .at(text_attrs)\n    .attr('x', -legend_gap)\n    .text('Odds Ratio: ');\n\n let legend_elements = g.selectAll('g.legend_element')\n  .data(['negative', 'positive']);\n\n legend_elements\n  .enter().append('g')\n  .attr('class', d => d)\n  .merge(legend_elements)\n  .translate((d,i)=> [(1 + 2*i)*legend_w/(4), 0])\n  .each(function(d){\n    const element_g = d3.select(this);\n\n    const is_neg = d === 'negative';\n\n    // Draw the circles\n    element_g.selectAppend(`circle.${d}`)\n     .at({\n        cx: (is_neg ? negative_circ_r: positive_circ_r) + 5,\n        stroke: 'orangered',\n        r: is_neg ? negative_circ_r: positive_circ_r,\n        fill: is_neg ? 'white': 'orangered',\n        strokeWidth: is_neg ? circ_outline: 0,\n      });\n\n  // Write the text\n   element_g.selectAppend('text')\n     .text(is_neg ? '< 1': '> 1')\n     .at(text_attrs);\n  });\n\n  legend_g.selectAppend('line')\n    .at({\n      x1: legend_w/2,\n      x2: legend_w/2,\n      y1: legend_h,\n      y2: 0,\n      stroke: options.colors.med_grey,\n      strokeWidth: circ_outline,\n    });\n\n}\n\n\nfunction show_reset(){\n  reset_button.style('display', 'inline-block');\n}\n\n\nfunction hide_reset(){\n  reset_button.style('display', 'none');\n}\n\n\nfunction draw_histogram(data){\n\n  const scales = histogram_scales; // Rename to make function code a bit neater\n\n  // Draw bars\n  let hist_bars = or_hist\n    .attr(\"fill\", options.colors.light_blue)\n    .selectAll(\"rect.histogram_bar\")\n    .data(or_bins);\n\n  hist_bars = hist_bars.enter().append('rect')\n    .attr('class', 'histogram_bar')\n    .merge(hist_bars)\n    .attr(\"x\", d =>  scales.x(d.x0) + 1)\n    .attr(\"width\", d => Math.max(0,  scales.x(d.x1) - scales.x(d.x0) - 1))\n    .attr(\"y\", d =>  scales.y(d.length))\n    .attr(\"height\", d =>  scales.y(0) -  scales.y(d.length));\n\n  // Append axes\n  or_hist.selectAppend(\"g.x-axis\")\n    .call(g =>\n      g.attr(\"transform\", `translate(0,${scales.y.range()[0]})`)\n        .call(d3.axisBottom(scales.x).tickSizeOuter(0))\n        .call(add_axis_label('Log OR', false))\n    );\n\n  or_hist.selectAppend(\"g.y-axis\")\n    .call(\n      g => g.attr(\"transform\", `translate(${-5},0)`)\n        .call(d3.axisLeft(scales.y).ticks(5).tickSizeOuter(0))\n        .call(add_axis_label('# Codes'))\n    );\n\n  const title = or_hist.selectAppend('text.title')\n    .style('fill', 'dimgrey')\n    .translate([5, -5])\n    .html(\n      `<tspan class = 'main-title'>Log Odds Ratio distribution<\/tspan>   <tspan class = 'sub-title'>Drag handles to filter to codes in a given range<\/tspan>`\n    );\n\n\n}\n\n\nfunction send_selection_to_shiny(){\n  const currently_selected = app_state.get('selected_codes');\n  // Hook up the to app code here.\n\n  send_to_shiny(\n    'selection',\n    currently_selected,\n    options.msg_loc\n  );\n}\n\n\nfunction send_table_selection(selected_codes){\n    app_state.pass_action('table_selection', selected_codes);\n}\n\n\n// ================================================================\n// On load functions for resizing and processing raw data\n// ================================================================\n\nfunction size_viz([width, height]){\n\n  manhattan_viz\n    .style('height', `${height*size_props.manhattan}px`)\n    .style('width', `${width}px`);\n\n  // Adjust the sizes of the svgs\n  main_svg\n    .attr('height', height*size_props.manhattan)\n    .attr('width', width);\n\n  or_svg\n    .attr('height', height*size_props.histogram)\n    .attr('width', width);\n\n  table_div.style('height', `${height*size_props.table}px`);\n}\n\n\nfunction process_new_data(data){\n  // Add a log_pval and log_or field to all points and keep track of extents\n  data.forEach((d,i) => {\n    d.log_pval = -Math.log10(d.p_val);\n    d.log_or = Math.log(d.OR);\n    d.unselected_color = d3.interpolateLab(d.color, \"white\")(0.66);\n    d.index = i;\n  });\n}\n// ================================================================\n// Brush setup functions.\n// ================================================================\n\nfunction initialize_manhattan_brush(data){\n  // Initialize a quadtree to help us filter through the manhattan points much faster\n  const main_quadtree = d3.quadtree()\n    .x(d => manhattan_scales.x(d.index))\n    .y(d => manhattan_scales.y(d.log_pval))\n    .addAll(data);\n\n  const manhattan_brush = d3.brush()\n    .on(\"start.nokey\", function() {\n      d3.select(window)\n        .on(\"keydown.brush keyup.brush\", null);\n    })\n    .on('end', on_manhattan_brush);\n\n  // Add a g element and call the brush on it.\n  const manhattan_brush_g = main_viz\n    .selectAppend('g#manhattan_brush')\n    .attr('class', 'brush');\n\n  manhattan_brush_g.call(manhattan_brush);\n\n  let a_pressed = false;\n  let d_pressed = false;\n\n  d3.select('body')\n    .on('keydown', function(d){\n      a_pressed = d3.event.key === 'a';\n      d_pressed = d3.event.key === 'd';\n    })\n    .on('keyup', function(d){\n      a_pressed = false;\n      d_pressed = false;\n    });\n\n  function on_manhattan_brush(){\n    const { selection } = d3.event;\n\n    // if we have no selection, just reset the brush highlight to no nodes\n    if(!selection) return;\n\n    manhattan_brush_g.call(manhattan_brush.move, null);\n\n    // Find what codes intersect the selection\n    const overlapped_codes = scan_tree_for_selection(main_quadtree, selection, app_state.get('or_bounds'))\n\n    const action_type = a_pressed ?\n      'manhattan_brush_add':\n      d_pressed ?\n      'manhattan_brush_delete' :\n      'manhattan_brush';\n\n    app_state.pass_action(action_type, overlapped_codes);\n  }\n}\n\n\nfunction scan_tree_for_selection(quadtree, selection, or_bounds){\n  // Scans passed quadtree for points in a given range, excludes them if they fall out of\n  // the or bounds.\n\n  // begin an array to collect the brushed nodes\n  const selected_codes = [];\n\n  // traverse all branches of the quad tree\n  quadtree.visit((node, x1, y1, x2, y2) => {\n\n    const overlaps_selection = selection_contains(\n      selection, x1, y1, x2, y2\n    );\n\n    // skip if it doesn't overlap the brush\n    if(!overlaps_selection) return true;\n\n    // If we have overlap and we're a leaf node, investigate\n    if (!node.length) {\n      const d = node.data;\n      const dx = manhattan_scales.x(d.index);\n      const dy = manhattan_scales.y(d.log_pval);\n      if (selection_contains(selection, dx, dy)) {\n        const in_or_bounds = (d.log_or > or_bounds[0]) && (d.log_or < or_bounds[1]);\n        if(in_or_bounds){\n          selected_codes.push(d.code);\n        }\n      }\n    }\n\n    // return false so that we traverse into branch (only useful for non-leaf nodes)\n    return false;\n  });\n\n  return selected_codes;\n}\n\n\nfunction initialize_histogram_brush(data, initial_position = null){\n\n  const [x_min, x_max] = histogram_scales.x.range();\n  const [y_min, y_max] = histogram_scales.y.range();\n\n  const selection_range = [\n    [x_min - 1, y_max],\n    [x_max + 1, y_min]\n  ];\n\n\n  const hist_brush = d3.brushX()\n    .extent(selection_range);\n\n\n  // Add a g element and call the brush on it.\n  const hist_brush_g = or_hist\n    .selectAppend('g#hist_brush')\n    .attr('class', 'brush');\n\n  hist_brush_g.call(hist_brush);\n  set_brush_pos(histogram_scales.x.range());\n\n  hist_brush_g.select('.selection')\n    .attr('fill-opacity', 0.1);\n\n  hist_brush_g.selectAll('.handle')\n    .at({\n      strokeWidth: 2,\n      fill: options.colors.dark_grey,\n    });\n\n  // If the user has requested an initial position and that initial position is not just the default\n  // then place the brush before initializing the on-watcher.\n  if((initial_position !== null) && !tuples_equal(initial_position, [-Infinity, Infinity])){\n    set_brush_pos(initial_position.map(histogram_scales.x))\n  }\n\n   // Kick of watcher for dragging.\n   hist_brush.on('end', on_hist_brush);\n\n  function set_brush_pos([min, max]){\n    hist_brush_g.call(hist_brush.move, [min, max]);\n  }\n\n  function on_hist_brush(){\n\n    const { selection } = d3.event;\n    // if we have no selection, just reset the brush highlight to no nodes\n    if(!selection) return;\n\n    // Is this move just a result of a reset? If so ignore it.\n    const is_reset_pos = tuples_equal(selection, histogram_scales.x.range()) ;\n    if(is_reset_pos) return;\n\n    const or_min = histogram_scales.x.invert(selection[0]);\n    const or_max = histogram_scales.x.invert(selection[1]);\n\n    app_state.pass_action('hist_brush', [or_min, or_max]);\n  }\n\n  return {\n    set: set_brush_pos,\n    reset: () => set_brush_pos(histogram_scales.x.range()),\n  };\n}\n\n\nfunction reset_scales(data, sizes){\n\n  const [width, height] = sizes;\n\n  // ===============================================================\n  // Manhattan plot\n  // ===============================================================\n  // How much should we pad the top of the axis in terms of percent?\n  const y_buffer = 1.1;\n  const max_log_pval = d3.max(data, d => d.log_pval);\n\n  manhattan_scales.x\n    .domain([0, data.length])\n    .range([0, width - margin.left - margin.right]);\n\n  manhattan_scales.y\n    .domain([0, y_buffer*max_log_pval])\n    .range([(size_props.manhattan*height) - margin.top - margin.bottom, 0]);\n\n\n  // ===============================================================\n  // Histogram\n  // ===============================================================\n  const hist_height = size_props.histogram*height;\n  const log_ors = data.map(d => d.log_or);\n\n  histogram_scales.x\n    .range([0, width - margin.left - margin.right])\n    .domain(d3.extent(log_ors)).nice();\n\n  or_bins = d3.histogram()\n    .domain(histogram_scales.x.domain())\n    .thresholds(histogram_scales.x.ticks(num_hist_bins))\n    (log_ors);\n\n  histogram_scales.y\n    .range([hist_height - margin.top - margin.bottom, 0])\n    .domain([0, d3.max(or_bins, d => d.length)]).nice();\n}\n\n\n// ===============================================================\n// Helper functions\n// ===============================================================\nfunction add_axis_label(label, y_axis = true){\n\n  const bump_axis = y_axis ? 'x': 'y';\n\n  const axis_label_style = {\n    [bump_axis]: y_axis ? -3: 8,\n    textAnchor: 'end',\n    fontWeight: '500',\n    fontSize: '0.8rem'\n  };\n\n  return g => {\n    let last_tick = g.select(\".tick:last-of-type\");\n    const no_ticks = last_tick.empty();\n    if(no_ticks){\n      last_tick = g.append('g')\n        .attr('class', 'tick')\n        .translate([viz_width - margin.left - margin.right, 5]);\n      last_tick.append('text')\n        .attr('fill', \"#000\");\n    }\n\n    last_tick.select(\"line\").remove();\n\n    last_tick.select(\"text\")\n            .at(axis_label_style)\n            .html(label);\n  };\n}\n\n\nfunction remove_axis_spine(g){\n   g.select(\".domain\").remove()\n}\n\n\nfunction selection_contains(selection, bx_min, by_min, bx_max = bx_min, by_max = by_min){\n  const [[sx_min, sy_min],[sx_max, sy_max]] = selection;\n\n  const xs_intersect = (sx_min < bx_max) && (sx_max > bx_min);\n  const ys_intersect = (sy_min < by_max) && (sy_max > by_min);\n\n  return xs_intersect && ys_intersect;\n}\n\n};",
        "style": "/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/helpers.css */\n/*@import url('https://fonts.googleapis.com/css?family=Maven+Pro&display=swap');\n@import url('https://fonts.googleapis.com/css?family=Montserrat:300,400|Raleway&display=swap');\n*/\n\n\n/* ================================================== */\n/* Table */\n/* ================================================== */\n\n\n/* ================================================== */\n/* Table-wide style */\ntable {\n\tborder-collapse: collapse;\n\ttable-layout: fixed;\n}\n\n/*Individual cells for header and body */\ntd, th {\n\tpadding: 3px;\n\ttext-align: center;\n\tvertical-align: middle;\n}\n\n/* ================================================== */\n/* Table-body style */\ntbody{\n  display: block;\n  overflow: auto;\n}\n\n/* ================================================== */\n/* Header styling */\n\n/* Everything that composes the header */\nthead {\n  font-size: 0.95em;\n  font-weight: 600;\n}\n\n/* Entire row of the header */\nthead tr {\n   display: block;\n}\n\n/*Individual header cells */\nth {\n  background-color: #d9d9d9;\n}\n\n/* ================================================== */\n/* Row styling */\n\ntbody tr {\n  --row-height: 30px;\n  height: var(--row-height);\n}\n\n/* Zebra striping */\ntr:nth-of-type(even) {\n\tbackground: #f0f0f0;\n}\n\n/* Rows that have been selected */\ntr.selected{\n  background: #ff7f00;\n}\n\ntr.disabled{\n  opacity: 0.5;\n}\n\ntr div {\n  height: var(--row-height);\n  text-align: left;\n  overflow-x: auto;\n  width: 100%;\n  font-size: 0.8em;\n}\n\n/* Give text a bit of breathing room */\ntr div span {\n  padding-left: 0.2rem;\n}\n\n\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/manhattan_plot/manhattan_plot.css */\n.table_holder {\n  display: flex;\n  justify-content: center;\n  width: 100%;\n}\n\n.control_panel{\n  height: 50px;\n  display: flex;\n  width: 100%;\n  align-items: flex-end;\n  justify-content: space-between;\n  padding-bottom: .2rem;\n}\n\n.phewas_table {\n  width: 100%;\n}\n\n/* ================================================== */\n/* Table */\n/* ================================================== */\n\ndiv.table {\n  overflow-x: scroll;\n}\n/* Table-body style */\ntbody.phewas_table{\n  width: 100%;\n  margin-top: -6px; /*Fixes gap between header and table */\n}\n\n\ntr div {\n  height: var(--row-height);\n  text-align: left;\n  overflow-x: auto;\n  width: 100%;\n  font-size: 0.8em;\n}\n\n/* Give text a bit of breathing room */\ntr div span {\n  padding-left: 0.2rem;\n}\n\n\n/* ================================================== */\n/* Buttons */\n/* ================================================== */\n/*\nbutton.raise_selected {\n  width: 120px;\n  padding:6px 15px;\n}*/\n\nbutton.clear_search {\n  padding: 5px 3px;\n}\n\n\n\n\ninput[type=text], textarea {\n  height: 2em;\n  -webkit-transition: all 0.30s ease-in-out;\n  -moz-transition: all 0.30s ease-in-out;\n  -ms-transition: all 0.30s ease-in-out;\n  -o-transition: all 0.30s ease-in-out;\n  outline: none;\n  padding: 3px 0px 3px 3px;\n  margin: 5px 2px 3px 2px;\n  border: 1px solid #DDDDDD;\n}\n\n/* Style the found results from the search to match the search bar for visual continuity */\ninput[type=text]:focus,\ntextarea:focus,\n.found_in_search {\n  box-shadow: 0 0 5px #2ca25f;\n  border: 1px solid #2ca25f;\n}\n\n.search_box {\n  display: inline-block;\n  padding-right: 1rem;\n  --fade-length: 0.5s;\n}\n\n\n.search_box button.visible {\n  visibility: visible;\n  opacity: 1;\n  transition: opacity var(--fade-length) linear;\n}\n\n.search_box button.hidden {\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0s var(--fade-length), opacity var(--fade-length) linear;\n}\n\n\n/* ================================================== */\n/* Histogram titles */\n/* ================================================== */\nsvg .main-title {\n  font-size: 1rem;\n}\n\nsvg .sub-title {\n  font-style: italic;\n  opacity: 0.75;\n  font-size: 0.8rem;\n}\n\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/css/common.css */\n/*\nFonts for app\n*/\n\nbody {\n  --main-text-color: #525252;\n}\n\nbody,\ntable,\nlabel,\nbutton,\nsvg text {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n}\n\n\nh1, h2, h3, h4 {\n  font-weight: 400;\n  color: #252525;\n}\n\np, span, table, label, button {\n  color: var(--main-text-color);\n}\n\nsvg text {\n  fill: var(--main-text-color);\n}\n\n\n\n/* Button Styles */\nbutton,\n.btn {\n  \t-moz-box-shadow:inset 0px 1px 0px 0px #ffffff;\n  \t-webkit-box-shadow:inset 0px 1px 0px 0px #ffffff;\n  \tbox-shadow:inset 0px 1px 0px 0px #ffffff;\n  \tbackground:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #ffffff), color-stop(1, #f6f6f6));\n  \tbackground:-moz-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\n  \tbackground:-webkit-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\n  \tbackground:-o-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\n  \tbackground:-ms-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\n  \tbackground:linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  \tfilter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#f6f6f6',GradientType=0);\n  \tbackground-color:#ffffff;\n  \t-moz-border-radius:6px;\n  \t-webkit-border-radius:6px;\n  \tborder-radius:6px;\n  \tborder:1px solid #dcdcdc;\n  \tdisplay:inline-block;\n  \tcursor:pointer;\n  \tpadding:6px 20px;\n  \ttext-decoration:none;\n  \ttext-shadow:0px 1px 0px #ffffff;\n  }\n\nbutton:hover,\n.btn:hover {\n\tbackground:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #f6f6f6), color-stop(1, #ffffff));\n\tbackground:-moz-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n\tbackground:-webkit-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n\tbackground:-o-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n\tbackground:-ms-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n\tbackground:linear-gradient(to bottom, #f6f6f6 5%, #ffffff 100%);\n\tfilter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#f6f6f6', endColorstr='#ffffff',GradientType=0);\n\tbackground-color:#f6f6f6;\n}\n\nbutton:active,\n.btn:active {\n\tposition:relative;\n\ttop:1px;\n}\n\nspan.btn {\n  font-weight: 200;\n}\n\nbutton.btn {\n  font-size: 1rem;\n  font-weight: 400;\n}",
        "version": 5,
        "theme": {
          "default": {
            "background": "#FFFFFF",
            "foreground": "#000000"
          },
          "runtime": null
        },
        "useShadow": true
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "d3v5",
          "version": "5.0.0",
          "src": {
            "href": "d3v5-5.0.0"
          },
          "meta": null,
          "script": "d3.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        },
        {
          "name": "d3-jetpack",
          "version": "2.0.9",
          "src": {
            "href": "d3-jetpack-2.0.9"
          },
          "meta": null,
          "script": "d3-jetpack.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        }
      ]
    },
    "main_app-network_plot_main_dashboard-plot": {
      "x": {
        "data": {
          "edges": [
            {
              "source": 2,
              "target": 334
            },
            {
              "source": 7,
              "target": 334
            },
            {
              "source": 8,
              "target": 334
            },
            {
              "source": 19,
              "target": 334
            },
            {
              "source": 23,
              "target": 334
            },
            {
              "source": 26,
              "target": 334
            },
            {
              "source": 29,
              "target": 334
            },
            {
              "source": 32,
              "target": 334
            },
            {
              "source": 37,
              "target": 334
            },
            {
              "source": 38,
              "target": 334
            },
            {
              "source": 43,
              "target": 334
            },
            {
              "source": 56,
              "target": 334
            },
            {
              "source": 59,
              "target": 334
            },
            {
              "source": 62,
              "target": 334
            },
            {
              "source": 63,
              "target": 334
            },
            {
              "source": 68,
              "target": 334
            },
            {
              "source": 69,
              "target": 334
            },
            {
              "source": 70,
              "target": 334
            },
            {
              "source": 72,
              "target": 334
            },
            {
              "source": 76,
              "target": 334
            },
            {
              "source": 78,
              "target": 334
            },
            {
              "source": 83,
              "target": 334
            },
            {
              "source": 84,
              "target": 334
            },
            {
              "source": 88,
              "target": 334
            },
            {
              "source": 89,
              "target": 334
            },
            {
              "source": 91,
              "target": 334
            },
            {
              "source": 93,
              "target": 334
            },
            {
              "source": 98,
              "target": 334
            },
            {
              "source": 100,
              "target": 334
            },
            {
              "source": 101,
              "target": 334
            },
            {
              "source": 102,
              "target": 334
            },
            {
              "source": 103,
              "target": 334
            },
            {
              "source": 109,
              "target": 334
            },
            {
              "source": 112,
              "target": 334
            },
            {
              "source": 114,
              "target": 334
            },
            {
              "source": 116,
              "target": 334
            },
            {
              "source": 117,
              "target": 334
            },
            {
              "source": 118,
              "target": 334
            },
            {
              "source": 137,
              "target": 334
            },
            {
              "source": 139,
              "target": 334
            },
            {
              "source": 141,
              "target": 334
            },
            {
              "source": 142,
              "target": 334
            },
            {
              "source": 143,
              "target": 334
            },
            {
              "source": 144,
              "target": 334
            },
            {
              "source": 146,
              "target": 334
            },
            {
              "source": 154,
              "target": 334
            },
            {
              "source": 155,
              "target": 334
            },
            {
              "source": 158,
              "target": 334
            },
            {
              "source": 164,
              "target": 334
            },
            {
              "source": 166,
              "target": 334
            },
            {
              "source": 175,
              "target": 334
            },
            {
              "source": 178,
              "target": 334
            },
            {
              "source": 180,
              "target": 334
            },
            {
              "source": 189,
              "target": 334
            },
            {
              "source": 195,
              "target": 334
            },
            {
              "source": 200,
              "target": 334
            },
            {
              "source": 203,
              "target": 334
            },
            {
              "source": 205,
              "target": 334
            },
            {
              "source": 207,
              "target": 334
            },
            {
              "source": 209,
              "target": 334
            },
            {
              "source": 220,
              "target": 334
            },
            {
              "source": 221,
              "target": 334
            },
            {
              "source": 228,
              "target": 334
            },
            {
              "source": 233,
              "target": 334
            },
            {
              "source": 238,
              "target": 334
            },
            {
              "source": 241,
              "target": 334
            },
            {
              "source": 243,
              "target": 334
            },
            {
              "source": 244,
              "target": 334
            },
            {
              "source": 250,
              "target": 334
            },
            {
              "source": 252,
              "target": 334
            },
            {
              "source": 253,
              "target": 334
            },
            {
              "source": 254,
              "target": 334
            },
            {
              "source": 258,
              "target": 334
            },
            {
              "source": 260,
              "target": 334
            },
            {
              "source": 261,
              "target": 334
            },
            {
              "source": 263,
              "target": 334
            },
            {
              "source": 264,
              "target": 334
            },
            {
              "source": 267,
              "target": 334
            },
            {
              "source": 268,
              "target": 334
            },
            {
              "source": 273,
              "target": 334
            },
            {
              "source": 275,
              "target": 334
            },
            {
              "source": 276,
              "target": 334
            },
            {
              "source": 278,
              "target": 334
            },
            {
              "source": 280,
              "target": 334
            },
            {
              "source": 281,
              "target": 334
            },
            {
              "source": 285,
              "target": 334
            },
            {
              "source": 287,
              "target": 334
            },
            {
              "source": 297,
              "target": 334
            },
            {
              "source": 303,
              "target": 334
            },
            {
              "source": 305,
              "target": 334
            },
            {
              "source": 311,
              "target": 334
            },
            {
              "source": 315,
              "target": 334
            },
            {
              "source": 320,
              "target": 334
            },
            {
              "source": 324,
              "target": 334
            },
            {
              "source": 327,
              "target": 334
            },
            {
              "source": 329,
              "target": 334
            },
            {
              "source": 333,
              "target": 334
            },
            {
              "source": 19,
              "target": 335
            },
            {
              "source": 148,
              "target": 335
            },
            {
              "source": 242,
              "target": 335
            },
            {
              "source": 1,
              "target": 336
            },
            {
              "source": 3,
              "target": 336
            },
            {
              "source": 4,
              "target": 336
            },
            {
              "source": 5,
              "target": 336
            },
            {
              "source": 6,
              "target": 336
            },
            {
              "source": 9,
              "target": 336
            },
            {
              "source": 10,
              "target": 336
            },
            {
              "source": 11,
              "target": 336
            },
            {
              "source": 12,
              "target": 336
            },
            {
              "source": 14,
              "target": 336
            },
            {
              "source": 15,
              "target": 336
            },
            {
              "source": 16,
              "target": 336
            },
            {
              "source": 17,
              "target": 336
            },
            {
              "source": 20,
              "target": 336
            },
            {
              "source": 21,
              "target": 336
            },
            {
              "source": 22,
              "target": 336
            },
            {
              "source": 24,
              "target": 336
            },
            {
              "source": 25,
              "target": 336
            },
            {
              "source": 27,
              "target": 336
            },
            {
              "source": 28,
              "target": 336
            },
            {
              "source": 29,
              "target": 336
            },
            {
              "source": 30,
              "target": 336
            },
            {
              "source": 31,
              "target": 336
            },
            {
              "source": 33,
              "target": 336
            },
            {
              "source": 34,
              "target": 336
            },
            {
              "source": 35,
              "target": 336
            },
            {
              "source": 36,
              "target": 336
            },
            {
              "source": 40,
              "target": 336
            },
            {
              "source": 41,
              "target": 336
            },
            {
              "source": 42,
              "target": 336
            },
            {
              "source": 44,
              "target": 336
            },
            {
              "source": 45,
              "target": 336
            },
            {
              "source": 46,
              "target": 336
            },
            {
              "source": 48,
              "target": 336
            },
            {
              "source": 49,
              "target": 336
            },
            {
              "source": 51,
              "target": 336
            },
            {
              "source": 53,
              "target": 336
            },
            {
              "source": 54,
              "target": 336
            },
            {
              "source": 55,
              "target": 336
            },
            {
              "source": 57,
              "target": 336
            },
            {
              "source": 58,
              "target": 336
            },
            {
              "source": 60,
              "target": 336
            },
            {
              "source": 61,
              "target": 336
            },
            {
              "source": 64,
              "target": 336
            },
            {
              "source": 65,
              "target": 336
            },
            {
              "source": 66,
              "target": 336
            },
            {
              "source": 71,
              "target": 336
            },
            {
              "source": 73,
              "target": 336
            },
            {
              "source": 74,
              "target": 336
            },
            {
              "source": 75,
              "target": 336
            },
            {
              "source": 77,
              "target": 336
            },
            {
              "source": 79,
              "target": 336
            },
            {
              "source": 80,
              "target": 336
            },
            {
              "source": 81,
              "target": 336
            },
            {
              "source": 82,
              "target": 336
            },
            {
              "source": 85,
              "target": 336
            },
            {
              "source": 86,
              "target": 336
            },
            {
              "source": 87,
              "target": 336
            },
            {
              "source": 88,
              "target": 336
            },
            {
              "source": 90,
              "target": 336
            },
            {
              "source": 92,
              "target": 336
            },
            {
              "source": 93,
              "target": 336
            },
            {
              "source": 95,
              "target": 336
            },
            {
              "source": 97,
              "target": 336
            },
            {
              "source": 99,
              "target": 336
            },
            {
              "source": 104,
              "target": 336
            },
            {
              "source": 105,
              "target": 336
            },
            {
              "source": 107,
              "target": 336
            },
            {
              "source": 108,
              "target": 336
            },
            {
              "source": 110,
              "target": 336
            },
            {
              "source": 111,
              "target": 336
            },
            {
              "source": 112,
              "target": 336
            },
            {
              "source": 113,
              "target": 336
            },
            {
              "source": 115,
              "target": 336
            },
            {
              "source": 119,
              "target": 336
            },
            {
              "source": 121,
              "target": 336
            },
            {
              "source": 122,
              "target": 336
            },
            {
              "source": 123,
              "target": 336
            },
            {
              "source": 124,
              "target": 336
            },
            {
              "source": 126,
              "target": 336
            },
            {
              "source": 127,
              "target": 336
            },
            {
              "source": 128,
              "target": 336
            },
            {
              "source": 130,
              "target": 336
            },
            {
              "source": 131,
              "target": 336
            },
            {
              "source": 132,
              "target": 336
            },
            {
              "source": 133,
              "target": 336
            },
            {
              "source": 134,
              "target": 336
            },
            {
              "source": 135,
              "target": 336
            },
            {
              "source": 136,
              "target": 336
            },
            {
              "source": 137,
              "target": 336
            },
            {
              "source": 140,
              "target": 336
            },
            {
              "source": 144,
              "target": 336
            },
            {
              "source": 145,
              "target": 336
            },
            {
              "source": 146,
              "target": 336
            },
            {
              "source": 147,
              "target": 336
            },
            {
              "source": 148,
              "target": 336
            },
            {
              "source": 149,
              "target": 336
            },
            {
              "source": 150,
              "target": 336
            },
            {
              "source": 151,
              "target": 336
            },
            {
              "source": 153,
              "target": 336
            },
            {
              "source": 155,
              "target": 336
            },
            {
              "source": 156,
              "target": 336
            },
            {
              "source": 157,
              "target": 336
            },
            {
              "source": 158,
              "target": 336
            },
            {
              "source": 159,
              "target": 336
            },
            {
              "source": 160,
              "target": 336
            },
            {
              "source": 162,
              "target": 336
            },
            {
              "source": 163,
              "target": 336
            },
            {
              "source": 165,
              "target": 336
            },
            {
              "source": 166,
              "target": 336
            },
            {
              "source": 167,
              "target": 336
            },
            {
              "source": 168,
              "target": 336
            },
            {
              "source": 169,
              "target": 336
            },
            {
              "source": 170,
              "target": 336
            },
            {
              "source": 171,
              "target": 336
            },
            {
              "source": 172,
              "target": 336
            },
            {
              "source": 173,
              "target": 336
            },
            {
              "source": 174,
              "target": 336
            },
            {
              "source": 175,
              "target": 336
            },
            {
              "source": 176,
              "target": 336
            },
            {
              "source": 178,
              "target": 336
            },
            {
              "source": 179,
              "target": 336
            },
            {
              "source": 181,
              "target": 336
            },
            {
              "source": 182,
              "target": 336
            },
            {
              "source": 183,
              "target": 336
            },
            {
              "source": 184,
              "target": 336
            },
            {
              "source": 185,
              "target": 336
            },
            {
              "source": 186,
              "target": 336
            },
            {
              "source": 187,
              "target": 336
            },
            {
              "source": 188,
              "target": 336
            },
            {
              "source": 189,
              "target": 336
            },
            {
              "source": 191,
              "target": 336
            },
            {
              "source": 192,
              "target": 336
            },
            {
              "source": 193,
              "target": 336
            },
            {
              "source": 196,
              "target": 336
            },
            {
              "source": 197,
              "target": 336
            },
            {
              "source": 198,
              "target": 336
            },
            {
              "source": 199,
              "target": 336
            },
            {
              "source": 201,
              "target": 336
            },
            {
              "source": 202,
              "target": 336
            },
            {
              "source": 204,
              "target": 336
            },
            {
              "source": 205,
              "target": 336
            },
            {
              "source": 206,
              "target": 336
            },
            {
              "source": 207,
              "target": 336
            },
            {
              "source": 208,
              "target": 336
            },
            {
              "source": 209,
              "target": 336
            },
            {
              "source": 210,
              "target": 336
            },
            {
              "source": 211,
              "target": 336
            },
            {
              "source": 213,
              "target": 336
            },
            {
              "source": 216,
              "target": 336
            },
            {
              "source": 217,
              "target": 336
            },
            {
              "source": 218,
              "target": 336
            },
            {
              "source": 219,
              "target": 336
            },
            {
              "source": 220,
              "target": 336
            },
            {
              "source": 222,
              "target": 336
            },
            {
              "source": 225,
              "target": 336
            },
            {
              "source": 226,
              "target": 336
            },
            {
              "source": 227,
              "target": 336
            },
            {
              "source": 228,
              "target": 336
            },
            {
              "source": 229,
              "target": 336
            },
            {
              "source": 230,
              "target": 336
            },
            {
              "source": 232,
              "target": 336
            },
            {
              "source": 234,
              "target": 336
            },
            {
              "source": 235,
              "target": 336
            },
            {
              "source": 237,
              "target": 336
            },
            {
              "source": 238,
              "target": 336
            },
            {
              "source": 239,
              "target": 336
            },
            {
              "source": 240,
              "target": 336
            },
            {
              "source": 241,
              "target": 336
            },
            {
              "source": 243,
              "target": 336
            },
            {
              "source": 245,
              "target": 336
            },
            {
              "source": 246,
              "target": 336
            },
            {
              "source": 247,
              "target": 336
            },
            {
              "source": 248,
              "target": 336
            },
            {
              "source": 249,
              "target": 336
            },
            {
              "source": 251,
              "target": 336
            },
            {
              "source": 255,
              "target": 336
            },
            {
              "source": 256,
              "target": 336
            },
            {
              "source": 257,
              "target": 336
            },
            {
              "source": 260,
              "target": 336
            },
            {
              "source": 262,
              "target": 336
            },
            {
              "source": 265,
              "target": 336
            },
            {
              "source": 266,
              "target": 336
            },
            {
              "source": 269,
              "target": 336
            },
            {
              "source": 270,
              "target": 336
            },
            {
              "source": 271,
              "target": 336
            },
            {
              "source": 272,
              "target": 336
            },
            {
              "source": 274,
              "target": 336
            },
            {
              "source": 276,
              "target": 336
            },
            {
              "source": 277,
              "target": 336
            },
            {
              "source": 279,
              "target": 336
            },
            {
              "source": 282,
              "target": 336
            },
            {
              "source": 284,
              "target": 336
            },
            {
              "source": 286,
              "target": 336
            },
            {
              "source": 288,
              "target": 336
            },
            {
              "source": 289,
              "target": 336
            },
            {
              "source": 290,
              "target": 336
            },
            {
              "source": 291,
              "target": 336
            },
            {
              "source": 292,
              "target": 336
            },
            {
              "source": 293,
              "target": 336
            },
            {
              "source": 294,
              "target": 336
            },
            {
              "source": 295,
              "target": 336
            },
            {
              "source": 296,
              "target": 336
            },
            {
              "source": 298,
              "target": 336
            },
            {
              "source": 299,
              "target": 336
            },
            {
              "source": 300,
              "target": 336
            },
            {
              "source": 302,
              "target": 336
            },
            {
              "source": 305,
              "target": 336
            },
            {
              "source": 306,
              "target": 336
            },
            {
              "source": 307,
              "target": 336
            },
            {
              "source": 309,
              "target": 336
            },
            {
              "source": 312,
              "target": 336
            },
            {
              "source": 313,
              "target": 336
            },
            {
              "source": 316,
              "target": 336
            },
            {
              "source": 319,
              "target": 336
            },
            {
              "source": 320,
              "target": 336
            },
            {
              "source": 321,
              "target": 336
            },
            {
              "source": 322,
              "target": 336
            },
            {
              "source": 323,
              "target": 336
            },
            {
              "source": 324,
              "target": 336
            },
            {
              "source": 326,
              "target": 336
            },
            {
              "source": 328,
              "target": 336
            },
            {
              "source": 329,
              "target": 336
            },
            {
              "source": 330,
              "target": 336
            },
            {
              "source": 331,
              "target": 336
            },
            {
              "source": 332,
              "target": 336
            },
            {
              "source": 13,
              "target": 337
            },
            {
              "source": 94,
              "target": 337
            },
            {
              "source": 190,
              "target": 337
            },
            {
              "source": 259,
              "target": 337
            },
            {
              "source": 301,
              "target": 337
            },
            {
              "source": 310,
              "target": 337
            },
            {
              "source": 318,
              "target": 337
            },
            {
              "source": 5,
              "target": 338
            },
            {
              "source": 16,
              "target": 338
            },
            {
              "source": 18,
              "target": 338
            },
            {
              "source": 22,
              "target": 338
            },
            {
              "source": 39,
              "target": 338
            },
            {
              "source": 47,
              "target": 338
            },
            {
              "source": 50,
              "target": 338
            },
            {
              "source": 52,
              "target": 338
            },
            {
              "source": 67,
              "target": 338
            },
            {
              "source": 96,
              "target": 338
            },
            {
              "source": 104,
              "target": 338
            },
            {
              "source": 106,
              "target": 338
            },
            {
              "source": 111,
              "target": 338
            },
            {
              "source": 120,
              "target": 338
            },
            {
              "source": 125,
              "target": 338
            },
            {
              "source": 129,
              "target": 338
            },
            {
              "source": 136,
              "target": 338
            },
            {
              "source": 138,
              "target": 338
            },
            {
              "source": 142,
              "target": 338
            },
            {
              "source": 148,
              "target": 338
            },
            {
              "source": 150,
              "target": 338
            },
            {
              "source": 152,
              "target": 338
            },
            {
              "source": 161,
              "target": 338
            },
            {
              "source": 167,
              "target": 338
            },
            {
              "source": 175,
              "target": 338
            },
            {
              "source": 177,
              "target": 338
            },
            {
              "source": 188,
              "target": 338
            },
            {
              "source": 194,
              "target": 338
            },
            {
              "source": 196,
              "target": 338
            },
            {
              "source": 212,
              "target": 338
            },
            {
              "source": 214,
              "target": 338
            },
            {
              "source": 215,
              "target": 338
            },
            {
              "source": 219,
              "target": 338
            },
            {
              "source": 223,
              "target": 338
            },
            {
              "source": 224,
              "target": 338
            },
            {
              "source": 231,
              "target": 338
            },
            {
              "source": 236,
              "target": 338
            },
            {
              "source": 248,
              "target": 338
            },
            {
              "source": 257,
              "target": 338
            },
            {
              "source": 283,
              "target": 338
            },
            {
              "source": 287,
              "target": 338
            },
            {
              "source": 290,
              "target": 338
            },
            {
              "source": 291,
              "target": 338
            },
            {
              "source": 294,
              "target": 338
            },
            {
              "source": 296,
              "target": 338
            },
            {
              "source": 304,
              "target": 338
            },
            {
              "source": 308,
              "target": 338
            },
            {
              "source": 314,
              "target": 338
            },
            {
              "source": 317,
              "target": 338
            },
            {
              "source": 321,
              "target": 338
            },
            {
              "source": 325,
              "target": 338
            }
          ],
          "vertices": [
            {
              "index": 1,
              "snp_status": 1,
              "name": "case 1",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 1
            },
            {
              "index": 2,
              "snp_status": 0,
              "name": "case 2",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 2
            },
            {
              "index": 3,
              "snp_status": 1,
              "name": "case 3",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 3
            },
            {
              "index": 4,
              "snp_status": 0,
              "name": "case 4",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 4
            },
            {
              "index": 5,
              "snp_status": 0,
              "name": "case 5",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 5
            },
            {
              "index": 6,
              "snp_status": 0,
              "name": "case 6",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 6
            },
            {
              "index": 7,
              "snp_status": 0,
              "name": "case 7",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 7
            },
            {
              "index": 8,
              "snp_status": 0,
              "name": "case 8",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 8
            },
            {
              "index": 9,
              "snp_status": 1,
              "name": "case 9",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 9
            },
            {
              "index": 10,
              "snp_status": 1,
              "name": "case 10",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 10
            },
            {
              "index": 11,
              "snp_status": 1,
              "name": "case 11",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 11
            },
            {
              "index": 12,
              "snp_status": 1,
              "name": "case 12",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 12
            },
            {
              "index": 13,
              "snp_status": 0,
              "name": "case 13",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 13
            },
            {
              "index": 14,
              "snp_status": 0,
              "name": "case 14",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 14
            },
            {
              "index": 15,
              "snp_status": 0,
              "name": "case 15",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 15
            },
            {
              "index": 16,
              "snp_status": 0,
              "name": "case 16",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 16
            },
            {
              "index": 17,
              "snp_status": 0,
              "name": "case 17",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 17
            },
            {
              "index": 18,
              "snp_status": 0,
              "name": "case 18",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 18
            },
            {
              "index": 19,
              "snp_status": 1,
              "name": "case 19",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 19
            },
            {
              "index": 20,
              "snp_status": 0,
              "name": "case 20",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 20
            },
            {
              "index": 21,
              "snp_status": 0,
              "name": "case 21",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 21
            },
            {
              "index": 22,
              "snp_status": 0,
              "name": "case 22",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 22
            },
            {
              "index": 23,
              "snp_status": 1,
              "name": "case 23",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 23
            },
            {
              "index": 24,
              "snp_status": 0,
              "name": "case 24",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 24
            },
            {
              "index": 25,
              "snp_status": 0,
              "name": "case 25",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 25
            },
            {
              "index": 26,
              "snp_status": 0,
              "name": "case 26",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 26
            },
            {
              "index": 27,
              "snp_status": 0,
              "name": "case 27",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 27
            },
            {
              "index": 28,
              "snp_status": 0,
              "name": "case 28",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 28
            },
            {
              "index": 29,
              "snp_status": 0,
              "name": "case 29",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 29
            },
            {
              "index": 30,
              "snp_status": 0,
              "name": "case 30",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 30
            },
            {
              "index": 31,
              "snp_status": 1,
              "name": "case 31",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 31
            },
            {
              "index": 32,
              "snp_status": 0,
              "name": "case 32",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 32
            },
            {
              "index": 33,
              "snp_status": 0,
              "name": "case 33",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 33
            },
            {
              "index": 34,
              "snp_status": 1,
              "name": "case 34",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 34
            },
            {
              "index": 35,
              "snp_status": 0,
              "name": "case 35",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 35
            },
            {
              "index": 36,
              "snp_status": 0,
              "name": "case 36",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 36
            },
            {
              "index": 37,
              "snp_status": 0,
              "name": "case 37",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 37
            },
            {
              "index": 38,
              "snp_status": 0,
              "name": "case 38",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 38
            },
            {
              "index": 39,
              "snp_status": 0,
              "name": "case 39",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 39
            },
            {
              "index": 40,
              "snp_status": 0,
              "name": "case 40",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 40
            },
            {
              "index": 41,
              "snp_status": 0,
              "name": "case 41",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 41
            },
            {
              "index": 42,
              "snp_status": 0,
              "name": "case 42",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 42
            },
            {
              "index": 43,
              "snp_status": 0,
              "name": "case 43",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 43
            },
            {
              "index": 44,
              "snp_status": 0,
              "name": "case 44",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 44
            },
            {
              "index": 45,
              "snp_status": 0,
              "name": "case 45",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 45
            },
            {
              "index": 46,
              "snp_status": 0,
              "name": "case 46",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 46
            },
            {
              "index": 47,
              "snp_status": 0,
              "name": "case 47",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 47
            },
            {
              "index": 48,
              "snp_status": 0,
              "name": "case 48",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 48
            },
            {
              "index": 49,
              "snp_status": 0,
              "name": "case 49",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 49
            },
            {
              "index": 50,
              "snp_status": 0,
              "name": "case 50",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 50
            },
            {
              "index": 51,
              "snp_status": 0,
              "name": "case 51",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 51
            },
            {
              "index": 52,
              "snp_status": 0,
              "name": "case 52",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 52
            },
            {
              "index": 53,
              "snp_status": 0,
              "name": "case 53",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 53
            },
            {
              "index": 54,
              "snp_status": 0,
              "name": "case 54",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 54
            },
            {
              "index": 55,
              "snp_status": 0,
              "name": "case 55",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 55
            },
            {
              "index": 56,
              "snp_status": 1,
              "name": "case 56",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 56
            },
            {
              "index": 57,
              "snp_status": 0,
              "name": "case 57",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 57
            },
            {
              "index": 58,
              "snp_status": 1,
              "name": "case 58",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 58
            },
            {
              "index": 59,
              "snp_status": 0,
              "name": "case 59",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 59
            },
            {
              "index": 60,
              "snp_status": 0,
              "name": "case 60",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 60
            },
            {
              "index": 61,
              "snp_status": 0,
              "name": "case 61",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 61
            },
            {
              "index": 62,
              "snp_status": 0,
              "name": "case 62",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 62
            },
            {
              "index": 63,
              "snp_status": 0,
              "name": "case 63",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 63
            },
            {
              "index": 64,
              "snp_status": 0,
              "name": "case 64",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 64
            },
            {
              "index": 65,
              "snp_status": 0,
              "name": "case 65",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 65
            },
            {
              "index": 66,
              "snp_status": 0,
              "name": "case 66",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 66
            },
            {
              "index": 67,
              "snp_status": 1,
              "name": "case 67",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 67
            },
            {
              "index": 68,
              "snp_status": 0,
              "name": "case 68",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 68
            },
            {
              "index": 69,
              "snp_status": 0,
              "name": "case 69",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 69
            },
            {
              "index": 70,
              "snp_status": 0,
              "name": "case 70",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 70
            },
            {
              "index": 71,
              "snp_status": 0,
              "name": "case 71",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 71
            },
            {
              "index": 72,
              "snp_status": 0,
              "name": "case 72",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 72
            },
            {
              "index": 73,
              "snp_status": 1,
              "name": "case 73",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 73
            },
            {
              "index": 74,
              "snp_status": 0,
              "name": "case 74",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 74
            },
            {
              "index": 75,
              "snp_status": 0,
              "name": "case 75",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 75
            },
            {
              "index": 76,
              "snp_status": 0,
              "name": "case 76",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 76
            },
            {
              "index": 77,
              "snp_status": 0,
              "name": "case 77",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 77
            },
            {
              "index": 78,
              "snp_status": 0,
              "name": "case 78",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 78
            },
            {
              "index": 79,
              "snp_status": 0,
              "name": "case 79",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 79
            },
            {
              "index": 80,
              "snp_status": 1,
              "name": "case 80",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 80
            },
            {
              "index": 81,
              "snp_status": 0,
              "name": "case 81",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 81
            },
            {
              "index": 82,
              "snp_status": 0,
              "name": "case 82",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 82
            },
            {
              "index": 83,
              "snp_status": 0,
              "name": "case 83",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 83
            },
            {
              "index": 84,
              "snp_status": 0,
              "name": "case 84",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 84
            },
            {
              "index": 85,
              "snp_status": 0,
              "name": "case 85",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 85
            },
            {
              "index": 86,
              "snp_status": 1,
              "name": "case 86",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 86
            },
            {
              "index": 87,
              "snp_status": 0,
              "name": "case 87",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 87
            },
            {
              "index": 88,
              "snp_status": 0,
              "name": "case 88",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 88
            },
            {
              "index": 89,
              "snp_status": 0,
              "name": "case 89",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 89
            },
            {
              "index": 90,
              "snp_status": 0,
              "name": "case 90",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 90
            },
            {
              "index": 91,
              "snp_status": 0,
              "name": "case 91",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 91
            },
            {
              "index": 92,
              "snp_status": 0,
              "name": "case 92",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 92
            },
            {
              "index": 93,
              "snp_status": 0,
              "name": "case 93",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 93
            },
            {
              "index": 94,
              "snp_status": 1,
              "name": "case 94",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 94
            },
            {
              "index": 95,
              "snp_status": 1,
              "name": "case 95",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 95
            },
            {
              "index": 96,
              "snp_status": 1,
              "name": "case 96",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 96
            },
            {
              "index": 97,
              "snp_status": 0,
              "name": "case 97",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 97
            },
            {
              "index": 98,
              "snp_status": 1,
              "name": "case 98",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 98
            },
            {
              "index": 99,
              "snp_status": 0,
              "name": "case 99",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 99
            },
            {
              "index": 100,
              "snp_status": 0,
              "name": "case 100",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 100
            },
            {
              "index": 101,
              "snp_status": 0,
              "name": "case 101",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 101
            },
            {
              "index": 102,
              "snp_status": 0,
              "name": "case 102",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 102
            },
            {
              "index": 103,
              "snp_status": 0,
              "name": "case 103",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 103
            },
            {
              "index": 104,
              "snp_status": 0,
              "name": "case 104",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 104
            },
            {
              "index": 105,
              "snp_status": 0,
              "name": "case 105",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 105
            },
            {
              "index": 106,
              "snp_status": 0,
              "name": "case 106",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 106
            },
            {
              "index": 107,
              "snp_status": 0,
              "name": "case 107",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 107
            },
            {
              "index": 108,
              "snp_status": 0,
              "name": "case 108",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 108
            },
            {
              "index": 109,
              "snp_status": 0,
              "name": "case 109",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 109
            },
            {
              "index": 110,
              "snp_status": 1,
              "name": "case 110",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 110
            },
            {
              "index": 111,
              "snp_status": 1,
              "name": "case 111",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 111
            },
            {
              "index": 112,
              "snp_status": 0,
              "name": "case 112",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 112
            },
            {
              "index": 113,
              "snp_status": 1,
              "name": "case 113",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 113
            },
            {
              "index": 114,
              "snp_status": 1,
              "name": "case 114",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 114
            },
            {
              "index": 115,
              "snp_status": 0,
              "name": "case 115",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 115
            },
            {
              "index": 116,
              "snp_status": 0,
              "name": "case 116",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 116
            },
            {
              "index": 117,
              "snp_status": 0,
              "name": "case 117",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 117
            },
            {
              "index": 118,
              "snp_status": 0,
              "name": "case 118",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 118
            },
            {
              "index": 119,
              "snp_status": 0,
              "name": "case 119",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 119
            },
            {
              "index": 120,
              "snp_status": 0,
              "name": "case 120",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 120
            },
            {
              "index": 121,
              "snp_status": 0,
              "name": "case 121",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 121
            },
            {
              "index": 122,
              "snp_status": 0,
              "name": "case 122",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 122
            },
            {
              "index": 123,
              "snp_status": 0,
              "name": "case 123",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 123
            },
            {
              "index": 124,
              "snp_status": 1,
              "name": "case 124",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 124
            },
            {
              "index": 125,
              "snp_status": 0,
              "name": "case 125",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 125
            },
            {
              "index": 126,
              "snp_status": 0,
              "name": "case 126",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 126
            },
            {
              "index": 127,
              "snp_status": 0,
              "name": "case 127",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 127
            },
            {
              "index": 128,
              "snp_status": 1,
              "name": "case 128",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 128
            },
            {
              "index": 129,
              "snp_status": 0,
              "name": "case 129",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 129
            },
            {
              "index": 130,
              "snp_status": 0,
              "name": "case 130",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 130
            },
            {
              "index": 131,
              "snp_status": 0,
              "name": "case 131",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 131
            },
            {
              "index": 132,
              "snp_status": 1,
              "name": "case 132",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 132
            },
            {
              "index": 133,
              "snp_status": 0,
              "name": "case 133",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 133
            },
            {
              "index": 134,
              "snp_status": 0,
              "name": "case 134",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 134
            },
            {
              "index": 135,
              "snp_status": 0,
              "name": "case 135",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 135
            },
            {
              "index": 136,
              "snp_status": 0,
              "name": "case 136",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 136
            },
            {
              "index": 137,
              "snp_status": 0,
              "name": "case 137",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 137
            },
            {
              "index": 138,
              "snp_status": 1,
              "name": "case 138",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 138
            },
            {
              "index": 139,
              "snp_status": 0,
              "name": "case 139",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 139
            },
            {
              "index": 140,
              "snp_status": 0,
              "name": "case 140",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 140
            },
            {
              "index": 141,
              "snp_status": 0,
              "name": "case 141",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 141
            },
            {
              "index": 142,
              "snp_status": 0,
              "name": "case 142",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 142
            },
            {
              "index": 143,
              "snp_status": 0,
              "name": "case 143",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 143
            },
            {
              "index": 144,
              "snp_status": 1,
              "name": "case 144",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 144
            },
            {
              "index": 145,
              "snp_status": 0,
              "name": "case 145",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 145
            },
            {
              "index": 146,
              "snp_status": 0,
              "name": "case 146",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 146
            },
            {
              "index": 147,
              "snp_status": 0,
              "name": "case 147",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 147
            },
            {
              "index": 148,
              "snp_status": 0,
              "name": "case 148",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 148
            },
            {
              "index": 149,
              "snp_status": 0,
              "name": "case 149",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 149
            },
            {
              "index": 150,
              "snp_status": 0,
              "name": "case 150",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 150
            },
            {
              "index": 151,
              "snp_status": 1,
              "name": "case 151",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 151
            },
            {
              "index": 152,
              "snp_status": 0,
              "name": "case 152",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 152
            },
            {
              "index": 153,
              "snp_status": 0,
              "name": "case 153",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 153
            },
            {
              "index": 154,
              "snp_status": 0,
              "name": "case 154",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 154
            },
            {
              "index": 155,
              "snp_status": 0,
              "name": "case 155",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 155
            },
            {
              "index": 156,
              "snp_status": 0,
              "name": "case 156",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 156
            },
            {
              "index": 157,
              "snp_status": 0,
              "name": "case 157",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 157
            },
            {
              "index": 158,
              "snp_status": 0,
              "name": "case 158",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 158
            },
            {
              "index": 159,
              "snp_status": 0,
              "name": "case 159",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 159
            },
            {
              "index": 160,
              "snp_status": 0,
              "name": "case 160",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 160
            },
            {
              "index": 161,
              "snp_status": 0,
              "name": "case 161",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 161
            },
            {
              "index": 162,
              "snp_status": 1,
              "name": "case 162",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 162
            },
            {
              "index": 163,
              "snp_status": 0,
              "name": "case 163",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 163
            },
            {
              "index": 164,
              "snp_status": 0,
              "name": "case 164",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 164
            },
            {
              "index": 165,
              "snp_status": 0,
              "name": "case 165",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 165
            },
            {
              "index": 166,
              "snp_status": 0,
              "name": "case 166",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 166
            },
            {
              "index": 167,
              "snp_status": 0,
              "name": "case 167",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 167
            },
            {
              "index": 168,
              "snp_status": 0,
              "name": "case 168",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 168
            },
            {
              "index": 169,
              "snp_status": 0,
              "name": "case 169",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 169
            },
            {
              "index": 170,
              "snp_status": 0,
              "name": "case 170",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 170
            },
            {
              "index": 171,
              "snp_status": 0,
              "name": "case 171",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 171
            },
            {
              "index": 172,
              "snp_status": 0,
              "name": "case 172",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 172
            },
            {
              "index": 173,
              "snp_status": 0,
              "name": "case 173",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 173
            },
            {
              "index": 174,
              "snp_status": 0,
              "name": "case 174",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 174
            },
            {
              "index": 175,
              "snp_status": 0,
              "name": "case 175",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 175
            },
            {
              "index": 176,
              "snp_status": 0,
              "name": "case 176",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 176
            },
            {
              "index": 177,
              "snp_status": 0,
              "name": "case 177",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 177
            },
            {
              "index": 178,
              "snp_status": 0,
              "name": "case 178",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 178
            },
            {
              "index": 179,
              "snp_status": 0,
              "name": "case 179",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 179
            },
            {
              "index": 180,
              "snp_status": 0,
              "name": "case 180",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 180
            },
            {
              "index": 181,
              "snp_status": 0,
              "name": "case 181",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 181
            },
            {
              "index": 182,
              "snp_status": 1,
              "name": "case 182",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 182
            },
            {
              "index": 183,
              "snp_status": 1,
              "name": "case 183",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 183
            },
            {
              "index": 184,
              "snp_status": 0,
              "name": "case 184",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 184
            },
            {
              "index": 185,
              "snp_status": 0,
              "name": "case 185",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 185
            },
            {
              "index": 186,
              "snp_status": 0,
              "name": "case 186",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 186
            },
            {
              "index": 187,
              "snp_status": 0,
              "name": "case 187",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 187
            },
            {
              "index": 188,
              "snp_status": 0,
              "name": "case 188",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 188
            },
            {
              "index": 189,
              "snp_status": 0,
              "name": "case 189",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 189
            },
            {
              "index": 190,
              "snp_status": 0,
              "name": "case 190",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 190
            },
            {
              "index": 191,
              "snp_status": 0,
              "name": "case 191",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 191
            },
            {
              "index": 192,
              "snp_status": 0,
              "name": "case 192",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 192
            },
            {
              "index": 193,
              "snp_status": 0,
              "name": "case 193",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 193
            },
            {
              "index": 194,
              "snp_status": 0,
              "name": "case 194",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 194
            },
            {
              "index": 195,
              "snp_status": 0,
              "name": "case 195",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 195
            },
            {
              "index": 196,
              "snp_status": 0,
              "name": "case 196",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 196
            },
            {
              "index": 197,
              "snp_status": 1,
              "name": "case 197",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 197
            },
            {
              "index": 198,
              "snp_status": 0,
              "name": "case 198",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 198
            },
            {
              "index": 199,
              "snp_status": 0,
              "name": "case 199",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 199
            },
            {
              "index": 200,
              "snp_status": 0,
              "name": "case 200",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 200
            },
            {
              "index": 201,
              "snp_status": 1,
              "name": "case 201",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 201
            },
            {
              "index": 202,
              "snp_status": 0,
              "name": "case 202",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 202
            },
            {
              "index": 203,
              "snp_status": 0,
              "name": "case 203",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 203
            },
            {
              "index": 204,
              "snp_status": 0,
              "name": "case 204",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 204
            },
            {
              "index": 205,
              "snp_status": 0,
              "name": "case 205",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 205
            },
            {
              "index": 206,
              "snp_status": 0,
              "name": "case 206",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 206
            },
            {
              "index": 207,
              "snp_status": 0,
              "name": "case 207",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 207
            },
            {
              "index": 208,
              "snp_status": 1,
              "name": "case 208",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 208
            },
            {
              "index": 209,
              "snp_status": 0,
              "name": "case 209",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 209
            },
            {
              "index": 210,
              "snp_status": 0,
              "name": "case 210",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 210
            },
            {
              "index": 211,
              "snp_status": 0,
              "name": "case 211",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 211
            },
            {
              "index": 212,
              "snp_status": 1,
              "name": "case 212",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 212
            },
            {
              "index": 213,
              "snp_status": 1,
              "name": "case 213",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 213
            },
            {
              "index": 214,
              "snp_status": 1,
              "name": "case 214",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 214
            },
            {
              "index": 215,
              "snp_status": 1,
              "name": "case 215",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 215
            },
            {
              "index": 216,
              "snp_status": 0,
              "name": "case 216",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 216
            },
            {
              "index": 217,
              "snp_status": 0,
              "name": "case 217",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 217
            },
            {
              "index": 218,
              "snp_status": 0,
              "name": "case 218",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 218
            },
            {
              "index": 219,
              "snp_status": 1,
              "name": "case 219",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 219
            },
            {
              "index": 220,
              "snp_status": 0,
              "name": "case 220",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 220
            },
            {
              "index": 221,
              "snp_status": 0,
              "name": "case 221",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 221
            },
            {
              "index": 222,
              "snp_status": 0,
              "name": "case 222",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 222
            },
            {
              "index": 223,
              "snp_status": 0,
              "name": "case 223",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 223
            },
            {
              "index": 224,
              "snp_status": 0,
              "name": "case 224",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 224
            },
            {
              "index": 225,
              "snp_status": 1,
              "name": "case 225",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 225
            },
            {
              "index": 226,
              "snp_status": 0,
              "name": "case 226",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 226
            },
            {
              "index": 227,
              "snp_status": 0,
              "name": "case 227",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 227
            },
            {
              "index": 228,
              "snp_status": 0,
              "name": "case 228",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 228
            },
            {
              "index": 229,
              "snp_status": 0,
              "name": "case 229",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 229
            },
            {
              "index": 230,
              "snp_status": 1,
              "name": "case 230",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 230
            },
            {
              "index": 231,
              "snp_status": 0,
              "name": "case 231",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 231
            },
            {
              "index": 232,
              "snp_status": 0,
              "name": "case 232",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 232
            },
            {
              "index": 233,
              "snp_status": 0,
              "name": "case 233",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 233
            },
            {
              "index": 234,
              "snp_status": 0,
              "name": "case 234",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 234
            },
            {
              "index": 235,
              "snp_status": 0,
              "name": "case 235",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 235
            },
            {
              "index": 236,
              "snp_status": 0,
              "name": "case 236",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 236
            },
            {
              "index": 237,
              "snp_status": 0,
              "name": "case 237",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 237
            },
            {
              "index": 238,
              "snp_status": 0,
              "name": "case 238",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 238
            },
            {
              "index": 239,
              "snp_status": 0,
              "name": "case 239",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 239
            },
            {
              "index": 240,
              "snp_status": 0,
              "name": "case 240",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 240
            },
            {
              "index": 241,
              "snp_status": 0,
              "name": "case 241",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 241
            },
            {
              "index": 242,
              "snp_status": 1,
              "name": "case 242",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 242
            },
            {
              "index": 243,
              "snp_status": 1,
              "name": "case 243",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 243
            },
            {
              "index": 244,
              "snp_status": 0,
              "name": "case 244",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 244
            },
            {
              "index": 245,
              "snp_status": 0,
              "name": "case 245",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 245
            },
            {
              "index": 246,
              "snp_status": 0,
              "name": "case 246",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 246
            },
            {
              "index": 247,
              "snp_status": 0,
              "name": "case 247",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 247
            },
            {
              "index": 248,
              "snp_status": 1,
              "name": "case 248",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 248
            },
            {
              "index": 249,
              "snp_status": 0,
              "name": "case 249",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 249
            },
            {
              "index": 250,
              "snp_status": 0,
              "name": "case 250",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 250
            },
            {
              "index": 251,
              "snp_status": 0,
              "name": "case 251",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 251
            },
            {
              "index": 252,
              "snp_status": 1,
              "name": "case 252",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 252
            },
            {
              "index": 253,
              "snp_status": 1,
              "name": "case 253",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 253
            },
            {
              "index": 254,
              "snp_status": 1,
              "name": "case 254",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 254
            },
            {
              "index": 255,
              "snp_status": 0,
              "name": "case 255",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 255
            },
            {
              "index": 256,
              "snp_status": 0,
              "name": "case 256",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 256
            },
            {
              "index": 257,
              "snp_status": 1,
              "name": "case 257",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 257
            },
            {
              "index": 258,
              "snp_status": 0,
              "name": "case 258",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 258
            },
            {
              "index": 259,
              "snp_status": 0,
              "name": "case 259",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 259
            },
            {
              "index": 260,
              "snp_status": 0,
              "name": "case 260",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 260
            },
            {
              "index": 261,
              "snp_status": 0,
              "name": "case 261",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 261
            },
            {
              "index": 262,
              "snp_status": 1,
              "name": "case 262",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 262
            },
            {
              "index": 263,
              "snp_status": 0,
              "name": "case 263",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 263
            },
            {
              "index": 264,
              "snp_status": 0,
              "name": "case 264",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 264
            },
            {
              "index": 265,
              "snp_status": 0,
              "name": "case 265",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 265
            },
            {
              "index": 266,
              "snp_status": 0,
              "name": "case 266",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 266
            },
            {
              "index": 267,
              "snp_status": 0,
              "name": "case 267",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 267
            },
            {
              "index": 268,
              "snp_status": 0,
              "name": "case 268",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 268
            },
            {
              "index": 269,
              "snp_status": 0,
              "name": "case 269",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 269
            },
            {
              "index": 270,
              "snp_status": 0,
              "name": "case 270",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 270
            },
            {
              "index": 271,
              "snp_status": 0,
              "name": "case 271",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 271
            },
            {
              "index": 272,
              "snp_status": 0,
              "name": "case 272",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 272
            },
            {
              "index": 273,
              "snp_status": 1,
              "name": "case 273",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 273
            },
            {
              "index": 274,
              "snp_status": 1,
              "name": "case 274",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 274
            },
            {
              "index": 275,
              "snp_status": 0,
              "name": "case 275",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 275
            },
            {
              "index": 276,
              "snp_status": 0,
              "name": "case 276",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 276
            },
            {
              "index": 277,
              "snp_status": 0,
              "name": "case 277",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 277
            },
            {
              "index": 278,
              "snp_status": 0,
              "name": "case 278",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 278
            },
            {
              "index": 279,
              "snp_status": 0,
              "name": "case 279",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 279
            },
            {
              "index": 280,
              "snp_status": 1,
              "name": "case 280",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 280
            },
            {
              "index": 281,
              "snp_status": 0,
              "name": "case 281",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 281
            },
            {
              "index": 282,
              "snp_status": 0,
              "name": "case 282",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 282
            },
            {
              "index": 283,
              "snp_status": 0,
              "name": "case 283",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 283
            },
            {
              "index": 284,
              "snp_status": 0,
              "name": "case 284",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 284
            },
            {
              "index": 285,
              "snp_status": 0,
              "name": "case 285",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 285
            },
            {
              "index": 286,
              "snp_status": 0,
              "name": "case 286",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 286
            },
            {
              "index": 287,
              "snp_status": 0,
              "name": "case 287",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 287
            },
            {
              "index": 288,
              "snp_status": 0,
              "name": "case 288",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 288
            },
            {
              "index": 289,
              "snp_status": 0,
              "name": "case 289",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 289
            },
            {
              "index": 290,
              "snp_status": 0,
              "name": "case 290",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 290
            },
            {
              "index": 291,
              "snp_status": 0,
              "name": "case 291",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 291
            },
            {
              "index": 292,
              "snp_status": 0,
              "name": "case 292",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 292
            },
            {
              "index": 293,
              "snp_status": 0,
              "name": "case 293",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 293
            },
            {
              "index": 294,
              "snp_status": 0,
              "name": "case 294",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 294
            },
            {
              "index": 295,
              "snp_status": 0,
              "name": "case 295",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 295
            },
            {
              "index": 296,
              "snp_status": 1,
              "name": "case 296",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 296
            },
            {
              "index": 297,
              "snp_status": 1,
              "name": "case 297",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 297
            },
            {
              "index": 298,
              "snp_status": 0,
              "name": "case 298",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 298
            },
            {
              "index": 299,
              "snp_status": 1,
              "name": "case 299",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 299
            },
            {
              "index": 300,
              "snp_status": 0,
              "name": "case 300",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 300
            },
            {
              "index": 301,
              "snp_status": 0,
              "name": "case 301",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 301
            },
            {
              "index": 302,
              "snp_status": 0,
              "name": "case 302",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 302
            },
            {
              "index": 303,
              "snp_status": 0,
              "name": "case 303",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 303
            },
            {
              "index": 304,
              "snp_status": 0,
              "name": "case 304",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 304
            },
            {
              "index": 305,
              "snp_status": 0,
              "name": "case 305",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 305
            },
            {
              "index": 306,
              "snp_status": 0,
              "name": "case 306",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 306
            },
            {
              "index": 307,
              "snp_status": 1,
              "name": "case 307",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 307
            },
            {
              "index": 308,
              "snp_status": 0,
              "name": "case 308",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 308
            },
            {
              "index": 309,
              "snp_status": 0,
              "name": "case 309",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 309
            },
            {
              "index": 310,
              "snp_status": 0,
              "name": "case 310",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 310
            },
            {
              "index": 311,
              "snp_status": 1,
              "name": "case 311",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 311
            },
            {
              "index": 312,
              "snp_status": 0,
              "name": "case 312",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 312
            },
            {
              "index": 313,
              "snp_status": 0,
              "name": "case 313",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 313
            },
            {
              "index": 314,
              "snp_status": 1,
              "name": "case 314",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 314
            },
            {
              "index": 315,
              "snp_status": 1,
              "name": "case 315",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 315
            },
            {
              "index": 316,
              "snp_status": 0,
              "name": "case 316",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 316
            },
            {
              "index": 317,
              "snp_status": 0,
              "name": "case 317",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 317
            },
            {
              "index": 318,
              "snp_status": 0,
              "name": "case 318",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 318
            },
            {
              "index": 319,
              "snp_status": 0,
              "name": "case 319",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 319
            },
            {
              "index": 320,
              "snp_status": 0,
              "name": "case 320",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 320
            },
            {
              "index": 321,
              "snp_status": 0,
              "name": "case 321",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 321
            },
            {
              "index": 322,
              "snp_status": 0,
              "name": "case 322",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 322
            },
            {
              "index": 323,
              "snp_status": 0,
              "name": "case 323",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 323
            },
            {
              "index": 324,
              "snp_status": 0,
              "name": "case 324",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 324
            },
            {
              "index": 325,
              "snp_status": 0,
              "name": "case 325",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 325
            },
            {
              "index": 326,
              "snp_status": 0,
              "name": "case 326",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 326
            },
            {
              "index": 327,
              "snp_status": 0,
              "name": "case 327",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 327
            },
            {
              "index": 328,
              "snp_status": 0,
              "name": "case 328",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 328
            },
            {
              "index": 329,
              "snp_status": 0,
              "name": "case 329",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 329
            },
            {
              "index": 330,
              "snp_status": 1,
              "name": "case 330",
              "color": "#fcbba1",
              "size": 0.1,
              "selectable": false,
              "id": 330
            },
            {
              "index": 331,
              "snp_status": 0,
              "name": "case 331",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 331
            },
            {
              "index": 332,
              "snp_status": 0,
              "name": "case 332",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 332
            },
            {
              "index": 333,
              "snp_status": 0,
              "name": "case 333",
              "color": "#bdbdbd",
              "size": 0.1,
              "selectable": false,
              "id": 333
            },
            {
              "index": 334,
              "snp_status": 0,
              "name": "327.30",
              "description": "Sleep apnea",
              "OR": 0.9042,
              "p_val": 0.0002,
              "category": "neurological",
              "color": "#792f39",
              "inverted": false,
              "size": 0.3,
              "selectable": true,
              "id": 334
            },
            {
              "index": 335,
              "snp_status": 0,
              "name": "586.12",
              "description": "Vesicoureteral reflux",
              "OR": 1.2523,
              "p_val": 0.0039,
              "category": "genitourinary",
              "color": "#76d58b",
              "inverted": false,
              "size": 0.3,
              "selectable": true,
              "id": 335
            },
            {
              "index": 336,
              "snp_status": 0,
              "name": "627.00",
              "description": "Menopausal and postmenopausal disorders",
              "OR": 1.1349,
              "p_val": 0.0032,
              "category": "genitourinary",
              "color": "#76d58b",
              "inverted": false,
              "size": 0.3,
              "selectable": true,
              "id": 336
            },
            {
              "index": 337,
              "snp_status": 0,
              "name": "751.10",
              "description": "Congenital anomalies of genital organs",
              "OR": 0.5979,
              "p_val": 0.0034,
              "category": "congenital anomalies",
              "color": "#73d54a",
              "inverted": false,
              "size": 0.3,
              "selectable": true,
              "id": 337
            },
            {
              "index": 338,
              "snp_status": 0,
              "name": "761.00",
              "description": "Cervicalgia",
              "OR": 1.4565,
              "p_val": 0.003,
              "category": "symptoms",
              "color": "#98653a",
              "inverted": false,
              "size": 0.3,
              "selectable": true,
              "id": 338
            }
          ]
        },
        "type": "json",
        "container": "div",
        "options": {
          "just_snp": false,
          "msg_loc": "main_app-network_plot_main_dashboard-message_network_plot",
          "highlighted_pattern": {
            "type": "pattern",
            "codes": null
          },
          "viz_type": "free",
          "update_freq": 25
        },
        "script": "var d3Script = function(d3, r2d3, data, div, width, height, options, theme, console) {\nthis.d3 = d3;\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/helpers.js */\n// Helper functions for all visualizations\n\n// Turn number into a given number of decimal places\nfunction format_val(d, places = 3){\n  return d3.format(`.${places}`)(d);\n}\n\n// number formatters\nconst countFormat = d3.format(\",d\");\nconst CiFormat = d3.format(\".2f\");\nconst pValFormat = d3.format(\"0.2\");\nconst toPercent = d3.format(\".1%\");\n\n\n// Compare two tuples as equal.\n// E.g.\n// tuples_equal([1,2], [1,2]) = true\n// tuples_equal([1,2], [1,1]) = false\nfunction tuples_equal(a, b){\n  return (a[0] === b[0]) && (a[1] === b[1]);\n}\n\nfunction arrays_equal(arr_1, arr_2){\n  // If vecs are different lengths data must different\n  if(arr_1.length !== arr_1.length)\n    return false;\n\n  // If the union of the two arrays is the same size as both they're the same.\n  const size_of_union = unique([...arr_1, ...arr_2]).length;\n  return (size_of_union === arr_1.length) && (size_of_union === arr_2.length);\n}\n\n\n// Get unique set of values in an array\nfunction unique(data){\n  return d3.set(data).values();\n};\n\n\n// Takes a d3 selection of an SVG and downloads a svg for user\nfunction downloadPlot(svg){\n  const svgData = svg.node().outerHTML;\n  const svgBlob = new Blob([svgData], {type:\"image/svg+xml;charset=utf-8\"});\n  const svgUrl = URL.createObjectURL(svgBlob);\n  const downloadLink = document.createElement(\"a\");\n  downloadLink.href = svgUrl;\n  downloadLink.download = \"phecode_network.svg\";\n  document.body.appendChild(downloadLink);\n  downloadLink.click();\n  document.body.removeChild(downloadLink);\n}\n\n\n// Function to send a message back to shiny\nfunction send_to_shiny(type, payload, destination){\n  // Build message\n  const message_body = {\n    type: type,\n    // append the date to the begining so sent value always changes.\n    payload: [Date.now().toString(), ...payload]\n  };\n\n  // Make sure shiny is available before sending message\n  if(typeof Shiny !== 'undefined'){\n    // Send message off to server\n    Shiny.onInputChange(destination, message_body);\n  }\n}\n\nfunction setup_tooltip(dom_target, fields_to_show = ['code','OR']){\n\n  // Modify logic here.\n\n  const tooltip = dom_target.selectAppend('div.tooltip')\n    .st({\n      background:'rgba(255,255,255,0.8)',\n      position:'absolute',\n      padding: '0.25rem',\n      fontSize: 18,\n      border: '1px solid grey',\n      borderRadius: '5px'\n    });\n\n  const santatize_key = key => key.replace('_', ' ');\n\n  const santatize_value = val => typeof(val) === 'number' ? format_val(val): val;\n\n\n  const show = function(d, mouse_event){\n    // By filtering I avoid errors caused by not having data for something\n    const table_body = Object.keys(d)\n      .filter(key => fields_to_show.includes(key))\n      .sort((a,b) => a == 'code' ? -1 : 1) // trick to make sure code field shows up first\n      .reduce((table, key) =>\n        table + `<tr>\n                  <td style='text-align:right'>${santatize_key(key)}<\/td>\n                  <td style='text-align:left; padding-left: 1rem'>${santatize_value(d[key])}<\/td>\n                <\/tr>`, '');\n\n      const tooltip_content = `<table> ${table_body} <\/table>`;\n\n      const parent_width = +tooltip.parent().style('width').replace('px', '');\n      const parent_height = +tooltip.parent().style('height').replace('px', '');\n\n      //debugger;\n      const [event_x, event_y] = d3.clientPoint(tooltip.parent().node(), mouse_event);\n\n      const on_left_half = event_x < parent_width/2;\n      const on_upper_half = event_y < parent_height/2;\n\n      const offset = 5;\n\n      const style_positioning = {\n         display: 'block',\n       };\n\n      if(on_left_half){\n        style_positioning.left = event_x + offset;\n        style_positioning.right = 'auto';\n      } else {\n        style_positioning.right = parent_width - event_x + 2*offset;\n        style_positioning.left = 'auto';\n      }\n\n      if(on_upper_half){\n        style_positioning.top = event_y + offset;\n        style_positioning.bottom = 'auto';\n      } else {\n        style_positioning.bottom = parent_height - event_y + 2*offset;\n        style_positioning.top = 'auto';\n      }\n\n\n      //debugger;\n      tooltip\n       .st(style_positioning)\n       .html(tooltip_content);\n  };\n\n  const hide = function(){\n    tooltip\n      .st({\n        left: 0,\n        top: 0,\n        display: 'none',\n      });\n  };\n\n  // Start tooltip hidden.\n  hide();\n\n  return {show, hide}\n}\n\n\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/network_plot/helpers.js */\n// Helper functions for network plot\n\n\nfunction decide_link_opacity(links){\n  return Math.max(\n    d3.scaleLinear().domain([0,5000]).range([0.4, 0.06])(links.length),\n    0.06\n  );\n}\n\n\n// Sets up size object given a width and height and the constants object for sizing viz\nfunction setup_sizes(width, height, C){\n  return {\n    width: width,\n    height: height,\n    margin: C.margin,\n    w: width - (C.margin.left + C.margin.right),\n    h: height - (C.margin.top + C.margin.bottom),\n  };\n}\n\n\n// Function to make sure data conforms to the format we want\nfunction sanitize_data(data){\n  const data_props = Object.keys(data);\n\n  return {\n    nodes: data_props.includes('vertices') ? data.vertices : data.nodes,\n    links: data_props.includes('edges') ? data.edges : data.links,\n  };\n};\n\n\n// Function to add a dx or dy point to nodes for fixing them on a line in force simulation\nfunction fix_nodes_to_line(data, C){\n  data.nodes.forEach(d => {\n    if(d.selectable){\n      d.fx = -1;\n    } else {\n      d.fx = 1;\n    }\n\n  });\n  return data;\n}\n\n\n// Function to find all nodes that a given node is connected to.\nfunction find_connections(node_id, edges){\n  return edges\n    .filter(d => (d.target.name === node_id) || (d.source.name === node_id))\n    .map(d => d.source.name === node_id ? d.target.name : d.source.name);\n}\n\n\n// Function to send a message back to shiny\nfunction send_to_shiny(type, codes, C){\n\n  // Only try and send a message if we have codes to do so.\n  if(codes.length === 0) return;\n\n  // Build message\n  const message_body = {\n    type: type.toLowerCase(),\n    // append the date to the begining so sent value always changes.\n    payload: [Date.now().toString(), ...codes]\n  };\n\n  // Send message off to server\n  if(typeof Shiny !== 'undefined'){\n    Shiny.onInputChange(C.msg_loc, message_body);\n  } else {\n    console.log('sending message to shiny');\n  }\n};\n\n\n// Function to setup overlaid canvas and svg\nfunction setup_dom_elements(div, C, on_message){\n  // Make div relatively positioned so we can overlay svg and canvas\n  div.style('position', 'relative');\n\n  // Append the svg and padded g element\n  const svg = div.selectAppend('svg')\n    .html('') // wipe svg content if need be\n    .style('position', 'absolute');\n\n  // Append the canvas\n  const canvas = div.selectAppend('canvas');\n  const context = canvas.node().getContext('2d');\n\n  const tooltip = setup_tooltip(div, C.fields_to_show);\n\n  const message_buttons = setup_message_buttons(div, on_message);\n\n  const resize = function({width, height}){\n    const viz_sizing = {\n      height: height,\n      width: width,\n    };\n\n    svg.at(viz_sizing)\n       .st(viz_sizing);\n\n    canvas.at(viz_sizing);\n  };\n\n  return {svg, canvas, context, tooltip, message_buttons, resize};\n}\n\n\n// Function to setup the message sending buttons to send codes to shiny\nfunction setup_message_buttons(div, message_send_func){\n\n  const message_holders = div.selectAppend('div.message_holders');\n\n  const message_buttons = message_holders.selectAll('div')\n    .data(['Delete', 'Isolate', 'Invert'])\n    .enter().append('button.hidden')\n    .text(d => d)\n    .attr('id', d => `${d}-button`)\n    .on('click', message_send_func);\n\n  const show = function(which = 'all') {\n    const all_opened = which === 'all';\n    message_buttons\n      .classed('hidden', d => !(which.includes(d) || all_opened));\n  };\n\n  return {\n    show,\n    hide: () => message_buttons.classed('hidden', true),\n  };\n}\n\n\n// Function to setup a progress meter\nfunction setup_progress_meter(svg, C){\n  const roundness = 5;\n\n  // Append a g for holding meter\n  const meter = svg.append('g.progress_meter');\n\n  const calculating_message = meter.selectAppend('text.message')\n    .text('Calculating network layout')\n    .at({\n      y: C.progress_bar_height + 5,\n      opacity: 0,\n    })\n    .st({\n      alignmentBaseline: 'hanging',\n      dominantBaseline: 'hanging',\n      textAnchor: 'middle',\n      fontSize: '1.5em',\n      userSelect: \"none\",\n    });\n\n  // Add a rectangle to act as background showing finishing point\n  const background = meter.append('rect.background')\n    .at({\n      height: C.progress_bar_height,\n      fill: 'lightgrey',\n      stroke: 'grey',\n      strokeWidth: 1,\n      rx: roundness,\n    });\n\n  // Add rectangle to 'fill up'\n  const fill_bar = meter.append('rect.fill_bar')\n    .at({\n      height: C.progress_bar_height,\n      fill: C.progress_bar_color,\n      rx: roundness,\n    });\n\n  // For easy transitioning of both bars on show/hide\n  const all_bars = meter.selectAll('rect');\n\n  // Add text that write's out progress\n  const progress_text = meter.append('text.progress_text')\n    .at({\n      y: C.progress_bar_height - 3,\n    })\n    .st({\n      fontSize: 20,\n    });\n\n  // Function to update meter with new progress\n  const update = (prop_done) => {\n\n    const full_width = +background.attr('width');\n    const fill_position = full_width*prop_done;\n\n    // Raise meter to top of viz;\n    meter.raise();\n\n    // Make sure all bars are visible\n    all_bars.attr('height', C.progress_bar_height);\n\n    // Update width of fill bar\n    fill_bar.attr('width', fill_position);\n\n\n    // Update text\n    progress_text\n      .attr('x', fill_position + 2)\n      .text(d3.format(\".0%\")(prop_done));\n\n    // Make sure all text is visible\n    meter.selectAll('text').attr('opacity', 1);\n  };\n\n  const resize = ({width, height}) => {\n    // Update the general size of progress bar in case we have resized viz.\n    background.attr('width', width);\n    calculating_message.attr('x', width/2);\n  };\n\n  // Function to hide meter\n  const hide = () => {\n\n    const t = d3.transition()\n      .duration(750)\n      .ease(d3.easeLinear);\n\n    meter.selectAll('rect')\n      .transition(t)\n      .attr('height', 0);\n\n    meter.selectAll('text')\n      .transition(t)\n      .attr('opacity', 0)\n      .text('');\n  };\n\n  return {update, hide, resize};\n}\n\n\n// Simulation webworker function\nfunction sim_webworker(update_freq){\n  importScripts(\"https://d3js.org/d3-collection.v1.min.js\");\n  importScripts(\"https://d3js.org/d3-dispatch.v1.min.js\");\n  importScripts(\"https://d3js.org/d3-quadtree.v1.min.js\");\n  importScripts(\"https://d3js.org/d3-timer.v1.min.js\");\n  importScripts(\"https://d3js.org/d3-force.v1.min.js\");\n\n  onmessage = function(event) {\n    const nodes = event.data.nodes;\n    const links = event.data.links;\n    const centering_force = d => d.selectable ? 0.5: 0;\n\n    const simulation = d3.forceSimulation(nodes)\n      .force(\n        \"link\",\n        d3.forceLink(links)\n          .id(d => d.id)\n          .distance(0.3)\n          .strength(0.8)\n      )\n      .force(\n        'collision',\n        d3.forceCollide()\n          .radius(d => d.selectable ? 10: 3)\n          .strength(0.5)\n      )\n      .force(\n        \"charge\",\n        d3.forceManyBody()\n      )\n      .force(\n        \"X\",\n        d3.forceX()\n          .strength(centering_force)\n      )\n      .force(\n        \"Y\",\n        d3.forceY()\n          .strength(centering_force)\n      );\n\n    const num_itts = Math.ceil((Math.log(simulation.alphaMin()) / Math.log(1 - simulation.alphaDecay())));\n    let i = 0;\n\n    // How often in terms of number of iterations do we send current progress back?\n    simulation.on('tick', () => {\n      i++;\n      postMessage({type: \"progress_report\", progress: i / num_itts});\n      if((i % update_freq) === 0){\n        postMessage({type: 'layout_data', nodes: nodes, links: links});\n      }\n    });\n\n    simulation.on('end', () => {\n      postMessage({type: \"end\", nodes: nodes, links: links});\n    });\n  };\n}\n\n\n// Function to draw canvas parts of network\nfunction draw_canvas_portion({nodes, links}, scales, {canvas, context}, C, highlighted_nodes = []){\n  // Clear canvas\n  context.clearRect(0, 0, +canvas.attr('width'), +canvas.attr('height'));\n\n  // If we're in export mode don't do anything.\n  if(C.export_mode) return;\n\n  context.save();\n  // Scale edge opacity based upon how many edges we have\n  context.globalAlpha = d3.scaleLinear().domain([0,5000]).range([0.5, 0.01])(links.length);\n\n  context.beginPath();\n  links.forEach(d => {\n    context.moveTo(scales.X(d.source.x), scales.Y(d.source.y));\n    context.lineTo(scales.X(d.target.x), scales.Y(d.target.y));\n  });\n\n  // Set color of edges\n  context.strokeStyle = C.edge_color;\n\n  // Draw to canvas\n  context.stroke();\n\n  // Draw patient nodes\n  context.globalAlpha = C.case_opacity;\n\n  // Function to assign node highlights\n  // Only check for highlight modification if we need to to avoid expensive calculations\n  const node_border = d => highlighted_nodes.length != 0 ?\n    `rgba(0, 0, 0, ${highlighted_nodes.includes(d.name) ? 1 : 0})` :\n    `rgba(0, 0, 0, 0)`;\n\n\n  nodes.forEach( d => {\n    if(!d.selectable){\n\n      // Border around the nodes.\n      context.strokeStyle = node_border(d);\n\n      context.fillStyle = d.color;\n\n      context.beginPath();\n      context.arc(scales.X(d.x), scales.Y(d.y), C.case_radius, 0, 2 * Math.PI);\n      context.fill();\n      context.stroke();\n    }\n  });\n\n}\n\n\n// Logic for when a svg node is clicked.\nfunction on_node_click(d){\n  const node = d3.select(this);\n\n  // Is code already selected?\n  if(selected_codes.includes(d.name)){\n    // pull code out of selected list\n    selected_codes = selected_codes.filter(code => code !== d.name);\n\n    // reset the style of node\n    if(d.inverted){\n      node.attr(\"fill\", 'white');\n    } else {\n      node.attr(\"stroke-width\", 0);\n    }\n\n\n  } else {\n    // add code to selected codes list\n    selected_codes = [d.name, ...selected_codes];\n\n    // Emphasize highlight\n    if(d.inverted){\n      node.attr(\"fill\", 'grey');\n    } else {\n      node.attr(\"stroke-width\", 2);\n    }\n  }\n\n  // do we have selected codes currently? If so display the action popup.\n  if(selected_codes.length > 0){\n    dom_elements.message_buttons.show(\n      selected_codes.length === 1 ? ['Delete', 'Invert']: 'all'\n    );\n  } else {\n    dom_elements.message_buttons.hide();\n  }\n};\n\n\n// Finds which patient nodes contain a given pattern of codes.\nfunction find_patients_by_pattern({nodes, links}, pattern){\n\n  if(pattern.length === 1){\n    return find_connections(pattern[0], links);\n  }\n\n  return Object.values(\n    links.reduce(\n      (acc, d) => {\n        const patient = d.source.name;\n        const code = d.target.name;\n        // Only add the code if we need to.\n        if(pattern.includes(code)){\n          patient_info = acc[patient] || {};\n          patient_codes = patient_info.codes || [];\n          patient_info.codes = [...patient_codes, code];\n          patient_info.name = patient;\n          acc[patient] = patient_info;\n        }\n        return acc;\n      },{} )\n  ).filter(d => d.codes.length == pattern.length)\n   .map(d => d.name);\n\n}\n\n\n// Builds array of patient to phecode pattern for use in filtering\nfunction build_patient_patterns(data){\n  const nodes = data.nodes || data.vertices;\n  const links = data.links || data.edges;\n\n  const id_to_code = nodes.reduce(\n    (acc, d) => {\n      if(d.selectable){\n        acc[d.id] = d.name;\n      }\n      return acc;\n    },\n    {}\n  );\n\n\n  const patient_to_codes = {};\n\n  for(let i = 0; i < links.length; i++){\n    patient_to_codes[links[i].source] = [...(patient_to_codes[links[i].source] || []), id_to_code[links[i].target]];\n  }\n\n  return nodes.filter(d => !d.selectable).map(d => ({name: d.name, pattern: patient_to_codes[d.id]}));\n}\n\n\n// Test if two datasets are equal for determining if we have new data from render call\nfunction is_new_data(old_data, new_data) {\n  const old_nodes = old_data.nodes || old_data.vertices,\n        new_nodes = new_data.nodes || new_data.vertices;\n\n  if(typeof old_nodes === 'undefined')\n    return true;\n\n  // If node vecs are different lengths data must be new\n  if(old_nodes.length !== new_nodes.length)\n    return true;\n\n  // Next, test if both node sets combined unique nodes is same length as old data\n  const combined_names = unique([...old_nodes, ...new_nodes].map(d => d.name));\n\n  // If we have a different length then we have new data somewhere\n  return combined_names.length !== old_nodes.length;\n}\n\n\n\n\nconst button_icon = `\n<svg id=\"i-download\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" fill=\"none\" stroke=\"currentcolor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\">\n    <path d=\"M9 22 C0 23 1 12 9 13 6 2 23 2 22 10 32 7 32 23 23 22 M11 26 L16 30 21 26 M16 16 L16 30\" />\n<\/svg>\n`;\ndiv = d3.select(div.node());\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/network_plot/index.js */\n// !preview r2d3 data= readr::read_rds(here::here('data/fake_network_data.rds')), options = readr::read_rds(here::here('data/fake_network_options.rds')), container = 'div', dependencies = c(\"d3-jetpack\", here::here('inst/d3/helpers.js'), here::here('inst/d3/network_plot/helpers.js')), css = c(here::here('inst/d3/network_plot/network.css'), here::here('inst/d3/helpers.css'), here::here('inst/css/common.css'))\n\n\n// Constants object for viz, all can be overwritten if passed a different value\n// with the options argument of r2d3\n\n// Holds the currently selected codes.\nlet selected_codes = [];\n\nlet viz = {\n      data: {},\n      width,\n      height,\n      options,\n      patient_patterns: null,\n    };\n\n\nconst C = Object.assign(\n  {\n    padding: 20,\n    tooltip_offset: 13,\n    tooltip_height: 60,\n    margin: {right: 20, left: 20, top: 20, bottom: 5},\n    case_radius: 3,\n    code_radius_mult: 4,\n    case_opacity: 1,\n    edge_color: '#aaa',\n    progress_bar_height: 20,\n    progress_bar_color: 'orangered',\n    msg_loc: 'shiny_server',\n    viz_type: 'bipartite',\n    callouts: false,\n    export_mode: false,\n    fields_to_show: ['code', 'OR', 'p_val', 'description', 'category'],\n    update_freq: 5, // How often do we send back layout simulation progress?\n  },\n  options);\n\n\nfunction setup_webworker(C){\n  let worker;\n\n  // Wrap up function into a fake script to call\n  const worker_url = URL.createObjectURL(\n    new Blob(['('+sim_webworker+`)(${C.update_freq})`])\n  );\n\n  const send_new_job = function(network_data, callbacks){\n\n    if(worker){\n      // If we already have a webworker running make sure to\n      // terminate it so we don't have multiple going at the\n      // same time.\n      worker.terminate();\n    }\n\n    const {on_progress_report, on_finish, on_layout_data} = callbacks;\n\n    // Initialize the worker\n    worker = new Worker(worker_url);\n\n    // Send worker the data we are working with\n    worker.postMessage(network_data);\n\n\n    // Control what is done when a message is received from the webworker\n    worker.onmessage = function(event) {\n      switch (event.data.type) {\n        case \"progress_report\": return on_progress_report(event.data.progress);\n        case \"layout_data\": return on_layout_data(event.data);\n        case \"end\": return on_finish(event.data);\n      }\n    };\n  };\n\n  return send_new_job;\n}\n\n\n// Function to entirely setup network viz.\n// Exposes methods for adding new data and updating the size\nfunction setup_network_viz(dom_elements, on_node_click){\n\n  let layout_data = null,\n      been_sized = false,\n      current_zoom = null,\n      scales = null,\n      patient_patterns = null,\n      nodes_to_highlight = [];\n\n  const X = d3.scaleLinear();\n  const Y = d3.scaleLinear();\n\n  const new_data = function(data){\n\n    const nodes = data.nodes || data.vertices;\n    const links = data.links || data.edges;\n\n    // Remove old network nodes\n    dom_elements.svg.selectAll('circle').remove();\n\n    // Make sure message buttons are hidden only if\n    // no codes are selected.\n    if(selected_codes.length == 0) {\n      dom_elements.message_buttons.hide();\n    }\n\n    // Update scale domains\n    X.domain(d3.extent(nodes, d => d.x));\n    Y.domain(d3.extent(nodes, d => d.y));\n\n    // Update function scope's copy of data\n    layout_data = {nodes, links};\n\n    if(been_sized){\n      draw();\n    }\n  };\n\n  const resize = function({width, height, margin}){\n\n    // Update scale ranges\n    X.range([margin.left, width - margin.right]);\n    Y.range([height - margin.bottom, margin.top]);\n\n    // Let scope know we have set a size for the viz.\n    been_sized = true;\n\n    if(layout_data){\n      draw();\n    }\n  };\n\n  const update_scales = function(){\n     // Update scales with the zoom if we have any\n    scales = {\n      X: current_zoom ? current_zoom.rescaleX(X) : X,\n      Y: current_zoom ? current_zoom.rescaleY(Y) : Y,\n    };\n  };\n\n  const new_patterns = function(patterns){\n    patient_patterns = patterns;\n  };\n\n  const draw_subjects_w_highlight = function({type, codes}){\n    if(layout_data){\n\n      let to_highlight = [];\n\n      // If we have a null code dump, nothing gets highlighted.\n      if(codes !== null){\n        if(type === 'code'){\n          to_highlight = patient_patterns\n            .filter(d => d.pattern.includes(codes))\n            .map(d => d.name);\n        } else {\n          const single_code = typeof codes === 'string';\n\n          // Find the patient nodes who have the pattern we want to highlight\n          to_highlight = patient_patterns\n            .filter(d => arrays_equal(d.pattern, single_code ? [codes] : codes))\n            .map(d => d.name);\n        }\n\n        // Make sure scales are update width current zoom\n        update_scales();\n      }\n\n      // Update the canvas to highlight these nodes\n      draw_canvas_portion(layout_data, scales, dom_elements, C, to_highlight);\n    }\n  };\n\n  const default_highlight = function(){\n    // Resets highlight to the last app-sent pattern\n    draw_subjects_w_highlight(viz.options.highlighted_pattern)\n  }\n\n  const draw = function(){\n    // Update scales with the zoom if we have any\n    update_scales();\n\n    // Draw svg nodes of network\n    const node_callbacks = {\n      mouseover: d => draw_subjects_w_highlight({type: 'code', codes: d.name}),\n      mouseout: d => default_highlight(),\n    };\n\n    draw_svg_nodes(layout_data, scales, dom_elements, C, on_node_click, node_callbacks);\n\n    default_highlight();\n    //draw_canvas_portion(layout_data, scales, dom_elements, C, nodes_to_highlight);\n  };\n\n  dom_elements.svg.call(\n    d3.zoom()\n    .scaleExtent([0.5, 5])\n    .on(\"zoom\", () => {\n      // Record the zoom event to function scope.\n      current_zoom = d3.event.transform;\n\n      // Redraw network with this zoom scale\n      draw();\n    })\n  );\n\n  return {new_data, resize, new_patterns, default_highlight};\n};\n\n\n//------------------------------------------------------------\n// On initialization.\n//------------------------------------------------------------\n// This code gets run once and sets up the basic\n// neccesities for the visualization.\n\n// Setup all the dom elements for the viz. This includes\n// the svg, canvas, context, tooltip, and message buttons.\nconst dom_elements = setup_dom_elements(\n  div, C,\n  // Function that is called when a message button is pressed. Passed the type of message\n  function(type){\n    send_to_shiny(type, selected_codes, C);\n    // Reset out selected codes\n    selected_codes = [];\n  });\n\n// Setup the progress bar for network simulation progress\nconst progress_meter = setup_progress_meter(dom_elements.svg, C);\n\n// Setup the actual network viz itself.\nconst network_viz = setup_network_viz(dom_elements, on_node_click);\nnetwork_viz.new_data(data);\n\nconst webworker = setup_webworker(C);\n\n\n//------------------------------------------------------------\n// On Render\n//------------------------------------------------------------\n// This is code that runs whenever new data is received by the\n// visualization.\nr2d3.onRender(function(data, div, width, height, options){\n  viz.options = options;\n\n  const new_data = is_new_data(viz.data, data);\n\n  if(new_data){\n    // Update the global viz info object\n    viz.data = data;\n    // Reset selected codes\n    selected_codes = [];\n  } else {\n    network_viz.default_highlight();\n  }\n\n\n  if(new_data){\n    // Build a patient pattern array and send to network viz\n    viz.patient_patterns = build_patient_patterns(viz.data);\n    network_viz.new_patterns(viz.patient_patterns);\n\n    // Prepare data based upon the desired format from options\n    const data_for_viz = C.viz_type === 'bipartite' ?\n      fix_nodes_to_line(sanitize_data(viz.data), C):\n      sanitize_data(viz.data);\n\n    // Make sure viz is correct size.\n    size_viz(viz.width, viz.height);\n\n    // Launch webworker to calculate layout and kickoff network viz after finishing\n    webworker(\n      data_for_viz,\n      {\n        on_progress_report: progress_meter.update,\n        on_layout_data: (d) => {\n          network_viz.new_data(d);\n        },\n        on_finish: () => {\n          progress_meter.hide();\n        },\n      }\n    );\n  }\n\n});\n\n\n// Tell r2d3 what to do when we resize the viz\nr2d3.onResize((new_width, new_height) => {\n\n  // Update the global viz info object\n  viz.width = new_width;\n  viz.height = new_height;\n\n  size_viz(viz.width, viz.height);\n});\n\n\nfunction size_viz(width, height){\n  // Adjust size of svg and canvas elementsT\n  const sizes = setup_sizes(width, height, C);\n  dom_elements.resize(sizes);\n  progress_meter.resize(sizes);\n  network_viz.resize(sizes);\n}\n\n\n// Function to draw svg parts of network\nfunction draw_svg_nodes({nodes, links}, scales, {svg, canvas, context, tooltip}, C, on_click, node_callbacks){\n\n  // Make sure we have node positions provided by the webworker before we try and draw\n  if(nodes[0].x === undefined) return;\n\n  nodes.forEach(d => {\n    d.code = d.name;\n  });\n\n  const x_max = scales.X.range()[1];\n  const y_max = scales.Y.range()[1];\n\n  // Special attributes for selected codes\n  const choose_stroke_color = d => d.inverted ?  d.color: 'black';\n\n  const choose_stroke_width = d => {\n    if(d.inverted) return 3;\n\n    const selected = selected_codes.includes(d.name);\n\n    return selected ? 2 : 0;\n  };\n\n  const choose_fill = d => {\n    if(d.inverted){\n      return selected_codes.includes(d.name) ? 'grey' : 'white';\n    } else {\n      return d.color;\n    }\n  }\n\n  const node_attrs = {\n    r: d => C.case_radius*(d.selectable ? C.code_radius_mult: 1),\n    cx: d => scales.X(d.x),\n    cy: d => scales.Y(d.y),\n    stroke: choose_stroke_color,\n    strokeWidth: choose_stroke_width,\n    fill: choose_fill,\n  };\n\n  // If we isolated the phenotypes before we need to remove them\n  svg.select('g.phenotypes').remove();\n  const phenotype_nodes = nodes.filter(d => d.selectable);\n\n  // Bind data but only the phenotype nodes unless we're in export mode and need everything to be SVG\n  const node_holder = svg.selectAppend('g.nodes');\n  const node_circles = node_holder.selectAll('circle')\n    .data(\n      C.export_mode ? nodes: phenotype_nodes,\n      d => d.id\n    );\n\n  node_circles.exit().remove();\n\n  const all_nodes = node_circles.enter()\n    .append('circle')\n    .at({\n      r: 0,\n      cx: d => Math.random()*x_max,\n      cy: d => Math.random()*y_max,\n    })\n    .merge(node_circles)\n    .at(node_attrs);\n\n  // Build container for phenotypes\n  const phenotype_holder = svg.selectAppend('g.phenotypes');\n  // Swap all phenotype nodes into this container\n  all_nodes.filter(d => d.selectable)\n    .each(function(){\n      phenotype_holder.node().appendChild(this);\n    });\n  // raise container above everything else\n  phenotype_holder.raise();\n\n  // Add mouseover behavior for nodes that are selectable\n  all_nodes\n    .on('mouseover', function(d){\n      node_callbacks.mouseover(d);\n      tooltip.show(d, d3.event);\n    })\n    .on('mouseout', function(d){\n      tooltip.hide();\n      // Reset nodes that may have been highlighted\n      node_callbacks.mouseout(d);\n    })\n    .on('click', on_click);\n\n    // Callout boxes\n    if(C.callouts){\n      const box_padding = 2;\n      const start_x_delta = C.case_radius*C.code_radius_mult*1.2;\n\n      // Draw the sticky node names\n      const node_callouts = svg.selectAll('g.node_callout')\n        .data(phenotype_nodes, d => d.name);\n\n      // Remove callouts for nodes that are no longer in network\n      node_callouts.exit().remove();\n\n      // Add new codes and update all positions\n      const callout_g = node_callouts.enter()\n        .append('g.node_callout')\n        .style('cursor', 'move')\n        .merge(node_callouts)\n        .each(d => {\n          // How far away from the point is this callout?\n          //d.callout_delta = [C.case_radius*C.code_radius_mult*1.2, 0];\n\n          d.delta_x = d.delta_x || start_x_delta;\n          d.delta_y = d.delta_y || 0;\n\n          // Prefill a fixed-size bounding box for background\n          d.bounding_box = d.bounding_box || {width: 20, height:20};\n        })\n        .translate(d => [scales.X(d.x), scales.Y(d.y)]);\n\n      callout_g.selectAppend('line.callout_line')\n        .at({\n          x2: d => d.delta_x + d.bounding_box.width/2,\n          y2: d => (d.delta_y || 0) - d.bounding_box.height/2,\n          stroke: 'black',\n          strokeWidth: 1.5,\n        });\n\n      const callout_rects = callout_g.selectAppend('rect.callout_background')\n        .at({\n          x: d => d.delta_x,\n          y: d => d.delta_y - d.bounding_box.height,\n          rx: 5,\n          ry: 5,\n          fill: 'white',\n          stroke: 'grey',\n          strokeWidth: 1,\n        })\n\n      callout_g.selectAppend('text.callout_title')\n        .text(d => d.name)\n        .at({\n          x: d => d.delta_x + box_padding,\n          y: d => d.delta_y - box_padding*2,\n          fontSize: 15,\n        })\n        .each(function(d){\n          const bbox = this.getBBox();\n          // grab bounding box size of filled text;\n          d.bounding_box = {width: bbox.width + box_padding*2, height: bbox.height + box_padding*2};\n        });\n\n      // Update the rectangle backgrounds with the calculated bounding boxes\n      callout_rects\n        .at({\n          width: d => d.bounding_box.width,\n          height: d => d.bounding_box.height,\n        });\n\n      // Raise callouts above everything else\n      callout_g.raise();\n      // Make sure that the phenotype nodes are above the callout lines\n      phenotype_holder.raise()\n\n      callout_g.call(\n        d3.drag()\n          .on(\"drag\", function(d){\n\n            d.delta_x += d3.event.dx;\n            d.delta_y += d3.event.dy;\n\n            d3.select(this).select('rect')\n              .at({\n                x: d.delta_x,\n                y: d.delta_y - d.bounding_box.height + 3*box_padding,\n              });\n\n            d3.select(this).select('line')\n              .at({\n                x2: d.delta_x + d.bounding_box.width/2,\n                y2: d.delta_y - d.bounding_box.height/2,\n              });\n\n            d3.select(this).select('text')\n              .at({\n                x: d.delta_x + box_padding,\n                y: d.delta_y + box_padding/2,\n              })\n\n          })\n      );\n\n    } else {\n      // Remove old callouts (if they exist)\n      svg.selectAll('g.node_callout').remove();\n    }\n\n    if(C.export_mode){\n      const link_opacity = decide_link_opacity(links);\n      const link_holder = svg.selectAppend('g.links')\n      const link_lines = link_holder.selectAll('line.link_lines')\n        .data(links, (d,i) => i);\n\n      link_lines.exit().remove();\n\n      link_lines.enter()\n        .append('line.link_lines')\n        .merge(link_lines)\n        .at({\n          x1: d => scales.X(d.source.x),\n          y1: d => scales.Y(d.source.y),\n          x2: d => scales.X(d.target.x),\n          y2: d => scales.Y(d.target.y),\n          stroke: C.edge_color,\n          strokeWidth: 1,\n          opacity: link_opacity,\n        });\n\n      // Make sure the nodes are above the links\n      link_holder.lower();\n      svg.selectAll('circle').raise();\n    } else {\n      svg.selectAll('line.link_lines').remove();\n    }\n}\n\n\n\nconst settings_menu = div.selectAppend('div.settings_menu');\n\nconst download_button = settings_menu.selectAppend('div.download_button')\n  .html(button_icon)\n  .classed('hidden', true)\n  .on('click', () => downloadPlot(dom_elements.svg))\n  .on('mouseover', function(){\n      d3.select(this)\n        .select('svg')\n        .st({\n          stroke: 'blue',\n          strokeWidth: 3,\n        });\n    })\n  .on('mouseout', function(){\n       d3.select(this)\n        .select('svg')\n        .st({\n          stroke: 'black',\n          strokeWidth: 2,\n        });\n    });\n\nconst callout_button = settings_menu.selectAppend('button.callout_button')\n  .html(`Turn on callouts`)\n  .classed('hidden', true)\n  .on('click', function(){\n    // Toggle callout status\n    C.callouts = !C.callouts;\n\n    d3.select(this)\n      .html(C.callouts ? `Turn off callouts`: `Turn on callouts`)\n\n    // Redraw viz with new callout status\n    size_viz(viz.width, viz.height);\n  });\n\nconst export_mode_button = settings_menu.selectAppend('button.export_mode_button')\n  .html(`${C.export_mode? 'Turn off e': 'E'}xport mode`)\n  .on('click', function(){\n    // Toggle export mode\n    C.export_mode = !C.export_mode;\n\n    // Show buttons if export mode is on, hide otherwise.\n    callout_button.classed('hidden', !C.export_mode);\n    download_button.classed('hidden', !C.export_mode);\n\n    d3.select(this).html(`${C.export_mode? 'Turn off e': 'E'}xport mode`)\n\n    if(!C.export_mode){\n      C.callouts = false;\n      callout_button.html(`Turn on callouts`)\n    }\n\n    size_viz(viz.width, viz.height);\n});\n};",
        "style": "/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/helpers.css */\n/*@import url('https://fonts.googleapis.com/css?family=Maven+Pro&display=swap');\n@import url('https://fonts.googleapis.com/css?family=Montserrat:300,400|Raleway&display=swap');\n*/\n\n\n/* ================================================== */\n/* Table */\n/* ================================================== */\n\n\n/* ================================================== */\n/* Table-wide style */\ntable {\n\tborder-collapse: collapse;\n\ttable-layout: fixed;\n}\n\n/*Individual cells for header and body */\ntd, th {\n\tpadding: 3px;\n\ttext-align: center;\n\tvertical-align: middle;\n}\n\n/* ================================================== */\n/* Table-body style */\ntbody{\n  display: block;\n  overflow: auto;\n}\n\n/* ================================================== */\n/* Header styling */\n\n/* Everything that composes the header */\nthead {\n  font-size: 0.95em;\n  font-weight: 600;\n}\n\n/* Entire row of the header */\nthead tr {\n   display: block;\n}\n\n/*Individual header cells */\nth {\n  background-color: #d9d9d9;\n}\n\n/* ================================================== */\n/* Row styling */\n\ntbody tr {\n  --row-height: 30px;\n  height: var(--row-height);\n}\n\n/* Zebra striping */\ntr:nth-of-type(even) {\n\tbackground: #f0f0f0;\n}\n\n/* Rows that have been selected */\ntr.selected{\n  background: #ff7f00;\n}\n\ntr.disabled{\n  opacity: 0.5;\n}\n\ntr div {\n  height: var(--row-height);\n  text-align: left;\n  overflow-x: auto;\n  width: 100%;\n  font-size: 0.8em;\n}\n\n/* Give text a bit of breathing room */\ntr div span {\n  padding-left: 0.2rem;\n}\n\n\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/network_plot/network.css */\n.hidden {\n  display: none;\n}\n\nbutton {\n  font-size: 0.8rem;\n}\n\n.message_holders,\n.settings_menu {\n  position: absolute;\n  display: flex;\n  align-items: flex-end;\n  bottom: 0.5rem;\n}\n\n.message_holders {\n  flex-direction: row;\n  left: 0.3rem;\n}\n\n.settings_menu {\n  right: 0.3rem;\n  flex-direction: column;\n}\n\n.button_span {\n  border: 1px solid black;\n  padding: 5px;\n  border-radius: 8px;\n  box-shadow: black 1px 1px 0px;\n  background: lightyellow;\n  cursor: pointer;\n  padding-right: 5px;\n}\n\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/css/common.css */\n/*\nFonts for app\n*/\n\nbody {\n  --main-text-color: #525252;\n}\n\nbody,\ntable,\nlabel,\nbutton,\nsvg text {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n}\n\n\nh1, h2, h3, h4 {\n  font-weight: 400;\n  color: #252525;\n}\n\np, span, table, label, button {\n  color: var(--main-text-color);\n}\n\nsvg text {\n  fill: var(--main-text-color);\n}\n\n\n\n/* Button Styles */\nbutton,\n.btn {\n  \t-moz-box-shadow:inset 0px 1px 0px 0px #ffffff;\n  \t-webkit-box-shadow:inset 0px 1px 0px 0px #ffffff;\n  \tbox-shadow:inset 0px 1px 0px 0px #ffffff;\n  \tbackground:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #ffffff), color-stop(1, #f6f6f6));\n  \tbackground:-moz-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\n  \tbackground:-webkit-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\n  \tbackground:-o-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\n  \tbackground:-ms-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\n  \tbackground:linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  \tfilter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#f6f6f6',GradientType=0);\n  \tbackground-color:#ffffff;\n  \t-moz-border-radius:6px;\n  \t-webkit-border-radius:6px;\n  \tborder-radius:6px;\n  \tborder:1px solid #dcdcdc;\n  \tdisplay:inline-block;\n  \tcursor:pointer;\n  \tpadding:6px 20px;\n  \ttext-decoration:none;\n  \ttext-shadow:0px 1px 0px #ffffff;\n  }\n\nbutton:hover,\n.btn:hover {\n\tbackground:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #f6f6f6), color-stop(1, #ffffff));\n\tbackground:-moz-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n\tbackground:-webkit-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n\tbackground:-o-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n\tbackground:-ms-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n\tbackground:linear-gradient(to bottom, #f6f6f6 5%, #ffffff 100%);\n\tfilter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#f6f6f6', endColorstr='#ffffff',GradientType=0);\n\tbackground-color:#f6f6f6;\n}\n\nbutton:active,\n.btn:active {\n\tposition:relative;\n\ttop:1px;\n}\n\nspan.btn {\n  font-weight: 200;\n}\n\nbutton.btn {\n  font-size: 1rem;\n  font-weight: 400;\n}",
        "version": 5,
        "theme": {
          "default": {
            "background": "#FFFFFF",
            "foreground": "#000000"
          },
          "runtime": null
        },
        "useShadow": true
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "d3v5",
          "version": "5.0.0",
          "src": {
            "href": "d3v5-5.0.0"
          },
          "meta": null,
          "script": "d3.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        },
        {
          "name": "d3-jetpack",
          "version": "2.0.9",
          "src": {
            "href": "d3-jetpack-2.0.9"
          },
          "meta": null,
          "script": "d3-jetpack.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        }
      ]
    },
    "main_app-upset_plot_main_dashboard-upset_plot": {
      "x": {
        "data": {
          "pattern": [
            "627.00",
            "327.30",
            "761.00",
            "751.10",
            "586.12",
            "327.30-627.00",
            "627.00-761.00",
            "327.30-761.00",
            "327.30-586.12",
            "327.30-627.00-761.00",
            "586.12-627.00-761.00"
          ],
          "count": [
            180,
            67,
            29,
            7,
            1,
            26,
            18,
            2,
            1,
            1,
            1
          ],
          "size": [
            1,
            1,
            1,
            1,
            1,
            2,
            2,
            2,
            2,
            3,
            3
          ],
          "num_snp": [
            33,
            12,
            7,
            1,
            1,
            2,
            5,
            0,
            1,
            0,
            0
          ],
          "pointEst": [
            1.27498639579176,
            1.22531160115053,
            1.74029763641669,
            0.816874400767018,
            5.71812080536913,
            0.45744966442953,
            2.04218600191755,
            0,
            5.71812080536913,
            0,
            0
          ],
          "lower": [
            0.91201970306593,
            0.672649913357448,
            0.75694272882586,
            0.0990524730603462,
            0,
            0.10925800013954,
            0.738903650417964,
            0,
            0,
            0,
            0
          ],
          "upper": [
            1.78240700720537,
            2.23205041746021,
            4.00114268620484,
            6.73666962582492,
            null,
            1.91528487817305,
            5.64420498405834,
            null,
            null,
            null,
            null
          ]
        },
        "type": "data.frame",
        "container": "svg",
        "options": {
          "marginalData": [
            {
              "code": "327.30",
              "count": 97,
              "num_snp": 15
            },
            {
              "code": "586.12",
              "count": 3,
              "num_snp": 2
            },
            {
              "code": "627.00",
              "count": 226,
              "num_snp": 40
            },
            {
              "code": "751.10",
              "count": 7,
              "num_snp": 1
            },
            {
              "code": "761.00",
              "count": 51,
              "num_snp": 12
            }
          ],
          "overallMaRate": 0.149,
          "code_to_color": {
            "751.10": "#73d54a",
            "586.12": "#76d58b",
            "627.00": "#76d58b",
            "327.30": "#792f39",
            "761.00": "#98653a"
          },
          "min_set_size": 20,
          "msg_loc": "main_app-upset_plot_main_dashboard-message_upset_plot",
          "colors": {
            "light_grey": "#f7f7f7",
            "med_grey": "#d9d9d9",
            "dark_grey": "#bdbdbd",
            "light_red": "#fcbba1",
            "dark_red": "#ef3b2c",
            "light_blue": "#4292c6",
            "green": "#74c476"
          }
        },
        "script": "var d3Script = function(d3, r2d3, data, svg, width, height, options, theme, console) {\nthis.d3 = d3;\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/helpers.js */\n// Helper functions for all visualizations\n\n// Turn number into a given number of decimal places\nfunction format_val(d, places = 3){\n  return d3.format(`.${places}`)(d);\n}\n\n// number formatters\nconst countFormat = d3.format(\",d\");\nconst CiFormat = d3.format(\".2f\");\nconst pValFormat = d3.format(\"0.2\");\nconst toPercent = d3.format(\".1%\");\n\n\n// Compare two tuples as equal.\n// E.g.\n// tuples_equal([1,2], [1,2]) = true\n// tuples_equal([1,2], [1,1]) = false\nfunction tuples_equal(a, b){\n  return (a[0] === b[0]) && (a[1] === b[1]);\n}\n\nfunction arrays_equal(arr_1, arr_2){\n  // If vecs are different lengths data must different\n  if(arr_1.length !== arr_1.length)\n    return false;\n\n  // If the union of the two arrays is the same size as both they're the same.\n  const size_of_union = unique([...arr_1, ...arr_2]).length;\n  return (size_of_union === arr_1.length) && (size_of_union === arr_2.length);\n}\n\n\n// Get unique set of values in an array\nfunction unique(data){\n  return d3.set(data).values();\n};\n\n\n// Takes a d3 selection of an SVG and downloads a svg for user\nfunction downloadPlot(svg){\n  const svgData = svg.node().outerHTML;\n  const svgBlob = new Blob([svgData], {type:\"image/svg+xml;charset=utf-8\"});\n  const svgUrl = URL.createObjectURL(svgBlob);\n  const downloadLink = document.createElement(\"a\");\n  downloadLink.href = svgUrl;\n  downloadLink.download = \"phecode_network.svg\";\n  document.body.appendChild(downloadLink);\n  downloadLink.click();\n  document.body.removeChild(downloadLink);\n}\n\n\n// Function to send a message back to shiny\nfunction send_to_shiny(type, payload, destination){\n  // Build message\n  const message_body = {\n    type: type,\n    // append the date to the begining so sent value always changes.\n    payload: [Date.now().toString(), ...payload]\n  };\n\n  // Make sure shiny is available before sending message\n  if(typeof Shiny !== 'undefined'){\n    // Send message off to server\n    Shiny.onInputChange(destination, message_body);\n  }\n}\n\nfunction setup_tooltip(dom_target, fields_to_show = ['code','OR']){\n\n  // Modify logic here.\n\n  const tooltip = dom_target.selectAppend('div.tooltip')\n    .st({\n      background:'rgba(255,255,255,0.8)',\n      position:'absolute',\n      padding: '0.25rem',\n      fontSize: 18,\n      border: '1px solid grey',\n      borderRadius: '5px'\n    });\n\n  const santatize_key = key => key.replace('_', ' ');\n\n  const santatize_value = val => typeof(val) === 'number' ? format_val(val): val;\n\n\n  const show = function(d, mouse_event){\n    // By filtering I avoid errors caused by not having data for something\n    const table_body = Object.keys(d)\n      .filter(key => fields_to_show.includes(key))\n      .sort((a,b) => a == 'code' ? -1 : 1) // trick to make sure code field shows up first\n      .reduce((table, key) =>\n        table + `<tr>\n                  <td style='text-align:right'>${santatize_key(key)}<\/td>\n                  <td style='text-align:left; padding-left: 1rem'>${santatize_value(d[key])}<\/td>\n                <\/tr>`, '');\n\n      const tooltip_content = `<table> ${table_body} <\/table>`;\n\n      const parent_width = +tooltip.parent().style('width').replace('px', '');\n      const parent_height = +tooltip.parent().style('height').replace('px', '');\n\n      //debugger;\n      const [event_x, event_y] = d3.clientPoint(tooltip.parent().node(), mouse_event);\n\n      const on_left_half = event_x < parent_width/2;\n      const on_upper_half = event_y < parent_height/2;\n\n      const offset = 5;\n\n      const style_positioning = {\n         display: 'block',\n       };\n\n      if(on_left_half){\n        style_positioning.left = event_x + offset;\n        style_positioning.right = 'auto';\n      } else {\n        style_positioning.right = parent_width - event_x + 2*offset;\n        style_positioning.left = 'auto';\n      }\n\n      if(on_upper_half){\n        style_positioning.top = event_y + offset;\n        style_positioning.bottom = 'auto';\n      } else {\n        style_positioning.bottom = parent_height - event_y + 2*offset;\n        style_positioning.top = 'auto';\n      }\n\n\n      //debugger;\n      tooltip\n       .st(style_positioning)\n       .html(tooltip_content);\n  };\n\n  const hide = function(){\n    tooltip\n      .st({\n        left: 0,\n        top: 0,\n        display: 'none',\n      });\n  };\n\n  // Start tooltip hidden.\n  hide();\n\n  return {show, hide}\n}\n\n\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/upset/helpers.js */\n// Helper functions for upset plot\n\nfunction remove_zero_tick(axis){\n  // Get rid of the zero tick value on an axis for cleanliness\n  axis.selectAll('.tick')\n    .filter(d => d === 0)\n    .remove();\n}\n\n\n// Function to filter data down to the minimum desired set size\nfunction filter_set_size(data, marginal_data, min_set_size = 100){\n  // Filter the main dataset down\n  const filtered_data = data\n    .filter(d => d.count >= min_set_size)\n    .sort((a,b) => b.count - a.count);\n\n  // Get the remaining codes present after filtering\n  const distinct_codes = unique(filtered_data.map(d => d.pattern).join('-').split('-'));\n\n  // Filter the marginal data down to just the remaining codes\n  const filtered_marginals = marginal_data\n    .filter(d => distinct_codes.includes(d.code));\n\n  return {\n    patterns: filtered_data,\n    marginals: filtered_marginals,\n  };\n}\n\n\nfunction setup_set_size_x_scale(patterns, sizes){\n  // Setup the x-scale for counts of the patterns\n  return d3.scaleLinear()\n    .range([sizes.set_size_bars_w, 0])\n    .domain([0, d3.max(patterns, d=> d.count)]);\n}\n\n\n// Extract information about where on the screen each code in a pattern is\n// Also returns the extent of those ranges for drawing the little bars\n// that connect the patterns\nfunction get_pattern_info(d, scales) {\n  const positions_of_codes = d.pattern\n    .split('-')\n    .map(p => ({\n      code: p,\n      pos: scales.matrix_width_scale(p) + scales.matrix_width_scale.bandwidth()/2,\n    }));\n\n  const range_of_pattern = d3.extent(positions_of_codes, d => d.pos);\n\n  return {\n    positions: positions_of_codes,\n    range: range_of_pattern,\n  };\n}\n\n\n//-------------------------------------------------------\n// Functions for drawing the four components of the chart\n//-------------------------------------------------------\n\n// Draw the dot matrix in the middle of plot that shows patterns\nfunction draw_pattern_matrix(g, patterns, marginals, scales, sizes){\n  g.html('');\n\n  const matrix_rows = g.selectAll('.matrix_row')\n    .data(patterns)\n    .enter().append('g.matrix_row')\n    .translate((d,i) => [0, scales.pattern_y(i) + scales.matrix_row_height/2] );\n\n  // Light grey dots in the background to show possible codes\n  matrix_rows.selectAll('.background_dots')\n    .data(marginals.map(d => d.code))\n    .enter().append('circle')\n    .attr('class', 'allCodes')\n    .at({\n      cx: d => scales.matrix_width_scale(d) + scales.matrix_width_scale.bandwidth()/2,\n      r: scales.matrix_dot_size,\n      fill: colors.code_missing,\n      fillOpacity: 0.5,\n    });\n\n  // Thin lines that span code range\n  matrix_rows.selectAppend('line.pattern_extent')\n    .at({\n      x1: d => get_pattern_info(d, scales).range[0],\n      x2: d => get_pattern_info(d, scales).range[1],\n      stroke: colors.pattern_bar,\n      strokeWidth: scales.matrix_dot_size/2\n    });\n\n  // Shaded present-codes dots\n  matrix_rows.selectAll('.present_code_dots')\n    .data(d => get_pattern_info(d, scales).positions)\n    .enter().append('circle')\n    .at({\n      class: 'presentCodes',\n      cx: d => d.pos,\n      r: scales.matrix_dot_size,\n      fill: d => scales.code_to_color[d.code],\n    });\n\n\n  //// Axis\n  const matrix_axis = g.selectAppend(\"g.matrix_axis\")\n    .call(d3.axisBottom().scale(scales.matrix_width_scale))\n    .translate([0, sizes.matrix_plot_h]);\n\n  // Shift text for legibility\n  matrix_axis\n    .selectAll(\"text\")\n    .at({\n      x: -7,\n      y: -1,\n      textAnchor: 'end',\n      transform: 'rotate(-75)',\n      fontSize:12\n    });\n  // remove horizontal bar\n  matrix_axis.select('.domain').remove();\n\n\n}\n\n// Draw the left-side bar chart that shows the how many instances of a given pattern are in data\nfunction draw_pattern_count_bars(g, patterns, scales, sizes){\n\n  const pattern_count_bars = g.selectAll('rect')\n    .data(patterns, d => d.pattern);\n\n  const ending_attrs = {\n    fill: colors.pattern_count_bars,\n    x: d => scales.set_size_x(d.count),\n    y: (d,i) => scales.pattern_y(i) + scales.matrix_row_height/2 - scales.set_size_bar_height/2,\n    height: scales.set_size_bar_height,\n    width: d => scales.set_size_x(0) - scales.set_size_x(d.count),\n  };\n\n  const starting_attrs = {\n    x: sizes.set_size_bars_w,\n    y: (d,i) => scales.pattern_y(i) + scales.matrix_row_height/2 - scales.set_size_bar_height/2,\n    height: scales.set_size_bar_height,\n    fill: 'green',\n  };\n\n  // Exit\n  pattern_count_bars.exit().remove();\n\n  // Append-Update\n  pattern_count_bars.enter()\n    .append('rect.pattern_count_bars')\n    .at(starting_attrs)\n    .merge(pattern_count_bars)\n    .transition()\n    .at(ending_attrs);\n\n\n  //// Pattern count bars axis\n  const axis = g.selectAppend(\"g.axis\")\n    .translate([0, sizes.matrix_plot_h])\n    .call(d3.axisBottom()\n            .scale(scales.set_size_x)\n            .ticks(5)\n            .tickSizeOuter(0) );\n\n  axis.selectAll(\"text\")\n    .at({\n      x: -2,\n      y: +4,\n      textAnchor: 'end',\n    });\n\n  // Get rid of the zero tick value for cleanliness\n  //remove_zero_tick(axis);\n\n   // Title subplot\n  g.selectAppend('text.title')\n    .at({\n      textAnchor: 'middle',\n      y: sizes.matrix_plot_h + sizes.margin.bottom - sizes.padding*2.5,\n    })\n    .html(`<tspan>Pattern frequency<\/tspan>\n           <tspan font-size='13px' dy='15'>(drag handle to change threshold)<\/tspan>`)\n    .selectAll('tspan')\n      .attr('x', sizes.set_size_bars_w/2);\n}\n\n// Draw right hand size risk ratio estimate and confidence intervals for each pattern\nfunction draw_rr_intervals(g, patterns, scales, sizes){\n\n  const size_of_pe = Math.min(scales.matrix_row_height/2, 7);\n  const size_of_interval_line = Math.max(1, size_of_pe/2);\n\n  // Axis\n  const axis = g.selectAppend(\"g.rr_intervals_axis\")\n    .translate([0,sizes.matrix_plot_h])\n    .call(d3.axisBottom()\n      .scale(scales.rr_x)\n      .ticks(5)\n      .tickSizeOuter(0));\n\n  axis.selectAll(\"text\")\n    .at({\n      x: 2,\n      y: 4,\n      textAnchor: 'start',\n    });\n\n  // Guide line at RR = 1 for reference of 'null'\n  axis.selectAll('.tick line')\n    .at({\n      y1: d => d === 1 ? -sizes.matrix_plot_h: 0,\n    });\n\n\n  let rr_lines = g.selectAll('.rr_intervals')\n    .data(patterns, d => d.pattern);\n\n  rr_lines.exit().remove();\n\n  // Now draw the intervals\n  rr_lines =  rr_lines.enter()\n    .append('g.rr_intervals')\n    .merge(rr_lines)\n    .transition()\n    .translate((d,i) => [0, scales.pattern_y(i) + scales.matrix_row_height/2]);\n\n  rr_lines.each(function(d){\n\n    const is_null_interval = (d.upper === null) || (d.lower === null);\n\n    const rr_g = d3.select(this);\n\n    // Draw intervals\n\n    // No need to draw interval if it's not defined.\n    if(!is_null_interval){\n      rr_g.selectAppend('line')\n        .at({\n          x1: scales.rr_x(d.lower),\n          x2: scales.rr_x(d.upper),\n          stroke: colors.rr_interval,\n          strokeWidth: size_of_interval_line,\n        });\n    }\n\n    const point_est_circle = rr_g.selectAppend('circle')\n      .at({\n        cx: scales.rr_x(d.pointEst),\n        r: size_of_pe\n      });\n\n    if(is_null_interval){\n      point_est_circle\n        .at({\n          fill: colors.null_rr_interval,\n          fillOpacity: 0.1,\n          stroke: colors.null_rr_interval,\n          strokeWidth: 1.5,\n          opacity: 0.5,\n        });\n    } else {\n      point_est_circle\n        .at({\n          fill: colors.rr_interval\n        });\n    }\n\n  });\n\n  // Title subplot\n  g.selectAppend('text.title')\n    .text(\"Relative risk\")\n    .at({\n      textAnchor: 'middle',\n      y: sizes.matrix_plot_h + sizes.margin.bottom - sizes.padding*2.5,\n      x: sizes.rr_plot_w/2,\n    });\n}\n\n// Draw the top of the chart individual code marginal count bars\nfunction draw_code_marginal_bars(g, marginals, scales, sizes){\n  const t = d3.transition().duration(500);\n\n  // Now draw the intervals\n  const code_marginal_bars = g.selectAll('.code_marginal_bar')\n    .data(marginals, d => d.code);\n\n  // Exit\n  code_marginal_bars.exit()\n    .transition(t)\n    .at({\n      y: sizes.margin_count_h,\n      height: 0,\n    })\n    .remove();\n\n  // Append\n  code_marginal_bars.enter()\n    .append('rect.code_marginal_bar')\n    .at({\n       y: sizes.margin_count_h,\n       x: d => scales.matrix_width_scale(d.code),\n       fill: d => scales.code_to_color[d.code],\n    })\n    .merge(code_marginal_bars)\n    .transition(t)\n    .at({\n      x: d => scales.matrix_width_scale(d.code),\n      y: d => scales.marginal_y(d.count),\n      width: scales.matrix_column_width,\n      height: d => sizes.margin_count_h - scales.marginal_y(d.count),\n    });\n\n   // Axis\n  const axis = g.selectAppend(\"g.code_marginal_bars_axis\")\n    .call(\n      d3.axisLeft()\n        .scale(scales.marginal_y)\n        .ticks(5)\n        .tickSizeOuter(0)\n    );\n\n  // Get rid of the zero tick value for cleanliness\n  remove_zero_tick(axis);\n\n  axis.selectAll(\"text\")\n    .at({\n      y: -5,\n      x: -4,\n    });\n\n}\n\n\n//-------------------------------------------------------\n// Functions for setting up interaction components\n//-------------------------------------------------------\n\n// Creates invisible bars across each pattern for event detection\nfunction create_pattern_interaction_layer(g, patterns, scales, sizes, callbacks){\n  g.html('');\n\n  // Draws invisible selection rectangles over the horizontal patterns\n  // That enable various interaction popups etc.\n  const pattern_rows = g.selectAll('.pattern_row')\n    .data(patterns)\n    .enter().append('g.pattern_row')\n    .translate((d,i) => [-sizes.padding, scales.pattern_y(i)] )\n    .selectAppend('rect')\n      .classed('interaction_box', true)\n      .at({\n        width: sizes.w + 2*sizes.padding,\n        height: scales.matrix_row_height,\n      })\n      .at(interaction_box_styles);\n\n  // Apply desired callbacks\n  Object.keys(callbacks).forEach(name => {\n    pattern_rows.on(name, callbacks[name]);\n  });\n}\n\n// Creates invisible vertical bars for each code for event detection\nfunction create_code_interaction_layer(g, marginals, scales, sizes, callbacks){\n  g.html('');\n\n  // Draws invisible selection rectangles over the vertical patterns\n  const code_cols = g.selectAll('.code_col')\n    .data(marginals)\n    .enter().append('g.code_col')\n    .translate((d,i) => [scales.matrix_width_scale(d.code), -sizes.padding])\n    .selectAppend('rect')\n      .classed('interaction_box', true)\n      .at({\n        width: scales.matrix_column_width,\n        height: sizes.h + sizes.margin.bottom + sizes.padding\n      })\n      .at(interaction_box_styles);\n\n  // Apply desired callbacks\n  Object.keys(callbacks).forEach(name => {\n    code_cols.on(name, callbacks[name]);\n  });\n}\n\n// Appends a small slider the user can use to filter what the minimumn size of the cases they want is\nfunction make_set_size_slider(g, set_size_x, sizes, starting_min_size, on_release){\n  // How far we let the slider go in either direction\n  const [range_min, range_max] = set_size_x.domain();\n\n  // These are mutated to keep track of state of drag\n  let desired_size = starting_min_size;\n  let below_max = true;\n  let above_min = true;\n\n  const handle_w = 20;\n  const handle_h = 17;\n  const padding_top = 15;\n\n  const default_handle_style = {\n    strokeWidth: 1,\n    stroke: 'rgba(0,0,0,0.5)'\n  };\n  const selected_handle_style = {\n    strokeWidth: 2,\n    stroke: 'rgba(0,0,0,1)'\n  };\n\n  // Setup handle container\n  const handle = g.selectAppend('g.handle')\n    .style('cursor', 'grab'); // Make cursor a hand to emphasize grabability of handle\n\n  // Add a rectangle background\n  const handle_rect = handle.selectAppend('rect')\n    .at({\n      width: handle_w,\n      height: handle_h,\n      fill: colors.silder_handle,\n      fillOpacity: 0.6,\n      rx: 7,\n    });\n\n\n  // Add vertical line marking exact cutoff position\n  const handle_pointer = handle.selectAppend('line')\n    .at({\n      x1: handle_w/2,\n      x2: handle_w/2,\n      y1: -padding_top,\n      y2: 0,\n    })\n    .at(default_handle_style);\n\n\n  // Add text that shows value while dragging\n  const handle_text = handle.selectAppend('text')\n    .at({\n      textAnchor: 'end',\n      y: handle_h/2 + 2,\n      x: -2,\n      alignmentBaseline: 'middle',\n      dominantBaseline: 'middle',\n      opacity: 0,\n    });\n\n  // Function to move handle in x-direction\n  const move_handle = x => handle.translate([x - handle_w/2, padding_top]);\n\n  handle.call(\n    d3.drag()\n      .on(\"start\", dragstarted)\n      .on(\"drag\",dragged)\n      .on(\"end\", dragended)\n  );\n\n  function dragstarted(d) {\n    // Put a outline around handle to show it was selected\n    handle_rect.at(selected_handle_style);\n    handle_pointer.at(selected_handle_style);\n\n    // Show the min-size text for precision changing\n    handle_text.attr('opacity', 1);\n  }\n\n  function dragged(d) {\n    desired_size = set_size_x.invert(d3.event.x);\n    below_max = desired_size < range_max;\n    above_min = desired_size > range_min;\n\n    if(below_max && above_min){\n      move_handle(d3.event.x);\n      handle_text.text(`size > ${countFormat(desired_size)}`);\n    }else {\n      desired_size = !above_min ? range_min : range_max;\n    }\n  }\n\n  function dragended(d) {\n    // Reset outline of handle\n    handle_rect.at(default_handle_style);\n    handle_pointer.at(default_handle_style);\n\n    // Hide text again\n    handle_text.attr('opacity', 0);\n\n    const new_desired_size = set_size_x.invert(d3.event.x);\n    on_release(desired_size);\n  }\n\n  // Initialize handle position\n  move_handle(set_size_x(starting_min_size));\n}\n\n// Creates a panel that can display text wherever it is placed\n// Returns methods to update, show, and hide info\nfunction create_info_panel(g, panel_size, side = 'left'){\n  const width = panel_size[0];\n  const panel = g.selectAppend('g.info');\n\n  let text_x = width/2,\n      font_size = '24px',\n      text_anchor = 'middle';\n\n  if(width > 300){\n    // Very big\n    // No changes to defaults\n  } else if (width > 200){\n    // Big\n    font_size = '22px';\n  } else if (width > 150){\n    // Medium\n    font_size = '20px';\n  } else if (width > 100){\n    // Small\n    text_x = side == 'left' ? 0 : width;\n    font_size = '18px';\n    text_anchor =  side == 'left' ? 'start' : 'end';\n  } else {\n    // Tiny\n    text_x = side == 'left' ? 0 : width;\n    font_size = '15px';\n    text_anchor = side == 'left' ? 'start' : 'end';\n  }\n\n  panel.selectAppend('rect')\n    .at({\n      width: panel_size[0],\n      height: panel_size[1],\n      fillOpacity: 0,\n    });\n\n  const panel_text = panel.selectAppend('text')\n    .at({\n      y: panel_size[1]/2,\n      x: text_x,\n    })\n    .st({\n      fontSize: font_size, // make font size's mildly responsive to try and avoid overlapping axis\n      alignmentBaseline: 'middle',\n      dominantBaseline: 'middle',\n      textAnchor: text_anchor,\n    });\n\n  function update(content_array){\n    panel_text.html(content_array);\n\n    // If we have tspans make sure they are centered where they should be\n    panel_text.selectAll('tspan')\n      .attr('x', text_x);\n\n    return this;\n  }\n  function hide(){\n    panel.attr('opacity', 0);\n    return this;\n  }\n  function show(){\n    panel.attr('opacity', 1);\n    return this;\n  }\n\n  // Start with panel hidden\n  hide();\n\n  return {\n    update,\n    hide,\n    show,\n  };\n}\nsvg = d3.select(svg.node());\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/upset/upset.js */\n// !preview r2d3 data = readr::read_rds(here::here('data/fake_upset_main.rds')), options = readr::read_rds(here::here('data/fake_upset_options.rds')), dependencies = c(\"d3-jetpack\", here::here('inst/d3/helpers.js'), here::here('inst/d3/upset/helpers.js')), css=c(here::here('inst/d3/upset/upset.css'), here::here('inst/css/common.css'))\n\nlet viz_data = data,\n    viz_svg = svg,\n    viz_options = options,\n    viz_width = width,\n    viz_height = height;\n\nlet highlighted_pattern;\n\n// Constants\nconst margin = {right: 50, left: 50, top: 20, bottom: 70}; // margins on side of chart\n\nconst colors = {\n  pattern_count_bars: viz_options.colors.light_blue,\n  rr_interval: viz_options.colors.dark_red,\n  null_rr_interval: 'black',\n  code_missing: viz_options.colors.dark_grey,\n  pattern_bar: \"#252525\",\n  interaction_box_border: viz_options.colors.med_grey,\n  silder_handle: viz_options.colors.green,\n};\n\nconst interaction_box_styles = {\n  opacity: 0.8,\n  fillOpacity: 0,\n  rx: 5,\n  stroke: 'grey',\n  strokeWidth: 0\n};\n\nconst selected_interaction_box = {\n  fillOpacity: 0.5,\n  fill: 'grey',\n};\n\n// Function to generate all scales from data and a given size plot\nfunction setup_scales(patterns, marginal, sizes, set_size_x){\n\n  const {set_size_bars_w,\n         rr_plot_w,\n         matrix_plot_w,\n         matrix_plot_h,\n         margin_count_h,\n         matrix_padding,\n         padding } = sizes;\n\n  // Place codes on x-axis of matrix\n  const matrix_width_scale = d3.scaleBand()\n    .domain(marginal.map(d => d.code))\n    .range([matrix_padding, matrix_plot_w - matrix_padding])\n    .round(true)\n    .padding(0.05); // goes from right to left into left margin.\n\n  // Make the top margin bars a tiny bit narrower than the columns of our matrix for breathing room\n  const matrix_column_width = matrix_width_scale.bandwidth();\n\n  // Setup the x-scale for counts of the patterns\n  //const set_size_x = setup_set_size_x_scale(patterns,sizes);\n\n  // X scale for the relative risk intervals\n  const rr_x = d3.scaleLinear()\n    .range([0,rr_plot_w])\n    .domain([0,d3.max(patterns, d => d.upper)]);\n\n  // Y scale for patterns in all lower charts, domain is index of pattern\n  const pattern_y = d3.scaleLinear()\n    .range([0, matrix_plot_h])\n    .domain([0, patterns.length]);\n\n  // How thick each pattern's count bar is\n  const matrix_row_height = pattern_y(1) - pattern_y(0);\n  const set_size_bar_height = matrix_row_height*0.9;\n\n  // Continuous y count scale for the code marginals\n  const marginal_y = d3.scaleLinear()\n    .range([margin_count_h, 0])\n    .domain([0, d3.max(marginal, d => d.count)]);\n\n  // How big should the dots be in matrix?\n  const matrix_dot_size = (Math.min(matrix_column_width, matrix_row_height)*0.9)/2;\n\n  return {\n    matrix_width_scale,\n    set_size_x,\n    set_size_bar_height,\n    rr_x,\n    pattern_y,\n    marginal_y,\n    matrix_dot_size,\n    matrix_row_height,\n    matrix_column_width,\n    code_to_color: viz_options.code_to_color, // attach color information to scales for each code\n  };\n}\n\nfunction setup_chart_sizes(width, height, margin, only_snps){\n  const set_size_bars_units = 1;\n  const rr_plot_units = only_snps ? 0 : 1;\n  const matrix_plot_units = 0.7;\n  const marginal_count_prop = 0.3;\n  const total_width_units = set_size_bars_units + rr_plot_units + matrix_plot_units;\n\n  const h = height - margin.top - margin.bottom;\n  const w = width - margin.left - margin.right;\n\n  return {\n    set_size_bars_w: w*(set_size_bars_units/total_width_units),\n    rr_plot_w: w*(rr_plot_units/total_width_units),\n    matrix_plot_w: w*(matrix_plot_units/total_width_units),\n    margin_count_h: h*marginal_count_prop,\n    matrix_plot_h: h*(1 - marginal_count_prop),\n    matrix_padding: 10,\n    padding: 10,\n    w,\n    h,\n    margin,\n  };\n}\n\nfunction draw_with_set_size(g, min_set_size, sizes, set_size_x, only_snp_data){\n  const {patterns, marginals} = filter_set_size(viz_data, viz_options.marginalData, min_set_size);\n\n  // Setup the scales\n  const scales = setup_scales(patterns, marginals, sizes, set_size_x);\n\n  // ----------------------------------------------------------------------\n  // Chart Components\n  // ----------------------------------------------------------------------\n  const matrix_chart = g.selectAppend('g.matrix_chart')\n    .translate([sizes.set_size_bars_w, sizes.margin_count_h])\n    .call(draw_pattern_matrix, patterns, marginals, scales, sizes);\n\n  const pattern_size_bars = g.selectAppend('g.pattern_size_bars')\n    .translate([0, sizes.margin_count_h])\n    .call(draw_pattern_count_bars, patterns, scales, sizes);\n\n  if(only_snp_data){\n    // Make sure to remove any lingering snp info\n    g.select('g.rr_intervals').remove();\n  } else {\n     const rr_intervals = g.selectAppend('g.rr_intervals')\n      .translate([sizes.set_size_bars_w + sizes.matrix_plot_w, sizes.margin_count_h])\n      .call(draw_rr_intervals, patterns, scales, sizes);\n  }\n\n  const code_marginal_bars = g.selectAppend('g.code_marginal_bars')\n    .translate([sizes.set_size_bars_w,0])\n    .call(draw_code_marginal_bars, marginals, scales, sizes);\n\n  // ----------------------------------------------------------------------\n  // Interaction setup and logic\n  // ----------------------------------------------------------------------\n  const left_info_panel = create_info_panel(\n    g.selectAppend('g.left_info_panel'),\n    [sizes.set_size_bars_w, sizes.margin_count_h-sizes.padding*2],\n    'left'\n  );\n\n  const right_info_panel = create_info_panel(\n    g.selectAppend('g.right_info_panel')\n      .translate([sizes.set_size_bars_w + sizes.matrix_plot_w, 0]),\n    [sizes.set_size_bars_w, sizes.margin_count_h-sizes.padding*2],\n    'right'\n  );\n\n  const reset_and_highlight = function(node_to_highlight, already_highlighted){\n    // Reset all boxes\n    svg.selectAll('rect.interaction_box').at(interaction_box_styles)\n    if(!already_highlighted){\n      node_to_highlight.at(selected_interaction_box);\n    }\n  }\n\n  const pattern_callbacks = {\n    mouseover: function(d){\n      const line_height = 22;\n\n      const rr_message = `\n      <tspan>RR: ${CiFormat(d.pointEst)}<\/tspan>\n      <tspan dy=\"${line_height}\">(${CiFormat(d.lower)}, ${CiFormat(d.upper)})<\/tspan>`;\n\n      const size_message = `\n      <tspan>Appears in<\/tspan>\n      <tspan dy=\"${line_height}\">${countFormat(d.count)} subjects<\/tspan>`;\n      const codes_in_pattern = d.pattern.split('-');\n\n      // Update right panel with rr info\n      right_info_panel.update(rr_message).show();\n      left_info_panel.update(size_message).show();\n\n      // highlight pattern\n      d3.select(this).attr('stroke-width', 0.8);\n    },\n    mouseout: function(d){\n      right_info_panel.hide();\n      left_info_panel.hide();\n      d3.select(this).attr('stroke-width', 0);\n  },\n    click: function(d){\n      const already_highlighted = highlighted_pattern === d.pattern;\n      reset_and_highlight(d3.select(this), already_highlighted);\n      if(already_highlighted){\n        // Unhighlight and send to shiny\n        highlighted_pattern = null;\n        send_to_shiny('pattern_highlight', [], viz_options.msg_loc || 'no_shiny');\n      } else {\n        // Otherwise, parse the pattern and send to shiny\n        highlighted_pattern = d.pattern;\n        const codes_in_pattern = d.pattern.split('-');\n        send_to_shiny('pattern_highlight', codes_in_pattern, viz_options.msg_loc || 'no_shiny');\n      }\n    }\n  };\n\n  const code_callbacks = {\n    mouseover: function(d){\n      const line_height = 22;\n\n      left_info_panel.update(`Code: ${d.code}`).show();\n\n      right_info_panel.update(`\n        <tspan>Appears<\/tspan>\n        <tspan dy=\"${line_height}\">${countFormat(d.count)} times<\/tspan>`\n      ).show();\n\n      // highlight\n      d3.select(this).attr('stroke-width', 0.8);\n    },\n    mouseout: function(d){\n      left_info_panel.hide();\n      right_info_panel.hide();\n      d3.select(this).attr('stroke-width', 0);\n    },\n    click: function(d){\n\n      const already_highlighted = highlighted_pattern === d.code;\n\n      reset_and_highlight(d3.select(this), already_highlighted);\n\n      // Reset all boxes\n      if(already_highlighted){\n        highlighted_pattern = null;\n        send_to_shiny('code_highlight', [], viz_options.msg_loc || 'no_shiny');\n      } else {\n        highlighted_pattern = d.code;\n        send_to_shiny('code_highlight', [d.code], viz_options.msg_loc || 'no_shiny');\n      }\n    }\n  };\n\n  const code_interaction_layer = g.selectAppend('g.code_interaction_layer')\n    .translate([sizes.set_size_bars_w,0])\n    .call(create_code_interaction_layer, marginals, scales, sizes, code_callbacks);\n\n  const pattern_interaction_layer = g.selectAppend('g.pattern_interaction_layer')\n    .translate([0, sizes.margin_count_h])\n    .call(create_pattern_interaction_layer, patterns, scales, sizes, pattern_callbacks);\n}\n\nfunction draw_upset(){\n  // ----------------------------------------------------------------------\n  // Start main visualization drawing\n  // ---------------------------------------------------------------------\n\n  const filtered_on_snp = viz_data.filter(d => d.num_snp < d.count).length === 0;\n\n  // Setup the sizes of chart components\n  const sizes = setup_chart_sizes(viz_width, viz_height, margin, filtered_on_snp);\n\n  // Get a set_size scale for use with slider\n  const set_size_x = setup_set_size_x_scale(viz_data, sizes);\n\n  // Add a g to pad chart\n  const g = svg.selectAppend('g.padding')\n    .translate([sizes.margin.left, sizes.margin.top]);\n\n  // Check if we have enough data to make a meaningful upset chart\n  if(viz_data.length < 2){\n    const lead_message = viz_data.length === 1 ? \"Only one group meets\" : \"No groups meet\";\n    svg.append('text')\n      .attr('text-anchor', 'middle')\n      .tspans([`${lead_message} filter size threshold`, 'Adjust threshold down to see groups.'])\n      .attr('x', viz_width/2)\n      .attr('y', viz_height/2);\n\n  } else {\n    // Figure out starting min_set_size.\n    const sorted_sizes = viz_data.map(d => d.count).sort((a,b) => b - a);\n\n    // How many patterns will be shown with default min size?\n    const num_patterns_shown = sorted_sizes.findIndex(d => d < viz_options.min_set_size);\n\n    // If the viz is only showing 2 or fewer patterns adjust min size to show at least 2.\n    const starting_min_size = num_patterns_shown < 2 ? sorted_sizes[1]: viz_options.min_set_size;\n\n    // Setup the size slider\n    const set_size_slider =  g.selectAppend('g.set_size_slider')\n      .translate([0, sizes.h])\n      .call(make_set_size_slider,\n        set_size_x,\n        sizes,\n        starting_min_size,\n        new_size => draw_with_set_size(g, new_size, sizes, set_size_x, filtered_on_snp));\n\n    // Initialize viz\n    draw_with_set_size(g, starting_min_size, sizes, set_size_x, filtered_on_snp);\n  }\n};\n\n\nr2d3.onRender((data, svg, width, height, options) => {\n  viz_data = data;\n  viz_svg = svg;\n  viz_options = options;\n  draw_upset();\n});\n\nr2d3.onResize((width,height) => {\n  viz_width = width;\n  viz_height = height;\n\n  draw_upset(viz_data, viz_svg, viz_width, viz_height, viz_options);\n});\n\n\n\n};",
        "style": "/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/helpers.css */\n/*@import url('https://fonts.googleapis.com/css?family=Maven+Pro&display=swap');\n@import url('https://fonts.googleapis.com/css?family=Montserrat:300,400|Raleway&display=swap');\n*/\n\n\n/* ================================================== */\n/* Table */\n/* ================================================== */\n\n\n/* ================================================== */\n/* Table-wide style */\ntable {\n\tborder-collapse: collapse;\n\ttable-layout: fixed;\n}\n\n/*Individual cells for header and body */\ntd, th {\n\tpadding: 3px;\n\ttext-align: center;\n\tvertical-align: middle;\n}\n\n/* ================================================== */\n/* Table-body style */\ntbody{\n  display: block;\n  overflow: auto;\n}\n\n/* ================================================== */\n/* Header styling */\n\n/* Everything that composes the header */\nthead {\n  font-size: 0.95em;\n  font-weight: 600;\n}\n\n/* Entire row of the header */\nthead tr {\n   display: block;\n}\n\n/*Individual header cells */\nth {\n  background-color: #d9d9d9;\n}\n\n/* ================================================== */\n/* Row styling */\n\ntbody tr {\n  --row-height: 30px;\n  height: var(--row-height);\n}\n\n/* Zebra striping */\ntr:nth-of-type(even) {\n\tbackground: #f0f0f0;\n}\n\n/* Rows that have been selected */\ntr.selected{\n  background: #ff7f00;\n}\n\ntr.disabled{\n  opacity: 0.5;\n}\n\ntr div {\n  height: var(--row-height);\n  text-align: left;\n  overflow-x: auto;\n  width: 100%;\n  font-size: 0.8em;\n}\n\n/* Give text a bit of breathing room */\ntr div span {\n  padding-left: 0.2rem;\n}\n\n\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/d3/upset/upset.css */\nsvg text{\n  /*pointer-events: none;*/\n  fill: #4d4d4d;\n}\n\nsvg .tick {\n  opacity: 0.5;\n}\n\nsvg .title {\n  opacity: 0.7;\n}\n\nsvg .axisTitles {\n  text-anchor: middle;\n  font-size: 22px;\n  font-weight: bold;\n}\n\n/* R2D3 Source File:  /home/nick/explorer_apps/meToolkit/inst/css/common.css */\n/*\nFonts for app\n*/\n\nbody {\n  --main-text-color: #525252;\n}\n\nbody,\ntable,\nlabel,\nbutton,\nsvg text {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n}\n\n\nh1, h2, h3, h4 {\n  font-weight: 400;\n  color: #252525;\n}\n\np, span, table, label, button {\n  color: var(--main-text-color);\n}\n\nsvg text {\n  fill: var(--main-text-color);\n}\n\n\n\n/* Button Styles */\nbutton,\n.btn {\n  \t-moz-box-shadow:inset 0px 1px 0px 0px #ffffff;\n  \t-webkit-box-shadow:inset 0px 1px 0px 0px #ffffff;\n  \tbox-shadow:inset 0px 1px 0px 0px #ffffff;\n  \tbackground:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #ffffff), color-stop(1, #f6f6f6));\n  \tbackground:-moz-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\n  \tbackground:-webkit-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\n  \tbackground:-o-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\n  \tbackground:-ms-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\n  \tbackground:linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\n  \tfilter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#f6f6f6',GradientType=0);\n  \tbackground-color:#ffffff;\n  \t-moz-border-radius:6px;\n  \t-webkit-border-radius:6px;\n  \tborder-radius:6px;\n  \tborder:1px solid #dcdcdc;\n  \tdisplay:inline-block;\n  \tcursor:pointer;\n  \tpadding:6px 20px;\n  \ttext-decoration:none;\n  \ttext-shadow:0px 1px 0px #ffffff;\n  }\n\nbutton:hover,\n.btn:hover {\n\tbackground:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #f6f6f6), color-stop(1, #ffffff));\n\tbackground:-moz-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n\tbackground:-webkit-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n\tbackground:-o-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n\tbackground:-ms-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\n\tbackground:linear-gradient(to bottom, #f6f6f6 5%, #ffffff 100%);\n\tfilter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#f6f6f6', endColorstr='#ffffff',GradientType=0);\n\tbackground-color:#f6f6f6;\n}\n\nbutton:active,\n.btn:active {\n\tposition:relative;\n\ttop:1px;\n}\n\nspan.btn {\n  font-weight: 200;\n}\n\nbutton.btn {\n  font-size: 1rem;\n  font-weight: 400;\n}",
        "version": 5,
        "theme": {
          "default": {
            "background": "#FFFFFF",
            "foreground": "#000000"
          },
          "runtime": null
        },
        "useShadow": true
      },
      "evals": [

      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "d3v5",
          "version": "5.0.0",
          "src": {
            "href": "d3v5-5.0.0"
          },
          "meta": null,
          "script": "d3.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        },
        {
          "name": "d3-jetpack",
          "version": "2.0.9",
          "src": {
            "href": "d3-jetpack-2.0.9"
          },
          "meta": null,
          "script": "d3-jetpack.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        }
      ]
    },
    "ui": {
      "html": "<head>\n  <script src=\"https://unpkg.com/sweetalert/dist/sweetalert.min.js\"><\/script>\n  <script>\n      Shiny.addCustomMessageHandler('load_popup', function(message){\n        swal(Object.assign(\n        message,\n        {\n          button: {\n            text: 'Okay',\n            className: 'btn',\n          }\n        }\n        ));\n      });<\/script>\n  <style>\n      .swal-button {\n       color: dimgrey !important;\n      }\n    <\/style>\n<\/head>\n<style type=\"text/css\">/*\r\nFonts for app\r\n*/\r\n\r\nbody {\r\n  --main-text-color: #525252;\r\n}\r\n\r\nbody,\r\ntable,\r\nlabel,\r\nbutton,\r\nsvg text {\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n}\r\n\r\n\r\nh1, h2, h3, h4 {\r\n  font-weight: 400;\r\n  color: #252525;\r\n}\r\n\r\np, span, table, label, button {\r\n  color: var(--main-text-color);\r\n}\r\n\r\nsvg text {\r\n  fill: var(--main-text-color);\r\n}\r\n\r\n\r\n\r\n/* Button Styles */\r\nbutton,\r\n.btn {\r\n  \t-moz-box-shadow:inset 0px 1px 0px 0px #ffffff;\r\n  \t-webkit-box-shadow:inset 0px 1px 0px 0px #ffffff;\r\n  \tbox-shadow:inset 0px 1px 0px 0px #ffffff;\r\n  \tbackground:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #ffffff), color-stop(1, #f6f6f6));\r\n  \tbackground:-moz-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\r\n  \tbackground:-webkit-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\r\n  \tbackground:-o-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\r\n  \tbackground:-ms-linear-gradient(top, #ffffff 5%, #f6f6f6 100%);\r\n  \tbackground:linear-gradient(to bottom, #ffffff 5%, #f6f6f6 100%);\r\n  \tfilter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#f6f6f6',GradientType=0);\r\n  \tbackground-color:#ffffff;\r\n  \t-moz-border-radius:6px;\r\n  \t-webkit-border-radius:6px;\r\n  \tborder-radius:6px;\r\n  \tborder:1px solid #dcdcdc;\r\n  \tdisplay:inline-block;\r\n  \tcursor:pointer;\r\n  \tpadding:6px 20px;\r\n  \ttext-decoration:none;\r\n  \ttext-shadow:0px 1px 0px #ffffff;\r\n  }\r\n\r\nbutton:hover,\r\n.btn:hover {\r\n\tbackground:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #f6f6f6), color-stop(1, #ffffff));\r\n\tbackground:-moz-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\r\n\tbackground:-webkit-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\r\n\tbackground:-o-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\r\n\tbackground:-ms-linear-gradient(top, #f6f6f6 5%, #ffffff 100%);\r\n\tbackground:linear-gradient(to bottom, #f6f6f6 5%, #ffffff 100%);\r\n\tfilter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#f6f6f6', endColorstr='#ffffff',GradientType=0);\r\n\tbackground-color:#f6f6f6;\r\n}\r\n\r\nbutton:active,\r\n.btn:active {\r\n\tposition:relative;\r\n\ttop:1px;\r\n}\r\n\r\nspan.btn {\r\n  font-weight: 200;\r\n}\r\n\r\nbutton.btn {\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n}<\/style>\n<!DOCTYPE html>\n<!-- template.html -->\n\n<style>\n  body {\n    box-sizing: border-box;\n    margin: 0 2px;\n    background-color: #bdbdbd;\n    --app-header-height: 2.5rem;\n  }\n\n  .app-header {\n    height: var(--app-header-height);\n  }\n\n  .app-title {\n    height: 100%;\n    margin: 0;\n    padding: 0 0.5rem;\n    line-height: var(--app-header-height);\n  }\n\n  .template-section {\n    background-color: white;\n    box-shadow: 3px 3px 5px 0px rgba(0,0,0,0.49);\n    border-radius: 4px;\n    overflow: hidden;\n    --section-title-height: 2.3rem;\n  }\n\n  .template-parent {\n    height: calc(100vh - 2px - var(--app-header-height));\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-rows: repeat(4, 1fr);\n    grid-column-gap: 15px;\n    grid-row-gap: 15px;\n  }\n\n  .template-info-panel     { grid-area: 1 / 1 / 5 / 2; }\n  .template-manhattan-plot { grid-area: 1 / 2 / 5 / 4; }\n  .template-upset-plot     { grid-area: 1 / 4 / 3 / 6; }\n  .template-network-plot   { grid-area: 3 / 4 / 5 / 6; }\n\n  .template-section-title {\n    height: var(--section-title-height);\n    margin-top: 0;\n    margin-bottom: 0;\n    padding-left: 5px;\n    line-height: var(--section-title-height);\n    border-bottom: 1px solid dimgrey;\n  }\n\n  .template-section-body {\n    height: calc(100% - var(--section-title-height));\n  }\n\n<\/style>\n\n<div class = 'app-header'>\n  <h2 class = 'app-title'> \nPhewas Multimorbidity Explorer\n <\/h2>\n<\/div>\n<div class = 'template-parent'>\n  <div class = 'template-info-panel template-section'>\n    \n<div id=\"main_app-info_panel_main_dashboard-info_banner_metoolkit\" style=\"width:100%; height:100%; \" class=\"r2d3 html-widget html-widget-output\"><\/div>\n\n  <\/div>\n  <div class = 'template-manhattan-plot template-section'>\n    <h3 class = 'template-section-title'>\nInteractive Phewas Manhattan Plot\n<\/h3>\n    <div class = 'template-section-body'>\n      \n<div id=\"main_app-manhattan_plot_main_dashboard-manhattan_plot_and_table\" style=\"width:100%; height:100%; \" class=\"r2d3 html-widget html-widget-output\"><\/div>\n\n    <\/div>\n  <\/div>\n  <div class = 'template-upset-plot template-section'>\n     <h3 class = 'template-section-title'>\nComorbidity Upset Plot\n<\/h3>\n     <div class = 'template-section-body'>\n      \n<div id=\"main_app-upset_plot_main_dashboard-upset_plot\" style=\"width:100%; height:100%; \" class=\"r2d3 html-widget html-widget-output\"><\/div>\n\n     <\/div>\n  <\/div>\n  <div class = 'template-network-plot template-section'>\n    <h3 class = 'template-section-title'>\nSubject-Phecode Bipartite Network\n<\/h3>\n    <div class = 'template-section-body'>\n      \n<div class=\"network_module-network-plot\">\n  <style>\n    .network_module-network-plot {\n      height: 100%;\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      grid-template-rows: 2rem 1fr;\n      grid-column-gap: 0px;\n      grid-row-gap: 0px;\n      align-content: end;\n      justify-items: stretch;\n    }\n\n    .minor-allele-checkbox {\n      grid-area: 1 / 1 / 2 / 2;\n      text-align: left;\n    }\n\n    .minor-allele-legend {\n      grid-area: 1 / 2 / 2 / 3;\n      text-align: right;\n    }\n\n    .network_module-network-controls {\n      padding: 0.25rem;;\n      border-bottom: 1px solid #e4e0e0;\n      align-self: center;\n    }\n\n    .network_module-network_holder {\n      grid-area: 2 / 1 / 3 / 3;\n      min-height: 0;\n      max-height: 100%;\n    }\n    <\/style>\n  <div class=\"network_module-network-controls minor-allele-checkbox\">\n    <div class=\"form-group shiny-input-container\">\n      <div class=\"checkbox\">\n        <label>\n          <input id=\"main_app-network_plot_main_dashboard-snp_filter\" type=\"checkbox\"/>\n          <span>Just minor-allele carriers<\/span>\n        <\/label>\n      <\/div>\n    <\/div>\n  <\/div>\n  <div class=\"network_module-network-controls minor-allele-legend\">\n    <span>Copies of minor allele:<\/span>\n    <span style=\"border-radius: 15px;&#10;padding: 1px 6px;&#10;background: #bdbdbd;\">0<\/span>\n    <span style=\"border-radius: 15px;&#10;padding: 1px 6px;&#10;background: #fcbba1;\">1<\/span>\n    <span style=\"border-radius: 15px;&#10;padding: 1px 6px;&#10;background: #ef3b2c;\">2<\/span>\n  <\/div>\n  <div class=\"network_module-network_holder\">\n    <div id=\"main_app-network_plot_main_dashboard-plot\" style=\"width:100%; height:100%; \" class=\"r2d3 html-widget html-widget-output\"><\/div>\n  <\/div>\n<\/div>\n\n    <\/div>\n  <\/div>\n<\/div>\n",
      "deps": [
        {
          "name": "htmlwidgets",
          "version": "1.3",
          "src": {
            "href": "htmlwidgets-1.3"
          },
          "meta": null,
          "script": "htmlwidgets.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        },
        {
          "name": "r2d3-render",
          "version": "0.1.0",
          "src": {
            "href": "r2d3-render-0.1.0"
          },
          "meta": null,
          "script": "r2d3-render.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        },
        {
          "name": "webcomponents",
          "version": "2.0.0",
          "src": {
            "href": "webcomponents-2.0.0"
          },
          "meta": null,
          "script": "webcomponents.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": true
        },
        {
          "name": "r2d3-binding",
          "version": "0.2.3",
          "src": {
            "href": "r2d3-binding-0.2.3"
          },
          "meta": null,
          "script": "r2d3.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": false
        }
      ]
    }
  },
  "export": {

  }
}
